<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="PHP-FluxAPI">
  <file path="Api.php" hash="1197cfcb989b9147c0b4c5c15e6107f0" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="15" package="FluxAPI">
      <extends>\Pimple</extends>
      <name>Api</name>
      <full_name>\FluxAPI\Api</full_name>
      <docblock line="4">
        <description>This is the entry point for all API calls.</description>
        <long-description>&lt;p&gt;It contains magic methods to operate on all ressources and controllers.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
        <tag line="4" name="method" description="Creates and returns a new instance of _Model_. If $data is given the model will contain that initial data." type="\FluxAPI\Model" method_name="create_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$data]</name>
            <default/>
            <type>[array</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Loads a _Model_ by id or with a given query. If $format is given the model will be returned in the given format." type="\FluxAPI\Model" method_name="load_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query</name>
            <default/>
            <type>string|Query</type>
          </argument>
          <argument>
            <name>$format]</name>
            <default/>
            <type>[string</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Loads a list of _Model_s with a given query. If $format is given the models will be returned in the given format." type="\FluxAPI\Model" method_name="load_Model_s">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query]</name>
            <default/>
            <type>[Query</type>
          </argument>
          <argument>
            <name>$format]</name>
            <default/>
            <type>[string</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Saves a _Model_" type="\FluxAPI\Model" method_name="save_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$model</name>
            <default/>
            <type>Model</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Deletes a single _Model_ by id or by a given query" type="\FluxAPI\Model" method_name="delete_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query</name>
            <default/>
            <type>string|Query</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Deletes a list of _Model_s by a given query" type="\FluxAPI\Model" method_name="delete_Model_s">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query]</name>
            <default/>
            <type>[Query</type>
          </argument>
        </tag>
      </docblock>
      <constant namespace="FluxAPI" line="17" package="FluxAPI">
        <name>VERSION</name>
        <full_name>VERSION</full_name>
        <value>'0.1-DEV'</value>
      </constant>
      <constant namespace="FluxAPI" line="19" package="FluxAPI">
        <name>DATA_FORMAT_ARRAY</name>
        <full_name>DATA_FORMAT_ARRAY</full_name>
        <value>'array'</value>
      </constant>
      <constant namespace="FluxAPI" line="21" package="FluxAPI">
        <name>EARLY_EVENT</name>
        <full_name>EARLY_EVENT</full_name>
        <value>-512</value>
      </constant>
      <constant namespace="FluxAPI" line="22" package="FluxAPI">
        <name>LATE_EVENT</name>
        <full_name>LATE_EVENT</full_name>
        <value>512</value>
      </constant>
      <constant namespace="FluxAPI" line="24" package="FluxAPI">
        <name>PERMISSION_ALLOW</name>
        <full_name>PERMISSION_ALLOW</full_name>
        <value>'allow'</value>
      </constant>
      <constant namespace="FluxAPI" line="25" package="FluxAPI">
        <name>PERMISSION_DENY</name>
        <full_name>PERMISSION_DENY</full_name>
        <value>'deny'</value>
      </constant>
      <constant namespace="FluxAPI" line="27" package="FluxAPI">
        <name>MODEL_LOAD</name>
        <full_name>MODEL_LOAD</full_name>
        <value>'load'</value>
      </constant>
      <constant namespace="FluxAPI" line="28" package="FluxAPI">
        <name>MODEL_UPDATE</name>
        <full_name>MODEL_UPDATE</full_name>
        <value>'update'</value>
      </constant>
      <constant namespace="FluxAPI" line="29" package="FluxAPI">
        <name>MODEL_DELETE</name>
        <full_name>MODEL_DELETE</full_name>
        <value>'delete'</value>
      </constant>
      <constant namespace="FluxAPI" line="30" package="FluxAPI">
        <name>MODEL_CREATE</name>
        <full_name>MODEL_CREATE</full_name>
        <value>'create'</value>
      </constant>
      <constant namespace="FluxAPI" line="31" package="FluxAPI">
        <name>MODEL_SAVE</name>
        <full_name>MODEL_SAVE</full_name>
        <value>'save'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="36" namespace="FluxAPI" package="Default">
        <name>$app</name>
        <default>NULL</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag line="33" name="var" description="The silex app" type="\Silex\Application">
            <type by_reference="false">\Silex\Application</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="41" namespace="FluxAPI" package="Default">
        <name>$config</name>
        <default>array()</default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag line="38" name="var" description="FluxAPI configuration" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="49" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="43">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="43" name="param" description="" type="\Silex\Application" variable="$app">
            <type by_reference="false">\Silex\Application</type>
          </tag>
          <tag line="43" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$app</name>
          <default></default>
          <type>\Silex\Application</type>
        </argument>
        <argument line="49">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="160" package="FluxAPI">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="153">
          <description>Calls the magic methods</description>
          <long-description></long-description>
          <tag line="153" name="param" description="" type="\FluxAPI\" variable="$method"/>
          <tag line="153" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="153" name="return" description="" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="160">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="171" package="FluxAPI">
        <name>registerPluginMethods</name>
        <full_name>registerPluginMethods</full_name>
        <docblock line="165">
          <description>Registers all magic methods for a plugin</description>
          <long-description></long-description>
          <tag line="165" name="param" description="the plugin type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="param" description="the plugin name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="171">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="186" package="FluxAPI">
        <name>unregisterPluginMethods</name>
        <full_name>unregisterPluginMethods</full_name>
        <docblock line="180">
          <description>Unregisters all magic methods of a plugin</description>
          <long-description></long-description>
          <tag line="180" name="param" description="the plugin type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="180" name="param" description="the plugin name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="186">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="200" package="FluxAPI">
        <name>registerModelMethods</name>
        <full_name>registerModelMethods</full_name>
        <docblock line="195">
          <description>Registers all magic methods for a registered model</description>
          <long-description></long-description>
          <tag line="195" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="311" package="FluxAPI">
        <name>unregisterModelMethods</name>
        <full_name>unregisterModelMethods</full_name>
        <docblock line="306">
          <description>Unregisters all magic methods for a registered model</description>
          <long-description></long-description>
          <tag line="306" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="311">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="326" package="FluxAPI">
        <name>extendModel</name>
        <full_name>extendModel</full_name>
        <argument line="326">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="326">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="326">
          <name>$format</name>
          <default>self::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="331" package="FluxAPI">
        <name>reduceModel</name>
        <full_name>reduceModel</full_name>
        <argument line="331">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="331">
          <name>$fields</name>
          <default>NULL</default>
          <type>array</type>
        </argument>
        <argument line="331">
          <name>$format</name>
          <default>self::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="340" package="FluxAPI">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <docblock line="336">
          <description>Migrates the storage dabase(s) (for a given model)</description>
          <long-description></long-description>
          <tag line="336" name="param" description="" type="\FluxAPI\[string" variable="$model_name]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$model_name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="354" package="FluxAPI">
        <name>on</name>
        <full_name>on</full_name>
        <docblock line="346">
          <description>Adds an event listener that listens on the specified events.</description>
          <long-description></long-description>
          <tag line="346" name="param" description="The event to listen on" type="string" variable="$eventName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="346" name="param" description="The listener" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="346" name="param" description="The higher this value, the earlier an event&#10;                           listener will be triggered in the chain (defaults to 0)" type="integer" variable="$priority">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$eventName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="354">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
        <argument line="354">
          <name>$priority</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Api.php</error>
      <error line="326" code="50010">No DocBlock was found for method extendModel()</error>
      <error line="331" code="50010">No DocBlock was found for method reduceModel()</error>
      <error line="336" code="50014">Name of argument $model_name does not match with the DocBlock's name $model_name] in migrate()</error>
      <notice line="336" code="50013">Parameter $model_name] could not be found in migrate()</notice>
    </parse_markers>
  </file>
  <file path="FormatInterface.php" hash="0e3261b0ed44cbcdc6feea64b557f3a7" package="Default">
    <interface namespace="FluxAPI" line="5" package="Default">
      <name>FormatInterface</name>
      <full_name>\FluxAPI\FormatInterface</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="16" package="Default">
        <name>decode</name>
        <full_name>decode</full_name>
        <docblock line="7">
          <description>Converts data in the format to an array</description>
          <long-description>&lt;p&gt;You must implement this in method.&lt;/p&gt;</long-description>
          <tag line="7" name="param" description="" type="mixed" variable="$raw">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="7" name="param" description="" type="\FluxAPI\[array" variable="$options]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
          <tag line="7" name="return" description="" type="null|Array">
            <type by_reference="false">null</type>
            <type by_reference="false">Array</type>
          </tag>
        </docblock>
        <argument line="16">
          <name>$raw</name>
          <default></default>
          <type/>
        </argument>
        <argument line="16">
          <name>$options</name>
          <default>NULL</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="27" package="Default">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="18">
          <description>Converts an array to the format.</description>
          <long-description>&lt;p&gt;You must implement this in method.&lt;/p&gt;</long-description>
          <tag line="18" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="18" name="param" description="" type="\FluxAPI\[array" variable="$options]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
          <tag line="18" name="return" description="" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="27">
          <name>$options</name>
          <default>NULL</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="36" package="Default">
        <name>getExtension</name>
        <full_name>getExtension</full_name>
        <docblock line="29">
          <description>Returns the file extension of the format.</description>
          <long-description>&lt;p&gt;You must implement this in method.&lt;/p&gt;</long-description>
          <tag line="29" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="45" package="Default">
        <name>getMimeType</name>
        <full_name>getMimeType</full_name>
        <docblock line="38">
          <description>Returns the mime-type of the format.</description>
          <long-description>&lt;p&gt;You must implement this in method.&lt;/p&gt;</long-description>
          <tag line="38" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="50" package="Default">
        <name>setApi</name>
        <full_name>setApi</full_name>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag line="47" name="param" description="" type="\FluxAPI\Api" variable="$api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="59" package="Default">
        <name>encodeFromModel</name>
        <full_name>encodeFromModel</full_name>
        <docblock line="52">
          <description>Encodes a model instance.</description>
          <long-description></long-description>
          <tag line="52" name="param" description="" type="\FluxAPI\" variable="$model_name"/>
          <tag line="52" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="52" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="70" package="Default">
        <name>encodeFromModels</name>
        <full_name>encodeFromModels</full_name>
        <docblock line="61">
          <description>Encodes multiple model instances of same type.</description>
          <long-description>&lt;p&gt;You must implement this in method.&lt;/p&gt;</long-description>
          <tag line="61" name="param" description="" type="\FluxAPI\" variable="$model_name"/>
          <tag line="61" name="param" description="" type="array" variable="$models">
            <type by_reference="false">array</type>
          </tag>
          <tag line="61" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$models</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="79" package="Default">
        <name>decodeForModel</name>
        <full_name>decodeForModel</full_name>
        <docblock line="72">
          <description>Decodes encoded format for population of a single model instance.</description>
          <long-description></long-description>
          <tag line="72" name="param" description="" type="\FluxAPI\" variable="$model_name"/>
          <tag line="72" name="param" description="" type="\FluxAPI\" variable="$raw"/>
          <tag line="72" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$raw</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="88" package="Default">
        <name>decodeForModels</name>
        <full_name>decodeForModels</full_name>
        <docblock line="81">
          <description>Decodes encoded format for population of multiple model instances.</description>
          <long-description></long-description>
          <tag line="81" name="param" description="" type="\FluxAPI\" variable="$model_name"/>
          <tag line="81" name="param" description="" type="\FluxAPI\" variable="$raw"/>
          <tag line="81" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$raw</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="94" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="90">
          <description>Returns the name of the Format.</description>
          <long-description></long-description>
          <tag line="90" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FormatInterface.php</error>
      <error line="7" code="50014">Name of argument $options does not match with the DocBlock's name $options] in decode()</error>
      <error line="7" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $options in decode()</error>
      <notice line="7" code="50013">Parameter $options] could not be found in decode()</notice>
      <error line="18" code="50014">Name of argument $options does not match with the DocBlock's name $options] in encode()</error>
      <error line="18" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $options in encode()</error>
      <notice line="18" code="50013">Parameter $options] could not be found in encode()</notice>
      <error line="47" code="50012">No short description for method setApi()</error>
    </parse_markers>
  </file>
  <file path="CliApi.php" hash="f00f98f71911aca150795ed5385a0730" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="9" package="FluxAPI">
      <extends>\FluxAPI\Api</extends>
      <name>CliApi</name>
      <full_name>\FluxAPI\CliApi</full_name>
      <docblock line="5">
        <description>Command line FluxAPI</description>
        <long-description></long-description>
        <tag line="5" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="11" namespace="FluxAPI" package="Default">
        <name>$_cli_app</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="13" package="FluxAPI">
        <name>setCliApplication</name>
        <full_name>setCliApplication</full_name>
        <argument line="13">
          <name>$cli_app</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="18" package="FluxAPI">
        <name>run</name>
        <full_name>run</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file CliApi.php</error>
      <error line="11" code="50018">No DocBlock was found for property $_cli_app</error>
      <error line="13" code="50010">No DocBlock was found for method setCliApplication()</error>
      <error line="18" code="50010">No DocBlock was found for method run()</error>
    </parse_markers>
  </file>
  <file path="Model.php" hash="fd80de42bf921c711ff6f31c98818e32" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="11" package="FluxAPI">
      <extends/>
      <name>Model</name>
      <full_name>\FluxAPI\Model</full_name>
      <docblock line="4">
        <description>A Model definition plugin</description>
        <long-description>&lt;p&gt;All your model plugins must inherit form this class.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="FluxAPI" package="Default">
        <name>$_data</name>
        <default>array()</default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
          <tag line="13" name="var" description="Internal data" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="21" namespace="FluxAPI" package="Default">
        <name>$_loaded_relations</name>
        <default>array()</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="var" description="Internal lookup of already (lazy) loaded relation fields" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="FluxAPI" package="Default">
        <name>$_fields</name>
        <default>array()</default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag line="23" name="var" description="Internal list of field definitions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="FluxAPI" package="Default">
        <name>$_modified</name>
        <default>false</default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag line="28" name="var" description="Internal flag that's true if the model instance was modified since it was loaded" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="FluxAPI" package="Default">
        <name>$_api</name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag line="33" name="var" description="Api instance" type="\FluxAPI\Api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="43" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="38" name="param" description="if set the model will contain that initial data" type="\FluxAPI\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
        <argument line="43">
          <name>$data</name>
          <default>NULL</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="60" package="FluxAPI">
        <name>addField</name>
        <full_name>addField</full_name>
        <docblock line="53">
          <description>Adds a new field definition to the model</description>
          <long-description></long-description>
          <tag line="53" name="chainable" description=""/>
          <tag line="53" name="param" description="" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
          <tag line="53" name="return" description="$this" type="\FluxAPI\Model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="73" package="FluxAPI">
        <name>getField</name>
        <full_name>getField</full_name>
        <docblock line="67">
          <description>Returns a field definition by it's name</description>
          <long-description></long-description>
          <tag line="67" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="" type="null|\FluxAPI\Field">
            <type by_reference="false">null</type>
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="87" package="FluxAPI">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="82">
          <description>Returns all field definitions of this model</description>
          <long-description></long-description>
          <tag line="82" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="97" package="FluxAPI">
        <name>getRelationFields</name>
        <full_name>getRelationFields</full_name>
        <docblock line="92">
          <description>Returns all relation fields of this model</description>
          <long-description></long-description>
          <tag line="92" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="115" package="FluxAPI">
        <name>hasField</name>
        <full_name>hasField</full_name>
        <docblock line="109">
          <description>Checks if a field exists in the model</description>
          <long-description></long-description>
          <tag line="109" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="true if field exists, else false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="123" package="FluxAPI">
        <name>defineFields</name>
        <full_name>defineFields</full_name>
        <docblock line="120">
          <description>Defines field definitions of this model.</description>
          <long-description>&lt;p&gt;Extend this method in child classes while calling parent::defineFields()&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="137" package="FluxAPI">
        <name>setDefaults</name>
        <full_name>setDefaults</full_name>
        <docblock line="134">
          <description>Sets default field values.</description>
          <long-description>&lt;p&gt;Called automatically in the constructor.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="147" package="FluxAPI">
        <name>addExtends</name>
        <full_name>addExtends</full_name>
        <docblock line="144">
          <description>Adds dynamic extends (currently only fields)</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="163" package="FluxAPI">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="158">
          <description>Populates the model instance with the given data.</description>
          <long-description></long-description>
          <tag line="158" name="param" description="" type="\FluxAPI\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$data</name>
          <default>NULL</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="178" package="FluxAPI">
        <name>getClassName</name>
        <full_name>getClassName</full_name>
        <docblock line="173">
          <description>Returns the full class name of the model</description>
          <long-description></long-description>
          <tag line="173" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="188" package="FluxAPI">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
        <docblock line="183">
          <description>Returns the model name which is basically the last part of the full class name.</description>
          <long-description></long-description>
          <tag line="183" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="198" package="FluxAPI">
        <name>isNew</name>
        <full_name>isNew</full_name>
        <docblock line="194">
          <description>Checks if the model instance is new or already existing in the storage</description>
          <long-description></long-description>
          <tag line="194" name="return" description="true if the model instance is new, else false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="207" package="FluxAPI">
        <name>isModified</name>
        <full_name>isModified</full_name>
        <docblock line="203">
          <description>Checks if the model instance was modified since it was loaded</description>
          <long-description></long-description>
          <tag line="203" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="218" package="FluxAPI">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="212">
          <description>Returns a magic property (a fields value)</description>
          <long-description></long-description>
          <tag line="212" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="return" description="" type="null|mixed">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="243" package="FluxAPI">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="237">
          <description>Sets a magic property (a fields value)</description>
          <long-description></long-description>
          <tag line="237" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="237" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="243">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="243">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="262" package="FluxAPI">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="256">
          <description>Checks if a magic property (a fields value) isset</description>
          <long-description></long-description>
          <tag line="256" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="262">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="271" package="FluxAPI">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="267">
          <description>Unsets a magic property (a fields value)</description>
          <long-description></long-description>
          <tag line="267" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="271">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="281" package="FluxAPI">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="276">
          <description>Magic method to return a string represantation of the model</description>
          <long-description></long-description>
          <tag line="276" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="291" package="FluxAPI">
        <name>toArray</name>
        <full_name>toArray</full_name>
        <docblock line="286">
          <description>Returns an array represantation of the model</description>
          <long-description></long-description>
          <tag line="286" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="318" package="FluxAPI">
        <name>toString</name>
        <full_name>toString</full_name>
        <docblock line="313">
          <description>Returns a string represantation of the model</description>
          <long-description></long-description>
          <tag line="313" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Model.php</error>
      <error line="38" code="50014">Name of argument $api does not match with the DocBlock's name $data] in __construct()</error>
      <error line="38" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $api in __construct()</error>
      <error line="38" code="50015">Argument $data is missing from the Docblock of __construct()</error>
      <notice line="38" code="50013">Parameter $data] could not be found in __construct()</notice>
      <error line="158" code="50014">Name of argument $data does not match with the DocBlock's name $data] in populate()</error>
      <error line="158" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $data in populate()</error>
      <notice line="158" code="50013">Parameter $data] could not be found in populate()</notice>
    </parse_markers>
  </file>
  <file path="Cli/Load.php" hash="d99e5eed6c75b12e073a9e9b4a282052" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Cli" line="11" package="Default">
      <extends>\Symfony\Component\Console\Command\Command</extends>
      <name>Load</name>
      <full_name>\FluxAPI\Cli\Load</full_name>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Cli" line="13" package="Default">
        <name>configure</name>
        <full_name>configure</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Cli" line="36" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <argument line="36">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="36">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Cli/Load.php</error>
      <error line="11" code="50000">No DocBlock was found for \FluxAPI\Cli\Load</error>
      <error line="13" code="50010">No DocBlock was found for method configure()</error>
      <error line="36" code="50010">No DocBlock was found for method execute()</error>
    </parse_markers>
  </file>
  <file path="Cli/Migrate.php" hash="a7755198ff25a1733c91c9110ce6010f" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Cli" line="11" package="Default">
      <extends>\Symfony\Component\Console\Command\Command</extends>
      <name>Migrate</name>
      <full_name>\FluxAPI\Cli\Migrate</full_name>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Cli" line="13" package="Default">
        <name>configure</name>
        <full_name>configure</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Cli" line="25" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <argument line="25">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="25">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Cli/Migrate.php</error>
      <error line="11" code="50000">No DocBlock was found for \FluxAPI\Cli\Migrate</error>
      <error line="13" code="50010">No DocBlock was found for method configure()</error>
      <error line="25" code="50010">No DocBlock was found for method execute()</error>
    </parse_markers>
  </file>
  <file path="StorageInterface.php" hash="3d13b7e465c3cfe00e2c5388744f2ba1" package="Default">
    <docblock line="2">
      <description>Created by JetBrains PhpStorm.</description>
      <long-description>&lt;p&gt;User: ondrej
Date: 09.04.13
Time: 13:42
To change this template use File | Settings | File Templates.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="FluxAPI" line="13" package="Default">
      <name>StorageInterface</name>
      <full_name>\FluxAPI\StorageInterface</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="21" package="Default">
        <name>getCollectionName</name>
        <full_name>getCollectionName</full_name>
        <docblock line="15">
          <description>Returns the collection name from a given model instance</description>
          <long-description></long-description>
          <tag line="15" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="31" package="Default">
        <name>filterSelect</name>
        <full_name>filterSelect</full_name>
        <docblock line="23">
          <description>'select' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="23" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="23" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="31">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="41" package="Default">
        <name>filterEqual</name>
        <full_name>filterEqual</full_name>
        <docblock line="33">
          <description>'equal' or '=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="33" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="33" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="51" package="Default">
        <name>filterNotEqual</name>
        <full_name>filterNotEqual</full_name>
        <docblock line="43">
          <description>'not' or '!=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="43" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="43" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="61" package="Default">
        <name>filterGreaterThen</name>
        <full_name>filterGreaterThen</full_name>
        <docblock line="53">
          <description>'gt' or '&gt;' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="53" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="53" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="71" package="Default">
        <name>filterGreaterThenOrEqual</name>
        <full_name>filterGreaterThenOrEqual</full_name>
        <docblock line="63">
          <description>'gte' or '&gt;=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="63" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="63" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="71">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="81" package="Default">
        <name>filterLessThen</name>
        <full_name>filterLessThen</full_name>
        <docblock line="73">
          <description>'lt' or '&lt;' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="73" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="73" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="91" package="Default">
        <name>filterLessThenOrEqual</name>
        <full_name>filterLessThenOrEqual</full_name>
        <docblock line="83">
          <description>'lte' or '&lt;=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="83" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="83" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="101" package="Default">
        <name>filterRange</name>
        <full_name>filterRange</full_name>
        <docblock line="93">
          <description>'range' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="93" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="93" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="101">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="111" package="Default">
        <name>filterOrder</name>
        <full_name>filterOrder</full_name>
        <docblock line="103">
          <description>'order' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="103" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="103" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="111">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="121" package="Default">
        <name>filterLimit</name>
        <full_name>filterLimit</full_name>
        <docblock line="113">
          <description>'limit' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="113" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="113" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="131" package="Default">
        <name>filterCount</name>
        <full_name>filterCount</full_name>
        <docblock line="123">
          <description>'count' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="123" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="123" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="141" package="Default">
        <name>filterLike</name>
        <full_name>filterLike</full_name>
        <docblock line="133">
          <description>'like' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="133" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="133" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="141">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="151" package="Default">
        <name>filterIn</name>
        <full_name>filterIn</full_name>
        <docblock line="143">
          <description>'in' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="143" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="143" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="151">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="162" package="Default">
        <name>loadRelation</name>
        <full_name>loadRelation</full_name>
        <docblock line="153">
          <description>Loads a single or a list of related models of a model instance.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="153" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="153" name="param" description="name of the relation field in the model instance" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="return" description="" type="\FluxAPI\Model|array">
            <type by_reference="false">\FluxAPI\Model</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="162">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="173" package="Default">
        <name>addRelation</name>
        <full_name>addRelation</full_name>
        <docblock line="164">
          <description>Makes a model to model relation persistante in the storage</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="164" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="164" name="param" description="" type="\FluxAPI\Model" variable="$relation">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="164" name="param" description="the relation field in the $model" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="173">
          <name>$relation</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="173">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="182" package="Default">
        <name>removeRelation</name>
        <full_name>removeRelation</full_name>
        <docblock line="175">
          <description>Removes a model to model relation from the storage.</description>
          <long-description></long-description>
          <tag line="175" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="175" name="param" description="" type="\FluxAPI\Model" variable="$relation">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="175" name="param" description="the relation field in the $model" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="182">
          <name>$relation</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="182">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="193" package="Default">
        <name>removeAllRelations</name>
        <full_name>removeAllRelations</full_name>
        <docblock line="184">
          <description>Removes all model to model relations from the storage</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="184" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="184" name="param" description="the relation field in the $model" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
          <tag line="184" name="param" description="if set related models with the given IDs are not removed" type="\FluxAPI\[array" variable="$exclude_ids]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="193">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
        <argument line="193">
          <name>$exclude_ids</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="202" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="195">
          <description>Checks if the storage plugin is already connected to the storage host (e.g.</description>
          <long-description>&lt;p&gt;Database)&lt;/p&gt;

&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="195" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="209" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="204">
          <description>Connects the storage plugin to the storage host (e.g.</description>
          <long-description>&lt;p&gt;Database)&lt;/p&gt;

&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="218" package="Default">
        <name>getConnection</name>
        <full_name>getConnection</full_name>
        <docblock line="211">
          <description>Returns a handler to the storage host (e.g.</description>
          <long-description>&lt;p&gt;Database)&lt;/p&gt;

&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="211" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="225" package="Default">
        <name>getNewId</name>
        <full_name>getNewId</full_name>
        <docblock line="220">
          <description>Returns a new model id.</description>
          <long-description></long-description>
          <tag line="220" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="234" package="Default">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <docblock line="227">
          <description>Migrates the storage structure to all or a single model definition</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="227" name="param" description="" type="\FluxAPI\[string" variable="$model]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$model_name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="244" package="Default">
        <name>addFilter</name>
        <full_name>addFilter</full_name>
        <docblock line="236">
          <description>Adds/registers a new filter</description>
          <long-description></long-description>
          <tag line="236" name="chainable" description=""/>
          <tag line="236" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="" type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="return" description="$this" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
        <argument line="244">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="244">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="252" package="Default">
        <name>hasFilter</name>
        <full_name>hasFilter</full_name>
        <docblock line="246">
          <description>Checks if a filter exists</description>
          <long-description></long-description>
          <tag line="246" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="246" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="252">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="260" package="Default">
        <name>getFilter</name>
        <full_name>getFilter</full_name>
        <docblock line="254">
          <description>Returns a filters callback</description>
          <long-description></long-description>
          <tag line="254" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="254" name="return" description="callback string or null if not found" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="267" package="Default">
        <name>getFilters</name>
        <full_name>getFilters</full_name>
        <docblock line="262">
          <description>Returns all existing filters</description>
          <long-description></long-description>
          <tag line="262" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="276" package="Default">
        <name>executeFilter</name>
        <full_name>executeFilter</full_name>
        <docblock line="269">
          <description>Executes the callback of a given filter</description>
          <long-description></long-description>
          <tag line="269" name="param" description="" type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="269" name="param" description="parameters passed to the $callback function" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="269" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="276">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
        <argument line="276">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="285" package="Default">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="278">
          <description>Returns the total count of a model (or the model by a query)</description>
          <long-description></long-description>
          <tag line="278" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="278" name="param" description="" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="278" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="285">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="294" package="Default">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="287">
          <description>Checks if a given model instance already exists in the storage</description>
          <long-description></long-description>
          <tag line="287" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="287" name="param" description="" type="\FluxAPI\Model" variable="$instance">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="287" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="294">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="294">
          <name>$instance</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="303" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="296">
          <description>Saves/updates a given model instance to the storage</description>
          <long-description></long-description>
          <tag line="296" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="296" name="param" description="" type="\FluxAPI\Model" variable="$instance">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="296" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="303">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="303">
          <name>$instance</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="312" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="305">
          <description>Loads instances of a model from the storage</description>
          <long-description></long-description>
          <tag line="305" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="param" description="if not set all model instances will be loaded" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="305" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="312">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="312">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="322" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="314">
          <description>Updates a list of models in the storage with given data</description>
          <long-description></long-description>
          <tag line="314" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="314" name="param" description="if null all models will be updated" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="314" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="314" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="322">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="322">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="322">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="331" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="324">
          <description>Deletes a list of models from the storage</description>
          <long-description></long-description>
          <tag line="324" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="324" name="param" description="if null all models will be deleted" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="324" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="331">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="341" package="Default">
        <name>executeQuery</name>
        <full_name>executeQuery</full_name>
        <docblock line="333">
          <description>Executes a query</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="333" name="param" description="" type="\FluxAPI\Query" variable="$query">
            <type by_reference="false">\FluxAPI\Query</type>
          </tag>
          <tag line="333" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$query</name>
          <default></default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="349" package="Default">
        <name>serialize</name>
        <full_name>serialize</full_name>
        <docblock line="343">
          <description>Converts the given data to a serialized string</description>
          <long-description></long-description>
          <tag line="343" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="343" name="param" description="" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="349">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="349">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="357" package="Default">
        <name>unserialize</name>
        <full_name>unserialize</full_name>
        <docblock line="351">
          <description>Converts a serialized string to a real datatype</description>
          <long-description></long-description>
          <tag line="351" name="param" description="" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="351" name="param" description="" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="357">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="357">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="184" code="50014">Name of argument $exclude_ids does not match with the DocBlock's name $exclude_ids] in removeAllRelations()</error>
      <error line="184" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $exclude_ids in removeAllRelations()</error>
      <notice line="184" code="50013">Parameter $exclude_ids] could not be found in removeAllRelations()</notice>
      <error line="227" code="50014">Name of argument $model_name does not match with the DocBlock's name $model] in migrate()</error>
      <notice line="227" code="50013">Parameter $model] could not be found in migrate()</notice>
      <error line="278" code="50014">Name of argument $query does not match with the DocBlock's name $query] in count()</error>
      <error line="278" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in count()</error>
      <notice line="278" code="50013">Parameter $query] could not be found in count()</notice>
      <error line="305" code="50014">Name of argument $query does not match with the DocBlock's name $query] in load()</error>
      <error line="305" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in load()</error>
      <notice line="305" code="50013">Parameter $query] could not be found in load()</notice>
      <error line="314" code="50014">Name of argument $query does not match with the DocBlock's name $query] in update()</error>
      <error line="314" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in update()</error>
      <notice line="314" code="50013">Parameter $query] could not be found in update()</notice>
      <error line="324" code="50014">Name of argument $query does not match with the DocBlock's name $query] in delete()</error>
      <error line="324" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in delete()</error>
      <notice line="324" code="50013">Parameter $query] could not be found in delete()</notice>
    </parse_markers>
  </file>
  <file path="Storage.php" hash="e1533e5e3c2e51c36b3dd80b5598946b" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="13" package="FluxAPI">
      <extends/>
      <implements>\FluxAPI\StorageInterface</implements>
      <name>Storage</name>
      <full_name>\FluxAPI\Storage</full_name>
      <docblock line="6">
        <description>Data storage plugin</description>
        <long-description>&lt;p&gt;All your storage plugins must inherit from this&lt;/p&gt;</long-description>
        <tag line="6" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="18" namespace="FluxAPI" package="Default">
        <name>$_api</name>
        <default>NULL</default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
          <tag line="15" name="var" description="Internal Api instance" type="\FluxAPI\Api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="FluxAPI" package="Default">
        <name>$_filters</name>
        <default>array()</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag line="20" name="var" description="Internal list of registered filters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="FluxAPI" package="Default">
        <name>$config</name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag line="25" name="var" description="Configuration" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="36" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="30" name="param" description="" type="\FluxAPI\Api" variable="$api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
          <tag line="30" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
        <argument line="36">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="50" package="FluxAPI">
        <name>getCollectionName</name>
        <full_name>getCollectionName</full_name>
        <docblock line="44">
          <description>Returns the collection name from a given model instance</description>
          <long-description></long-description>
          <tag line="44" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="60" package="FluxAPI">
        <name>getNewId</name>
        <full_name>getNewId</full_name>
        <docblock line="55">
          <description>Returns a new model ID.</description>
          <long-description></long-description>
          <tag line="55" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="89" package="FluxAPI">
        <name>addFilters</name>
        <full_name>addFilters</full_name>
        <docblock line="66">
          <description>Adds/registers all filters available in this storage</description>
          <long-description>&lt;p&gt;Use this method in child classes to add aditional filters while calling parent::addFilters().&lt;/p&gt;

&lt;p&gt;Default filters are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;select&lt;/li&gt;
&lt;li&gt;equal or =&lt;/li&gt;
&lt;li&gt;not or !=&lt;/li&gt;
&lt;li&gt;gt or &gt;&lt;/li&gt;
&lt;li&gt;gte or &gt;=&lt;/li&gt;
&lt;li&gt;lt or &amp;lt;&lt;/li&gt;
&lt;li&gt;lte or &amp;lt;=&lt;/li&gt;
&lt;li&gt;range&lt;/li&gt;
&lt;li&gt;order&lt;/li&gt;
&lt;li&gt;limit&lt;/li&gt;
&lt;li&gt;count&lt;/li&gt;
&lt;li&gt;like&lt;/li&gt;
&lt;li&gt;in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your storage plugin should at least implement those filters.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="120" package="FluxAPI">
        <name>addFilter</name>
        <full_name>addFilter</full_name>
        <docblock line="112">
          <description>Adds/registers a new filter</description>
          <long-description></long-description>
          <tag line="112" name="chainable" description=""/>
          <tag line="112" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="param" description="" type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="return" description="$this" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="120">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="134" package="FluxAPI">
        <name>hasFilter</name>
        <full_name>hasFilter</full_name>
        <docblock line="128">
          <description>Checks if a filter exists</description>
          <long-description></long-description>
          <tag line="128" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="145" package="FluxAPI">
        <name>getFilter</name>
        <full_name>getFilter</full_name>
        <docblock line="139">
          <description>Returns a filters callback</description>
          <long-description></long-description>
          <tag line="139" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="return" description="callback string or null if not found" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="159" package="FluxAPI">
        <name>getFilters</name>
        <full_name>getFilters</full_name>
        <docblock line="154">
          <description>Returns all existing filters</description>
          <long-description></long-description>
          <tag line="154" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="171" package="FluxAPI">
        <name>executeFilter</name>
        <full_name>executeFilter</full_name>
        <docblock line="164">
          <description>Executes the callback of a given filter</description>
          <long-description></long-description>
          <tag line="164" name="param" description="" type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="param" description="parameters passed to the $callback function" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="164" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
        <argument line="171">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="183" package="FluxAPI">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="176">
          <description>Returns the total count of a model (or the model by a query)</description>
          <long-description></long-description>
          <tag line="176" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="176" name="param" description="" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="176" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="183">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="202" package="FluxAPI">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="195">
          <description>Checks if a given model instance already exists in the storage</description>
          <long-description></long-description>
          <tag line="195" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="param" description="" type="\FluxAPI\Model" variable="$instance">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="195" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="202">
          <name>$instance</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="224" package="FluxAPI">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="217">
          <description>Saves/updates a given model instance to the storage</description>
          <long-description></long-description>
          <tag line="217" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="" type="\FluxAPI\Model" variable="$instance">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="217" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$instance</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="290" package="FluxAPI">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="283">
          <description>Loads instances of a model from the storage</description>
          <long-description></long-description>
          <tag line="283" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="283" name="param" description="if not set all model instances will be loaded" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="283" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="290">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="308" package="FluxAPI">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="300">
          <description>Updates a list of models in the storage with given data</description>
          <long-description></long-description>
          <tag line="300" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="param" description="if null all models will be updated" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="300" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="300" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="308">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="308">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="308">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="326" package="FluxAPI">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="319">
          <description>Deletes a list of models from the storage</description>
          <long-description></long-description>
          <tag line="319" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="param" description="if null all models will be deleted" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="319" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="326">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="326">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="345" package="FluxAPI">
        <name>executeQuery</name>
        <full_name>executeQuery</full_name>
        <docblock line="337">
          <description>Executes a query</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="337" name="param" description="" type="\FluxAPI\Query" variable="$query">
            <type by_reference="false">\FluxAPI\Query</type>
          </tag>
          <tag line="337" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="345">
          <name>$query</name>
          <default></default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="362" package="FluxAPI">
        <name>serialize</name>
        <full_name>serialize</full_name>
        <docblock line="356">
          <description>Converts the given data to a serialized string</description>
          <long-description></long-description>
          <tag line="356" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="356" name="param" description="" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="362">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="362">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="391" package="FluxAPI">
        <name>unserialize</name>
        <full_name>unserialize</full_name>
        <docblock line="385">
          <description>Converts a serialized string to a real datatype</description>
          <long-description></long-description>
          <tag line="385" name="param" description="" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="385" name="param" description="" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="391">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="391">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Storage.php</error>
      <error line="176" code="50014">Name of argument $query does not match with the DocBlock's name $query] in count()</error>
      <error line="176" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in count()</error>
      <notice line="176" code="50013">Parameter $query] could not be found in count()</notice>
      <error line="283" code="50014">Name of argument $query does not match with the DocBlock's name $query] in load()</error>
      <error line="283" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in load()</error>
      <notice line="283" code="50013">Parameter $query] could not be found in load()</notice>
      <error line="300" code="50014">Name of argument $query does not match with the DocBlock's name $query] in update()</error>
      <error line="300" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in update()</error>
      <notice line="300" code="50013">Parameter $query] could not be found in update()</notice>
      <error line="319" code="50014">Name of argument $query does not match with the DocBlock's name $query] in delete()</error>
      <error line="319" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in delete()</error>
      <notice line="319" code="50013">Parameter $query] could not be found in delete()</notice>
    </parse_markers>
  </file>
  <file path="Permission.php" hash="5a0efb62cfee5ea6e8c4821b322df368" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="6" package="Default">
      <extends/>
      <name>Permission</name>
      <full_name>\FluxAPI\Permission</full_name>
      <property final="false" static="false" visibility="protected" line="8" namespace="FluxAPI" package="Default">
        <name>$_api</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="10" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="10">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="15" package="Default">
        <name>hasModelAccess</name>
        <full_name>hasModelAccess</full_name>
        <argument line="15">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="15">
          <name>$model</name>
          <default>NULL</default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="15">
          <name>$action</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="20" package="Default">
        <name>hasControllerAccess</name>
        <full_name>hasControllerAccess</full_name>
        <argument line="20">
          <name>$controller_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="20">
          <name>$action</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Permission.php</error>
      <error line="6" code="50000">No DocBlock was found for \FluxAPI\Permission</error>
      <error line="8" code="50018">No DocBlock was found for property $_api</error>
      <error line="10" code="50010">No DocBlock was found for method __construct()</error>
      <error line="15" code="50010">No DocBlock was found for method hasModelAccess()</error>
      <error line="20" code="50010">No DocBlock was found for method hasControllerAccess()</error>
    </parse_markers>
  </file>
  <file path="PluginInterface.php" hash="54a1072db1e52ae902cce1106b87a4ae" package="Default">
    <docblock line="2">
      <description>Created by JetBrains PhpStorm.</description>
      <long-description>&lt;p&gt;User: ondrej
Date: 09.04.13
Time: 14:48
To change this template use File | Settings | File Templates.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="FluxAPI" line="13" package="Default">
      <name>PluginInterface</name>
      <full_name>\FluxAPI\PluginInterface</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="22" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="15">
          <description>Called when the plugin get's registered</description>
          <long-description>&lt;p&gt;Use this method to make your plugin magic.&lt;/p&gt;</long-description>
          <tag line="15" name="param" description="" type="\FluxAPI\Api" variable="$api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="Plugin.php" hash="ae9b57183ecbc5787ef06de5b4f47fa2" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="13" package="FluxAPI">
      <extends/>
      <implements>\FluxAPI\PluginInterface</implements>
      <name>Plugin</name>
      <full_name>\FluxAPI\Plugin</full_name>
      <docblock line="4">
        <description>A general plugin</description>
        <long-description>&lt;p&gt;All general plugins must inherit from this.
General plugins do not fall into one of the following categories: Model, Storage, Cache, Permission, Controller
For these categories special base classes exist.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugin.php</error>
    </parse_markers>
  </file>
  <file path="UUID.php" hash="4015d2c1d8923c8aaac14aa7744b3e7f" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="17" package="Default">
      <extends/>
      <name>UUID</name>
      <full_name>\FluxAPI\UUID</full_name>
      <docblock line="4">
        <description>UUID class</description>
        <long-description>&lt;p&gt;The following class generates VALID RFC 4211 COMPLIANT
Universally Unique IDentifiers (UUID) version 3, 4 and 5.&lt;/p&gt;

&lt;p&gt;UUIDs generated validates using OSSP UUID Tool, and output
for named-based UUIDs are exactly the same. This is a pure
PHP implementation.&lt;/p&gt;</long-description>
        <tag line="4" name="author" description="Andrew Moore"/>
        <tag line="4" name="link" description="http://www.php.net/manual/en/function.uniqid.php#94959" link="http://www.php.net/manual/en/function.uniqid.php#94959"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="29" package="Default">
        <name>v3</name>
        <full_name>v3</full_name>
        <docblock line="19">
          <description>Generate v3 UUID</description>
          <long-description>&lt;p&gt;Version 3 UUIDs are named based. They require a namespace (another
valid UUID) and a value (the name). Given the same namespace and
name, the output is always the same.&lt;/p&gt;</long-description>
          <tag line="19" name="param" description="" type="\FluxAPI\uuid" variable="$namespace">
            <type by_reference="false">\FluxAPI\uuid</type>
          </tag>
          <tag line="19" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$namespace</name>
          <default></default>
          <type/>
        </argument>
        <argument line="29">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="76" package="Default">
        <name>v4</name>
        <full_name>v4</full_name>
        <docblock line="70">
          <description>Generate v4 UUID</description>
          <long-description>&lt;p&gt;Version 4 UUIDs are pseudo-random.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="110" package="Default">
        <name>v5</name>
        <full_name>v5</full_name>
        <docblock line="100">
          <description>Generate v5 UUID</description>
          <long-description>&lt;p&gt;Version 5 UUIDs are named based. They require a namespace (another
valid UUID) and a value (the name). Given the same namespace and
name, the output is always the same.&lt;/p&gt;</long-description>
          <tag line="100" name="param" description="" type="\FluxAPI\uuid" variable="$namespace">
            <type by_reference="false">\FluxAPI\uuid</type>
          </tag>
          <tag line="100" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$namespace</name>
          <default></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="151" package="Default">
        <name>is_valid</name>
        <full_name>is_valid</full_name>
        <argument line="151">
          <name>$uuid</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file UUID.php</error>
      <error line="151" code="50010">No DocBlock was found for method is_valid()</error>
    </parse_markers>
  </file>
  <file path="EventListener/ModelListener.php" hash="070a1250af5d416207b6924b2e0d1e0f" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\EventListener" line="8" package="Default">
      <extends/>
      <implements>\Symfony\Component\EventDispatcher\EventSubscriberInterface</implements>
      <name>ModelListener</name>
      <full_name>\FluxAPI\EventListener\ModelListener</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="FluxAPI\EventListener" package="Default">
        <name>$_api</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="12" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="12">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="17" package="Default">
        <name>onModelBeforeCreate</name>
        <full_name>onModelBeforeCreate</full_name>
        <argument line="17">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="22" package="Default">
        <name>onModelCreate</name>
        <full_name>onModelCreate</full_name>
        <argument line="22">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="27" package="Default">
        <name>onModelBeforeLoad</name>
        <full_name>onModelBeforeLoad</full_name>
        <argument line="27">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="32" package="Default">
        <name>onModelLoad</name>
        <full_name>onModelLoad</full_name>
        <argument line="32">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="37" package="Default">
        <name>onModelBeforeUpdate</name>
        <full_name>onModelBeforeUpdate</full_name>
        <argument line="37">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="42" package="Default">
        <name>onModelUpdate</name>
        <full_name>onModelUpdate</full_name>
        <argument line="42">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="47" package="Default">
        <name>onModelBeforeSave</name>
        <full_name>onModelBeforeSave</full_name>
        <argument line="47">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="52" package="Default">
        <name>onModelSave</name>
        <full_name>onModelSave</full_name>
        <argument line="52">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="57" package="Default">
        <name>onModelBeforeDelete</name>
        <full_name>onModelBeforeDelete</full_name>
        <argument line="57">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="62" package="Default">
        <name>onModelDelete</name>
        <full_name>onModelDelete</full_name>
        <argument line="62">
          <name>$event</name>
          <default></default>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI\EventListener" line="67" package="Default">
        <name>getSubscribedEvents</name>
        <full_name>getSubscribedEvents</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file EventListener/ModelListener.php</error>
      <error line="8" code="50000">No DocBlock was found for \FluxAPI\EventListener\ModelListener</error>
      <error line="10" code="50018">No DocBlock was found for property $_api</error>
      <error line="12" code="50010">No DocBlock was found for method __construct()</error>
      <error line="17" code="50010">No DocBlock was found for method onModelBeforeCreate()</error>
      <error line="22" code="50010">No DocBlock was found for method onModelCreate()</error>
      <error line="27" code="50010">No DocBlock was found for method onModelBeforeLoad()</error>
      <error line="32" code="50010">No DocBlock was found for method onModelLoad()</error>
      <error line="37" code="50010">No DocBlock was found for method onModelBeforeUpdate()</error>
      <error line="42" code="50010">No DocBlock was found for method onModelUpdate()</error>
      <error line="47" code="50010">No DocBlock was found for method onModelBeforeSave()</error>
      <error line="52" code="50010">No DocBlock was found for method onModelSave()</error>
      <error line="57" code="50010">No DocBlock was found for method onModelBeforeDelete()</error>
      <error line="62" code="50010">No DocBlock was found for method onModelDelete()</error>
      <error line="67" code="50010">No DocBlock was found for method getSubscribedEvents()</error>
    </parse_markers>
  </file>
  <file path="Query.php" hash="080ed92564f515883248d605a01739e5" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="8" package="FluxAPI">
      <extends/>
      <name>Query</name>
      <full_name>\FluxAPI\Query</full_name>
      <docblock line="4">
        <description>A Storage Query</description>
        <long-description></long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <constant namespace="FluxAPI" line="35" package="FluxAPI">
        <name>TYPE_UPDATE</name>
        <full_name>TYPE_UPDATE</full_name>
        <value>'update'</value>
      </constant>
      <constant namespace="FluxAPI" line="36" package="FluxAPI">
        <name>TYPE_INSERT</name>
        <full_name>TYPE_INSERT</full_name>
        <value>'insert'</value>
      </constant>
      <constant namespace="FluxAPI" line="37" package="FluxAPI">
        <name>TYPE_DELETE</name>
        <full_name>TYPE_DELETE</full_name>
        <value>'delete'</value>
      </constant>
      <constant namespace="FluxAPI" line="38" package="FluxAPI">
        <name>TYPE_SELECT</name>
        <full_name>TYPE_SELECT</full_name>
        <value>'select'</value>
      </constant>
      <constant namespace="FluxAPI" line="39" package="FluxAPI">
        <name>TYPE_COUNT</name>
        <full_name>TYPE_COUNT</full_name>
        <value>'count'</value>
      </constant>
      <property final="false" static="false" visibility="private" line="13" namespace="FluxAPI" package="Default">
        <name>$_filters</name>
        <default>array()</default>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
          <tag line="10" name="var" description="Internal list of added filters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="18" namespace="FluxAPI" package="Default">
        <name>$_modelName</name>
        <default>NULL</default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
          <tag line="15" name="var" description="Model this query is related to" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="23" namespace="FluxAPI" package="Default">
        <name>$_storage</name>
        <default>NULL</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag line="20" name="var" description="the storage using this query" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="28" namespace="FluxAPI" package="Default">
        <name>$_type</name>
        <default>NULL</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag line="25" name="var" description="The query type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="FluxAPI" package="Default">
        <name>$_data</name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag line="30" name="var" description="Internal values for a INSERT or UPDATE query" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="44" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="41">
          <description>Constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="57" package="FluxAPI">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="49">
          <description>Adds a new query filter</description>
          <long-description></long-description>
          <tag line="49" name="chainable" description=""/>
          <tag line="49" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="return" description="$this" type="\FluxAPI\Query">
            <type by_reference="false">\FluxAPI\Query</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="57">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="69" package="FluxAPI">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="64">
          <description>Executes the query and returns the query results (if any)</description>
          <long-description></long-description>
          <tag line="64" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="80" package="FluxAPI">
        <name>getFilters</name>
        <full_name>getFilters</full_name>
        <docblock line="74">
          <description>Returns a list of query filters</description>
          <long-description></long-description>
          <tag line="74" name="param" description="if set it will return all filters of same name" type="\FluxAPI\[string" variable="$name]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="74" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="103" package="FluxAPI">
        <name>hasFilter</name>
        <full_name>hasFilter</full_name>
        <docblock line="97">
          <description>Checks if the query has filter(s) of a given name</description>
          <long-description></long-description>
          <tag line="97" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="121" package="FluxAPI">
        <name>setStorage</name>
        <full_name>setStorage</full_name>
        <docblock line="116">
          <description>Sets the storage this query belongs to</description>
          <long-description></long-description>
          <tag line="116" name="param" description="" type="\FluxAPI\Storage" variable="$storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$storage</name>
          <default></default>
          <type>\FluxAPI\Storage</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="133" package="FluxAPI">
        <name>getStorage</name>
        <full_name>getStorage</full_name>
        <docblock line="128">
          <description>Returns the storage this query belongs to</description>
          <long-description></long-description>
          <tag line="128" name="return" description="" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="143" package="FluxAPI">
        <name>setModelName</name>
        <full_name>setModelName</full_name>
        <docblock line="138">
          <description>Sets the model this query is related with</description>
          <long-description></long-description>
          <tag line="138" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="155" package="FluxAPI">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
        <docblock line="150">
          <description>Returns the model this query is related with</description>
          <long-description></long-description>
          <tag line="150" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="165" package="FluxAPI">
        <name>setType</name>
        <full_name>setType</full_name>
        <docblock line="160">
          <description>Sets the query type</description>
          <long-description></long-description>
          <tag line="160" name="param" description="Possible values are: Query::TYPE_INSERT, Query::TYPE_UPDATE, Query::TYPE_DELETE, Query::TYPE_SELECT, Query::TYPE_COUNT" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="179" package="FluxAPI">
        <name>getType</name>
        <full_name>getType</full_name>
        <docblock line="174">
          <description>Returns the query type</description>
          <long-description></long-description>
          <tag line="174" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="189" package="FluxAPI">
        <name>setData</name>
        <full_name>setData</full_name>
        <docblock line="184">
          <description>Sets the values for insert and update queries</description>
          <long-description></long-description>
          <tag line="184" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="202" package="FluxAPI">
        <name>hasData</name>
        <full_name>hasData</full_name>
        <docblock line="196">
          <description>Checks if this query has values</description>
          <long-description></long-description>
          <tag line="196" name="param" description="if set it will check if a value for a given field name is present" type="\FluxAPI\[string" variable="$field]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="196" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$field</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="218" package="FluxAPI">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="212">
          <description>Returns the values of this query</description>
          <long-description></long-description>
          <tag line="212" name="param" description="if set only the value of a given field name will be returned" type="\FluxAPI\[string" variable="$field]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="212" name="return" description="" type="array|mixed|null">
            <type by_reference="false">array</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$field</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Query.php</error>
      <error line="74" code="50014">Name of argument $name does not match with the DocBlock's name $name] in getFilters()</error>
      <notice line="74" code="50013">Parameter $name] could not be found in getFilters()</notice>
      <error line="196" code="50014">Name of argument $field does not match with the DocBlock's name $field] in hasData()</error>
      <notice line="196" code="50013">Parameter $field] could not be found in hasData()</notice>
      <error line="212" code="50014">Name of argument $field does not match with the DocBlock's name $field] in getData()</error>
      <notice line="212" code="50013">Parameter $field] could not be found in getData()</notice>
    </parse_markers>
  </file>
  <file path="DynamicModel.php" hash="475ddcbbc37d69202375d16f63389b7f" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="10" package="FluxAPI">
      <extends>\FluxAPI\Model</extends>
      <name>DynamicModel</name>
      <full_name>\FluxAPI\DynamicModel</full_name>
      <docblock line="4">
        <description>A dynamic model definition.</description>
        <long-description>&lt;p&gt;This class is used for all dynamically created models.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="12" namespace="FluxAPI" package="Default">
        <name>$_modelName</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="14" package="FluxAPI">
        <name>setModelName</name>
        <full_name>setModelName</full_name>
        <argument line="14">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="19" package="FluxAPI">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file DynamicModel.php</error>
      <error line="12" code="50018">No DocBlock was found for property $_modelName</error>
      <error line="14" code="50010">No DocBlock was found for method setModelName()</error>
      <error line="19" code="50010">No DocBlock was found for method getModelName()</error>
    </parse_markers>
  </file>
  <file path="Factory/ModelFactory.php" hash="b0069d72a1da9e9b54e310016950fbf2" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="8" package="Default">
      <extends>\Pimple</extends>
      <name>ModelFactory</name>
      <full_name>\FluxAPI\Factory\ModelFactory</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="12" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="12">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="26" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="17">
          <description>Creates a new instance of a model</description>
          <long-description></long-description>
          <tag line="17" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="17" name="param" description="if set the model will contain that initial data" type="\FluxAPI\Factory\[mixed" variable="$data]">
            <type by_reference="false">\FluxAPI\Factory\[mixed</type>
          </tag>
          <tag line="17" name="param" description="the format of the given $data - if not set the data will be treated as an array" type="\FluxAPI\Factory\[string" variable="$format]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
          <tag line="17" name="param" description="true if the model is new, false if it is created due to a load call." type="\FluxAPI\Factory\[bool" variable="$isNew]">
            <type by_reference="false">\FluxAPI\Factory\[bool</type>
          </tag>
          <tag line="17" name="return" description="" type="null|\FluxAPI\Factory\Model">
            <type by_reference="false">null</type>
            <type by_reference="false">\FluxAPI\Factory\Model</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="26">
          <name>$data</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="26">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="26">
          <name>$isNew</name>
          <default>TRUE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Factory" line="65" package="Default">
        <name>_modelDataFromFormat</name>
        <full_name>_modelDataFromFormat</full_name>
        <argument line="65">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Factory" line="79" package="Default">
        <name>_modelsToFormat</name>
        <full_name>_modelsToFormat</full_name>
        <argument line="79">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$models</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="79">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Factory" line="93" package="Default">
        <name>_modelToFormat</name>
        <full_name>_modelToFormat</full_name>
        <argument line="93">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="93">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="93">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="114" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="106">
          <description>Loads and returns a list of Model instances</description>
          <long-description></long-description>
          <tag line="106" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="if not set all instances of the model are loaded" type="\FluxAPI\Factory\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\Factory\[Query</type>
          </tag>
          <tag line="106" name="param" description="" type="\FluxAPI\Factory\[string" variable="$format]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
          <tag line="106" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="114">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="139" package="Default">
        <name>loadFirst</name>
        <full_name>loadFirst</full_name>
        <argument line="139">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="139">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="139">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="164" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="157">
          <description>Saves a list of or a single model instance</description>
          <long-description></long-description>
          <tag line="157" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="param" description="" type="array|\FluxAPI\Factory\Model" variable="$instances">
            <type by_reference="false">array</type>
            <type by_reference="false">\FluxAPI\Factory\Model</type>
          </tag>
          <tag line="157" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$instances</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="220" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="211">
          <description>Updates models with certain data</description>
          <long-description></long-description>
          <tag line="211" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="211" name="param" description="" type="\FluxAPI\Factory\Query" variable="$query">
            <type by_reference="false">\FluxAPI\Factory\Query</type>
          </tag>
          <tag line="211" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="211" name="param" description="data format - if not set the data will be treated as an array" type="\FluxAPI\Factory\[string" variable="$format]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
          <tag line="211" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="220">
          <name>$query</name>
          <default></default>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="220">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="220">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="244" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="237">
          <description>Deletes models by a query</description>
          <long-description></long-description>
          <tag line="237" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="237" name="param" description="if not set all instances of the model will be deleted" type="\FluxAPI\Factory\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\Factory\[Query</type>
          </tag>
          <tag line="237" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="244">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="244">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Factory/ModelFactory.php</error>
      <error line="8" code="50000">No DocBlock was found for \FluxAPI\Factory\ModelFactory</error>
      <error line="10" code="50018">No DocBlock was found for property $_api</error>
      <error line="12" code="50010">No DocBlock was found for method __construct()</error>
      <error line="17" code="50014">Name of argument $data does not match with the DocBlock's name $data] in create()</error>
      <error line="17" code="50014">Name of argument $format does not match with the DocBlock's name $format] in create()</error>
      <error line="17" code="50014">Name of argument $isNew does not match with the DocBlock's name $isNew] in create()</error>
      <notice line="17" code="50013">Parameter $data] could not be found in create()</notice>
      <notice line="17" code="50013">Parameter $format] could not be found in create()</notice>
      <notice line="17" code="50013">Parameter $isNew] could not be found in create()</notice>
      <error line="65" code="50010">No DocBlock was found for method _modelDataFromFormat()</error>
      <error line="79" code="50010">No DocBlock was found for method _modelsToFormat()</error>
      <error line="93" code="50010">No DocBlock was found for method _modelToFormat()</error>
      <error line="106" code="50014">Name of argument $query does not match with the DocBlock's name $query] in load()</error>
      <error line="106" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in load()</error>
      <error line="106" code="50014">Name of argument $format does not match with the DocBlock's name $format] in load()</error>
      <notice line="106" code="50013">Parameter $query] could not be found in load()</notice>
      <notice line="106" code="50013">Parameter $format] could not be found in load()</notice>
      <error line="139" code="50010">No DocBlock was found for method loadFirst()</error>
      <error line="211" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in update()</error>
      <error line="211" code="50014">Name of argument $format does not match with the DocBlock's name $format] in update()</error>
      <notice line="211" code="50013">Parameter $format] could not be found in update()</notice>
      <error line="237" code="50014">Name of argument $query does not match with the DocBlock's name $query] in delete()</error>
      <error line="237" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in delete()</error>
      <notice line="237" code="50013">Parameter $query] could not be found in delete()</notice>
    </parse_markers>
  </file>
  <file path="Factory/MethodFactory.php" hash="9b8206b4461d689432ae4b10c9f85e57" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="5" package="Default">
      <extends/>
      <name>MethodFactory</name>
      <full_name>\FluxAPI\Factory\MethodFactory</full_name>
      <property final="false" static="false" visibility="protected" line="7" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="12" namespace="FluxAPI\Factory" package="Default">
        <name>$_methods</name>
        <default>array()</default>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
          <tag line="9" name="var" description="Internal lookup for magic methods" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="14" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="14">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="26" package="Default">
        <name>registerMethod</name>
        <full_name>registerMethod</full_name>
        <docblock line="19">
          <description>Registers a magic method</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="param" description="" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="19" name="return" description="$this" type="\FluxAPI\Factory\Api">
            <type by_reference="false">\FluxAPI\Factory\Api</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="26">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="41" package="Default">
        <name>unregisterMethod</name>
        <full_name>unregisterMethod</full_name>
        <docblock line="35">
          <description>Unregisters a magic method</description>
          <long-description></long-description>
          <tag line="35" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="$this" type="\FluxAPI\Factory\Api">
            <type by_reference="false">\FluxAPI\Factory\Api</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="50" package="Default">
        <name>hasMethod</name>
        <full_name>hasMethod</full_name>
        <argument line="50">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="55" package="Default">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <argument line="55">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="64" package="Default">
        <name>callMethod</name>
        <full_name>callMethod</full_name>
        <argument line="64">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Factory/MethodFactory.php</error>
      <error line="5" code="50000">No DocBlock was found for \FluxAPI\Factory\MethodFactory</error>
      <error line="7" code="50018">No DocBlock was found for property $_api</error>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
      <error line="50" code="50010">No DocBlock was found for method hasMethod()</error>
      <error line="55" code="50010">No DocBlock was found for method getMethod()</error>
      <error line="64" code="50010">No DocBlock was found for method callMethod()</error>
    </parse_markers>
  </file>
  <file path="Factory/PluginFactory.php" hash="12c9e9a05b7e78d828acafaf3315d771" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="4" package="Default">
      <extends/>
      <name>PluginFactory</name>
      <full_name>\FluxAPI\Factory\PluginFactory</full_name>
      <property final="false" static="false" visibility="protected" line="6" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="11" namespace="FluxAPI\Factory" package="Default">
        <name>$_plugins</name>
        <default>array('Model' =&gt; array(), 'Format' =&gt; array(), 'Controller' =&gt; array(), 'Storage' =&gt; array(), 'Cache' =&gt; array(), 'Permission' =&gt; array())</default>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag line="8" name="var" description="Internal lookup for plugins" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="23" namespace="FluxAPI\Factory" package="Default">
        <name>$_extends</name>
        <default>array('Model' =&gt; array())</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag line="20" name="var" description="Internal extensions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="30" namespace="FluxAPI\Factory" package="Default">
        <name>$_base_plugins</name>
        <default>array()</default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag line="27" name="var" description="Internal lookup for base plugins" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="32" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="32">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="40" package="Default">
        <name>registerPlugins</name>
        <full_name>registerPlugins</full_name>
        <docblock line="37">
          <description>Registers all available plugins found within the Plugins/ directory</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="127" package="Default">
        <name>registerExtends</name>
        <full_name>registerExtends</full_name>
        <docblock line="124">
          <description>Registers all extensions found in the extends directory</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="156" package="Default">
        <name>registerExtend</name>
        <full_name>registerExtend</full_name>
        <docblock line="146">
          <description>Registers a single extension</description>
          <long-description>&lt;p&gt;Will add dynamic models to the model plugins to make them available&lt;/p&gt;

&lt;p&gt;TODO: currently it will read in the json file but maybe it's better to only read those files on demand?&lt;/p&gt;</long-description>
          <tag line="146" name="param" description="" type="\FluxAPI\Factory\" variable="$type"/>
          <tag line="146" name="param" description="" type="\FluxAPI\Factory\" variable="$name"/>
        </docblock>
        <argument line="156">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="181" package="Default">
        <name>unregisterExtend</name>
        <full_name>unregisterExtend</full_name>
        <docblock line="175">
          <description>Unregisters a single extension</description>
          <long-description></long-description>
          <tag line="175" name="param" description="" type="\FluxAPI\Factory\" variable="$type"/>
          <tag line="175" name="param" description="" type="\FluxAPI\Factory\" variable="$name"/>
        </docblock>
        <argument line="181">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="181">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="201" package="Default">
        <name>hasPlugin</name>
        <full_name>hasPlugin</full_name>
        <docblock line="196">
          <description></description>
          <long-description></long-description>
          <tag line="196" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="196" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="196" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="211" package="Default">
        <name>getPlugins</name>
        <full_name>getPlugins</full_name>
        <docblock line="206">
          <description>Returns all registered plugins (of a given type)</description>
          <long-description></long-description>
          <tag line="206" name="param" description="if set, only plugins of that type will be returned" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="206" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$type</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="229" package="Default">
        <name>getPluginClass</name>
        <full_name>getPluginClass</full_name>
        <docblock line="222">
          <description>Returns fully class name of a plugin by a given type and name</description>
          <long-description></long-description>
          <tag line="222" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="222" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="222" name="return" description="" type="null|array">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="229">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="245" package="Default">
        <name>reduceModel</name>
        <full_name>reduceModel</full_name>
        <docblock line="238">
          <description>Reduces a model by removing existing fields or if no fields are given the entire model extend.</description>
          <long-description></long-description>
          <tag line="238" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="238" name="param" description="Field names to remove." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="238" name="param" description="the format of the $fields. Default is Api::DATA_FORMAT_ARRAY." type="\FluxAPI\Factory\[string" variable="$format]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
        </docblock>
        <argument line="245">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="245">
          <name>$fields</name>
          <default>NULL</default>
          <type>array</type>
        </argument>
        <argument line="245">
          <name>$format</name>
          <default>\FluxAPI\Api::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="307" package="Default">
        <name>extendModel</name>
        <full_name>extendModel</full_name>
        <docblock line="300">
          <description>Extends a model with new fields.</description>
          <long-description>&lt;p&gt;If the model does not exists, it will be created.&lt;/p&gt;</long-description>
          <tag line="300" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="param" description="Field definitions. Either containing real Field instances or key =&gt; value pairs" type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="300" name="param" description="the format of the $fields. Default is Api::DATA_FORMAT_ARRAY." type="\FluxAPI\Factory\[string" variable="$format]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="307">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="307">
          <name>$format</name>
          <default>\FluxAPI\Api::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="368" package="Default">
        <name>getExtends</name>
        <full_name>getExtends</full_name>
        <docblock line="363">
          <description></description>
          <long-description></long-description>
          <tag line="363" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="363" name="param" description="" type="\FluxAPI\Factory\[string" variable="$name]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
          <tag line="363" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="368">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Factory/PluginFactory.php</error>
      <error line="4" code="50000">No DocBlock was found for \FluxAPI\Factory\PluginFactory</error>
      <error line="6" code="50018">No DocBlock was found for property $_api</error>
      <error line="32" code="50010">No DocBlock was found for method __construct()</error>
      <error line="196" code="50012">No short description for method hasPlugin()</error>
      <error line="238" code="50014">Name of argument $format does not match with the DocBlock's name $format] in reduceModel()</error>
      <notice line="238" code="50013">Parameter $format] could not be found in reduceModel()</notice>
      <error line="300" code="50014">Name of argument $format does not match with the DocBlock's name $format] in extendModel()</error>
      <notice line="300" code="50013">Parameter $format] could not be found in extendModel()</notice>
      <error line="363" code="50012">No short description for method getExtends()</error>
      <error line="363" code="50014">Name of argument $name does not match with the DocBlock's name $name] in getExtends()</error>
      <notice line="363" code="50013">Parameter $name] could not be found in getExtends()</notice>
    </parse_markers>
  </file>
  <file path="Factory/PermissionFactory.php" hash="82d7c481bf8bf133eeeba18fa94fa013" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="6" package="Default">
      <extends/>
      <name>PermissionFactory</name>
      <full_name>\FluxAPI\Factory\PermissionFactory</full_name>
      <property final="false" static="false" visibility="protected" line="8" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="10" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="10">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="15" package="Default">
        <name>getDefaultAccess</name>
        <full_name>getDefaultAccess</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="20" package="Default">
        <name>hasModelAccess</name>
        <full_name>hasModelAccess</full_name>
        <argument line="20">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="20">
          <name>$model</name>
          <default>NULL</default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="20">
          <name>$action</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="39" package="Default">
        <name>hasControllerAccess</name>
        <full_name>hasControllerAccess</full_name>
        <argument line="39">
          <name>$controller_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$action</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Factory/PermissionFactory.php</error>
      <error line="6" code="50000">No DocBlock was found for \FluxAPI\Factory\PermissionFactory</error>
      <error line="8" code="50018">No DocBlock was found for property $_api</error>
      <error line="10" code="50010">No DocBlock was found for method __construct()</error>
      <error line="15" code="50010">No DocBlock was found for method getDefaultAccess()</error>
      <error line="20" code="50010">No DocBlock was found for method hasModelAccess()</error>
      <error line="39" code="50010">No DocBlock was found for method hasControllerAccess()</error>
    </parse_markers>
  </file>
  <file path="Factory/ControllerFactory.php" hash="6df77d9ada04f1a725130ea5edef60d6" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="6" package="Default">
      <extends/>
      <name>ControllerFactory</name>
      <full_name>\FluxAPI\Factory\ControllerFactory</full_name>
      <property final="false" static="false" visibility="protected" line="8" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="10" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="10">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Factory/ControllerFactory.php</error>
      <error line="6" code="50000">No DocBlock was found for \FluxAPI\Factory\ControllerFactory</error>
      <error line="8" code="50018">No DocBlock was found for property $_api</error>
      <error line="10" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="Factory/StorageFactory.php" hash="3457b87c495aa215cc822e970501f98e" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="6" package="Default">
      <extends>\Pimple</extends>
      <name>StorageFactory</name>
      <full_name>\FluxAPI\Factory\StorageFactory</full_name>
      <property final="false" static="false" visibility="protected" line="8" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="10" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="10">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="23" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="17">
          <description>Returns an instance of the storage for a given model</description>
          <long-description></long-description>
          <tag line="17" name="param" description="if not set the default storage will be returned" type="\FluxAPI\Factory\[string" variable="$model_name]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
          <tag line="17" name="return" description="" type="\FluxAPI\Factory\Storage">
            <type by_reference="false">\FluxAPI\Factory\Storage</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$model_name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Factory/StorageFactory.php</error>
      <error line="6" code="50000">No DocBlock was found for \FluxAPI\Factory\StorageFactory</error>
      <error line="8" code="50018">No DocBlock was found for property $_api</error>
      <error line="10" code="50010">No DocBlock was found for method __construct()</error>
      <error line="17" code="50014">Name of argument $model_name does not match with the DocBlock's name $model_name] in get()</error>
      <notice line="17" code="50013">Parameter $model_name] could not be found in get()</notice>
    </parse_markers>
  </file>
  <file path="Event/ModelEvent.php" hash="03641b12b1c2759239511b798bc664d4" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Event" line="7" package="Default">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ModelEvent</name>
      <full_name>\FluxAPI\Event\ModelEvent</full_name>
      <constant namespace="FluxAPI\Event" line="9" package="Default">
        <name>CREATE</name>
        <full_name>CREATE</full_name>
        <value>'model.create'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="10" package="Default">
        <name>BEFORE_CREATE</name>
        <full_name>BEFORE_CREATE</full_name>
        <value>'model.before_create'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="11" package="Default">
        <name>LOAD</name>
        <full_name>LOAD</full_name>
        <value>'model.load'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="12" package="Default">
        <name>BEFORE_LOAD</name>
        <full_name>BEFORE_LOAD</full_name>
        <value>'model.before_load'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="13" package="Default">
        <name>UPDATE</name>
        <full_name>UPDATE</full_name>
        <value>'model.update'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="14" package="Default">
        <name>BEFORE_UPDATE</name>
        <full_name>BEFORE_UPDATE</full_name>
        <value>'model.before_update'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="15" package="Default">
        <name>SAVE</name>
        <full_name>SAVE</full_name>
        <value>'model.save'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="16" package="Default">
        <name>BEFORE_SAVE</name>
        <full_name>BEFORE_SAVE</full_name>
        <value>'model.before_save'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="17" package="Default">
        <name>DELETE</name>
        <full_name>DELETE</full_name>
        <value>'model.delete'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="18" package="Default">
        <name>BEFORE_DELETE</name>
        <full_name>BEFORE_DELETE</full_name>
        <value>'model.before_delete'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="20" namespace="FluxAPI\Event" package="Default">
        <name>$_model_name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="FluxAPI\Event" package="Default">
        <name>$_model</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="22" namespace="FluxAPI\Event" package="Default">
        <name>$_query</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Event" line="24" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="24">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="24">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="24">
          <name>$model</name>
          <default>NULL</default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Event" line="31" package="Default">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Event" line="36" package="Default">
        <name>getModel</name>
        <full_name>getModel</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Event" line="41" package="Default">
        <name>getQuery</name>
        <full_name>getQuery</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Event/ModelEvent.php</error>
      <error line="7" code="50000">No DocBlock was found for \FluxAPI\Event\ModelEvent</error>
      <error line="20" code="50018">No DocBlock was found for property $_model_name</error>
      <error line="21" code="50018">No DocBlock was found for property $_model</error>
      <error line="22" code="50018">No DocBlock was found for property $_query</error>
      <error line="24" code="50010">No DocBlock was found for method __construct()</error>
      <error line="31" code="50010">No DocBlock was found for method getModelName()</error>
      <error line="36" code="50010">No DocBlock was found for method getModel()</error>
      <error line="41" code="50010">No DocBlock was found for method getQuery()</error>
    </parse_markers>
  </file>
  <file path="Format.php" hash="feabf525512926e74d8a03f549e9a5ea" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="6" package="Default">
      <extends/>
      <implements>\FluxAPI\FormatInterface</implements>
      <name>Format</name>
      <full_name>\FluxAPI\Format</full_name>
      <property final="false" static="true" visibility="protected" line="11" namespace="FluxAPI" package="Default">
        <name>$_api</name>
        <default></default>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag line="8" name="var" description="" type="\FluxAPI\FluxAPI\Api">
            <type by_reference="false">\FluxAPI\FluxAPI\Api</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="13" package="Default">
        <name>setApi</name>
        <full_name>setApi</full_name>
        <argument line="13">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="18" package="Default">
        <name>encodeFromModel</name>
        <full_name>encodeFromModel</full_name>
        <argument line="18">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="18">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="23" package="Default">
        <name>encodeFromModels</name>
        <full_name>encodeFromModels</full_name>
        <argument line="23">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="23">
          <name>$models</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="28" package="Default">
        <name>decodeForModel</name>
        <full_name>decodeForModel</full_name>
        <argument line="28">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$raw</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="33" package="Default">
        <name>decodeForModels</name>
        <full_name>decodeForModels</full_name>
        <argument line="33">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$raw</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="42" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="38">
          <description>Returns the name of the Format.</description>
          <long-description></long-description>
          <tag line="38" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Format.php</error>
      <error line="6" code="50000">No DocBlock was found for \FluxAPI\Format</error>
      <critical line="8" code="50019">No short description for property $_api</critical>
      <error line="13" code="50010">No DocBlock was found for method setApi()</error>
      <error line="18" code="50010">No DocBlock was found for method encodeFromModel()</error>
      <error line="23" code="50010">No DocBlock was found for method encodeFromModels()</error>
      <error line="28" code="50010">No DocBlock was found for method decodeForModel()</error>
      <error line="33" code="50010">No DocBlock was found for method decodeForModels()</error>
    </parse_markers>
  </file>
  <file path="Field.php" hash="66dc365ffcabd247d4c099ab8de9727a" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="8" package="FluxAPI">
      <extends/>
      <name>Field</name>
      <full_name>\FluxAPI\Field</full_name>
      <docblock line="4">
        <description>A Models field definition</description>
        <long-description></long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <constant namespace="FluxAPI" line="56" package="FluxAPI">
        <name>TYPE_STRING</name>
        <full_name>TYPE_STRING</full_name>
        <value>'string'</value>
      </constant>
      <constant namespace="FluxAPI" line="57" package="FluxAPI">
        <name>TYPE_BINARY</name>
        <full_name>TYPE_BINARY</full_name>
        <value>'binary'</value>
      </constant>
      <constant namespace="FluxAPI" line="58" package="FluxAPI">
        <name>TYPE_BYTEARRAY</name>
        <full_name>TYPE_BYTEARRAY</full_name>
        <value>'bitearray'</value>
      </constant>
      <constant namespace="FluxAPI" line="59" package="FluxAPI">
        <name>TYPE_BOOLEAN</name>
        <full_name>TYPE_BOOLEAN</full_name>
        <value>'boolean'</value>
      </constant>
      <constant namespace="FluxAPI" line="60" package="FluxAPI">
        <name>TYPE_INTEGER</name>
        <full_name>TYPE_INTEGER</full_name>
        <value>'integer'</value>
      </constant>
      <constant namespace="FluxAPI" line="61" package="FluxAPI">
        <name>TYPE_FLOAT</name>
        <full_name>TYPE_FLOAT</full_name>
        <value>'float'</value>
      </constant>
      <constant namespace="FluxAPI" line="62" package="FluxAPI">
        <name>TYPE_LONGSTRING</name>
        <full_name>TYPE_LONGSTRING</full_name>
        <value>'longstring'</value>
      </constant>
      <constant namespace="FluxAPI" line="63" package="FluxAPI">
        <name>TYPE_DATE</name>
        <full_name>TYPE_DATE</full_name>
        <value>'date'</value>
      </constant>
      <constant namespace="FluxAPI" line="64" package="FluxAPI">
        <name>TYPE_DATETIME</name>
        <full_name>TYPE_DATETIME</full_name>
        <value>'datetime'</value>
      </constant>
      <constant namespace="FluxAPI" line="65" package="FluxAPI">
        <name>TYPE_TIMESTAMP</name>
        <full_name>TYPE_TIMESTAMP</full_name>
        <value>'timestamp'</value>
      </constant>
      <constant namespace="FluxAPI" line="66" package="FluxAPI">
        <name>TYPE_ARRAY</name>
        <full_name>TYPE_ARRAY</full_name>
        <value>'array'</value>
      </constant>
      <constant namespace="FluxAPI" line="67" package="FluxAPI">
        <name>TYPE_OBJECT</name>
        <full_name>TYPE_OBJECT</full_name>
        <value>'object'</value>
      </constant>
      <constant namespace="FluxAPI" line="68" package="FluxAPI">
        <name>TYPE_RELATION</name>
        <full_name>TYPE_RELATION</full_name>
        <value>'relation'</value>
      </constant>
      <constant namespace="FluxAPI" line="70" package="FluxAPI">
        <name>HAS_ONE</name>
        <full_name>HAS_ONE</full_name>
        <value>'has_one'</value>
      </constant>
      <constant namespace="FluxAPI" line="71" package="FluxAPI">
        <name>HAS_MANY</name>
        <full_name>HAS_MANY</full_name>
        <value>'has_many'</value>
      </constant>
      <constant namespace="FluxAPI" line="72" package="FluxAPI">
        <name>BELONGS_TO_ONE</name>
        <full_name>BELONGS_TO_ONE</full_name>
        <value>'belongs_to_one'</value>
      </constant>
      <constant namespace="FluxAPI" line="73" package="FluxAPI">
        <name>BELONGS_TO_MANY</name>
        <full_name>BELONGS_TO_MANY</full_name>
        <value>'belongs_to_many'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="13" namespace="FluxAPI" package="Default">
        <name>$name</name>
        <default>NULL</default>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
          <tag line="10" name="var" description="Name of the field as stored in the storage" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="FluxAPI" package="Default">
        <name>$type</name>
        <default>NULL</default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
          <tag line="15" name="var" description="Datatype of the field" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="FluxAPI" package="Default">
        <name>$unsigned</name>
        <default>FALSE</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag line="20" name="var" description="Signed or unsigned (used for integers and floats)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="FluxAPI" package="Default">
        <name>$length</name>
        <default>NULL</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag line="25" name="var" description="Maximum length of the fields value" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="FluxAPI" package="Default">
        <name>$default</name>
        <default>NULL</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag line="30" name="var" description="Default field value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="FluxAPI" package="Default">
        <name>$primary</name>
        <default>FALSE</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag line="35" name="var" description="Flag if field is primary (mostly used for IDs)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="FluxAPI" package="Default">
        <name>$unique</name>
        <default>FALSE</default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="var" description="Flag if field value must be unique" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="48" namespace="FluxAPI" package="Default">
        <name>$autoIncrement</name>
        <default>FALSE</default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag line="45" name="var" description="Flag to set field values to automaticly increase" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="FluxAPI" package="Default">
        <name>$relationType</name>
        <default>NULL</default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag line="50" name="var" description="If the $type is of Field::TYPE_RELATION this must be set to the relation type: Field::HAS_ONE, Field::BELONGS_TO_ONE, Field::HAS_MANY, Field::BELONGS_TO_MANY" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="54" namespace="FluxAPI" package="Default">
        <name>$relationModel</name>
        <default>NULL</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="80" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="75">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="75" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="89" package="FluxAPI">
        <name>toArray</name>
        <full_name>toArray</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Field.php</error>
      <error line="54" code="50018">No DocBlock was found for property $relationModel</error>
      <error line="89" code="50010">No DocBlock was found for method toArray()</error>
    </parse_markers>
  </file>
  <file path="Exception/AccessDeniedException.php" hash="74e7cf9b7e2b665d1f9b5645278b5238" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Exception" line="5" package="Default">
      <extends>\Exception</extends>
      <name>AccessDeniedException</name>
      <full_name>\FluxAPI\Exception\AccessDeniedException</full_name>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Exception/AccessDeniedException.php</error>
      <error line="5" code="50000">No DocBlock was found for \FluxAPI\Exception\AccessDeniedException</error>
    </parse_markers>
  </file>
  <file path="Utils.php" hash="ce829431b6b65f7e4cf2336cc0ff16fe" package="Default">
    <docblock line="2">
      <description>Created by JetBrains PhpStorm.</description>
      <long-description>&lt;p&gt;User: ondrej
Date: 01.04.13
Time: 18:52
To change this template use File | Settings | File Templates.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="FluxAPI" line="13" package="Default">
      <extends/>
      <name>Utils</name>
      <full_name>\FluxAPI\Utils</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="15" package="Default">
        <name>dateToString</name>
        <full_name>dateToString</full_name>
        <argument line="15">
          <name>$date</name>
          <default></default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="20" package="Default">
        <name>dateTimeToString</name>
        <full_name>dateTimeToString</full_name>
        <argument line="20">
          <name>$date</name>
          <default></default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="25" package="Default">
        <name>dateTimeFromString</name>
        <full_name>dateTimeFromString</full_name>
        <argument line="25">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="13" code="50000">No DocBlock was found for \FluxAPI\Utils</error>
      <error line="15" code="50010">No DocBlock was found for method dateToString()</error>
      <error line="20" code="50010">No DocBlock was found for method dateTimeToString()</error>
      <error line="25" code="50010">No DocBlock was found for method dateTimeFromString()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="FluxAPI" full_name="FluxAPI"/>
  <namespace name="FluxAPI" full_name="FluxAPI">
    <namespace name="Cli" full_name="FluxAPI\Cli"/>
    <namespace name="Event" full_name="FluxAPI\Event"/>
    <namespace name="EventListener" full_name="FluxAPI\EventListener"/>
    <namespace name="Exception" full_name="FluxAPI\Exception"/>
    <namespace name="Factory" full_name="FluxAPI\Factory"/>
  </namespace>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
