<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="PHP-FluxAPI">
  <file path="FluxAPI/Api.php" hash="418aec4559acc97b93da39922857b60f" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="15" package="FluxAPI">
      <extends>\Pimple</extends>
      <name>Api</name>
      <full_name>\FluxAPI\Api</full_name>
      <docblock line="4">
        <description>This is the entry point for all API calls.</description>
        <long-description>&lt;p&gt;It contains magic methods to operate on all ressources and controllers.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
        <tag line="4" name="method" description="Creates and returns a new instance of _Model_. If $data is given the model will contain that initial data." type="\FluxAPI\Model" method_name="create_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$data]</name>
            <default/>
            <type>[array</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Loads a _Model_ by id or with a given query. If $format is given the model will be returned in the given format." type="\FluxAPI\Model" method_name="load_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query</name>
            <default/>
            <type>string|Query</type>
          </argument>
          <argument>
            <name>$format]</name>
            <default/>
            <type>[string</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Loads a list of _Model_s with a given query. If $format is given the models will be returned in the given format." type="\FluxAPI\Model" method_name="load_Model_s">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query]</name>
            <default/>
            <type>[Query</type>
          </argument>
          <argument>
            <name>$format]</name>
            <default/>
            <type>[string</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Saves a _Model_" type="\FluxAPI\Model" method_name="save_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$model</name>
            <default/>
            <type>Model</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Deletes a single _Model_ by id or by a given query" type="\FluxAPI\Model" method_name="delete_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query</name>
            <default/>
            <type>string|Query</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Deletes a list of _Model_s by a given query" type="\FluxAPI\Model" method_name="delete_Model_s">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query]</name>
            <default/>
            <type>[Query</type>
          </argument>
        </tag>
      </docblock>
      <constant namespace="FluxAPI" line="17" package="FluxAPI">
        <name>VERSION</name>
        <full_name>VERSION</full_name>
        <value>'0.1-DEV'</value>
      </constant>
      <constant namespace="FluxAPI" line="19" package="FluxAPI">
        <name>DATA_FORMAT_ARRAY</name>
        <full_name>DATA_FORMAT_ARRAY</full_name>
        <value>'array'</value>
      </constant>
      <constant namespace="FluxAPI" line="20" package="FluxAPI">
        <name>DATA_FORMAT_JSON</name>
        <full_name>DATA_FORMAT_JSON</full_name>
        <value>'json'</value>
      </constant>
      <constant namespace="FluxAPI" line="21" package="FluxAPI">
        <name>DATA_FORMAT_XML</name>
        <full_name>DATA_FORMAT_XML</full_name>
        <value>'xml'</value>
      </constant>
      <constant namespace="FluxAPI" line="22" package="FluxAPI">
        <name>DATA_FORMAT_YAML</name>
        <full_name>DATA_FORMAT_YAML</full_name>
        <value>'yaml'</value>
      </constant>
      <constant namespace="FluxAPI" line="24" package="FluxAPI">
        <name>EARLY_EVENT</name>
        <full_name>EARLY_EVENT</full_name>
        <value>-512</value>
      </constant>
      <constant namespace="FluxAPI" line="25" package="FluxAPI">
        <name>LATE_EVENT</name>
        <full_name>LATE_EVENT</full_name>
        <value>512</value>
      </constant>
      <property final="false" static="false" visibility="public" line="30" namespace="FluxAPI" package="Default">
        <name>$app</name>
        <default>NULL</default>
        <docblock line="27">
          <description/>
          <long-description/>
          <tag line="27" name="var" description="The silex app" type="\Silex\Application">
            <type by_reference="false">\Silex\Application</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="FluxAPI" package="Default">
        <name>$config</name>
        <default>array()</default>
        <docblock line="32">
          <description/>
          <long-description/>
          <tag line="32" name="var" description="FluxAPI configuration" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="43" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>Constructor</description>
          <long-description/>
          <tag line="37" name="param" description="" type="\Silex\Application" variable="$app">
            <type by_reference="false">\Silex\Application</type>
          </tag>
          <tag line="37" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$app</name>
          <default/>
          <type>\Silex\Application</type>
        </argument>
        <argument line="43">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="151" package="FluxAPI">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="142">
          <description>Returns the singleton of the Api</description>
          <long-description>&lt;p&gt;If no Api instance exists yet it will create one and return it.&lt;/p&gt;</long-description>
          <tag line="142" name="param" description="" type="\Silex\Application" variable="$app">
            <type by_reference="false">\Silex\Application</type>
          </tag>
          <tag line="142" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="142" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$app</name>
          <default>NULL</default>
          <type>\Silex\Application</type>
        </argument>
        <argument line="151">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="167" package="FluxAPI">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="160">
          <description>Calls the magic methods</description>
          <long-description/>
          <tag line="160" name="param" description="" type="\FluxAPI\" variable="$method"/>
          <tag line="160" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="160" name="return" description="" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="167">
          <name>$arguments</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="178" package="FluxAPI">
        <name>registerPluginMethods</name>
        <full_name>registerPluginMethods</full_name>
        <docblock line="172">
          <description>Registers all magic methods for a plugin</description>
          <long-description/>
          <tag line="172" name="param" description="the plugin type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="param" description="the plugin name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="178">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="178">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="193" package="FluxAPI">
        <name>unregisterPluginMethods</name>
        <full_name>unregisterPluginMethods</full_name>
        <docblock line="187">
          <description>Unregisters all magic methods of a plugin</description>
          <long-description/>
          <tag line="187" name="param" description="the plugin type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="187" name="param" description="the plugin name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="193">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="207" package="FluxAPI">
        <name>registerModelMethods</name>
        <full_name>registerModelMethods</full_name>
        <docblock line="202">
          <description>Registers all magic methods for a registered model</description>
          <long-description/>
          <tag line="202" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="367" package="FluxAPI">
        <name>unregisterModelMethods</name>
        <full_name>unregisterModelMethods</full_name>
        <docblock line="362">
          <description>Unregisters all magic methods for a registered model</description>
          <long-description/>
          <tag line="362" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="367">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="382" package="FluxAPI">
        <name>extendModel</name>
        <full_name>extendModel</full_name>
        <argument line="382">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="382">
          <name>$fields</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="382">
          <name>$format</name>
          <default>self::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="387" package="FluxAPI">
        <name>reduceModel</name>
        <full_name>reduceModel</full_name>
        <argument line="387">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="387">
          <name>$fields</name>
          <default>NULL</default>
          <type>array</type>
        </argument>
        <argument line="387">
          <name>$format</name>
          <default>self::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="396" package="FluxAPI">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <docblock line="392">
          <description>Migrates the storage dabase(s) (for a given model)</description>
          <long-description/>
          <tag line="392" name="param" description="" type="\FluxAPI\[string" variable="$model_name]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
        </docblock>
        <argument line="396">
          <name>$model_name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="410" package="FluxAPI">
        <name>on</name>
        <full_name>on</full_name>
        <docblock line="402">
          <description>Adds an event listener that listens on the specified events.</description>
          <long-description/>
          <tag line="402" name="param" description="The event to listen on" type="string" variable="$eventName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="402" name="param" description="The listener" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="402" name="param" description="The higher this value, the earlier an event&#10;                           listener will be triggered in the chain (defaults to 0)" type="integer" variable="$priority">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="410">
          <name>$eventName</name>
          <default/>
          <type/>
        </argument>
        <argument line="410">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
        <argument line="410">
          <name>$priority</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="223">converting models to certain formats should be dynamic/extendable and within the model factory?</todo>
      <todo line="268">converting models to certain formats should be dynamic/extendable and within the model factory?</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Api.php</error>
      <error line="382" code="50010">No DocBlock was found for method extendModel()</error>
      <error line="387" code="50010">No DocBlock was found for method reduceModel()</error>
      <error line="392" code="50014">Name of argument $model_name does not match with the DocBlock's name $model_name] in migrate()</error>
      <notice line="392" code="50013">Parameter $model_name] could not be found in migrate()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/CliApi.php" hash="f00f98f71911aca150795ed5385a0730" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="9" package="FluxAPI">
      <extends>\FluxAPI\Api</extends>
      <name>CliApi</name>
      <full_name>\FluxAPI\CliApi</full_name>
      <docblock line="5">
        <description>Command line FluxAPI</description>
        <long-description/>
        <tag line="5" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="11" namespace="FluxAPI" package="Default">
        <name>$_cli_app</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="13" package="FluxAPI">
        <name>setCliApplication</name>
        <full_name>setCliApplication</full_name>
        <argument line="13">
          <name>$cli_app</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="18" package="FluxAPI">
        <name>run</name>
        <full_name>run</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/CliApi.php</error>
      <error line="11" code="50018">No DocBlock was found for property $_cli_app</error>
      <error line="13" code="50010">No DocBlock was found for method setCliApplication()</error>
      <error line="18" code="50010">No DocBlock was found for method run()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Model.php" hash="25229ac5c185dcd951daf9e8688a634f" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="11" package="FluxAPI">
      <extends/>
      <name>Model</name>
      <full_name>\FluxAPI\Model</full_name>
      <docblock line="4">
        <description>A Model definition plugin</description>
        <long-description>&lt;p&gt;All your model plugins must inherit form this class.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="FluxAPI" package="Default">
        <name>$_data</name>
        <default>array()</default>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="Internal data" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="21" namespace="FluxAPI" package="Default">
        <name>$_loaded_relations</name>
        <default>array()</default>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="Internal lookup of already (lazy) loaded relation fields" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="FluxAPI" package="Default">
        <name>$_fields</name>
        <default>array()</default>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="Internal list of field definitions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="FluxAPI" package="Default">
        <name>$_modified</name>
        <default>false</default>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="Internal flag that's true if the model instance was modified since it was loaded" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="FluxAPI" package="Default">
        <name>$_api</name>
        <default/>
        <docblock line="33">
          <description/>
          <long-description/>
          <tag line="33" name="var" description="Api instance" type="\FluxAPI\Api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="43" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>Constructor</description>
          <long-description/>
          <tag line="38" name="param" description="if set the model will contain that initial data" type="\FluxAPI\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="60" package="FluxAPI">
        <name>addField</name>
        <full_name>addField</full_name>
        <docblock line="53">
          <description>Adds a new field definition to the model</description>
          <long-description/>
          <tag line="53" name="chainable" description=""/>
          <tag line="53" name="param" description="" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
          <tag line="53" name="return" description="$this" type="\FluxAPI\Model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="73" package="FluxAPI">
        <name>getField</name>
        <full_name>getField</full_name>
        <docblock line="67">
          <description>Returns a field definition by it's name</description>
          <long-description/>
          <tag line="67" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="" type="null|\FluxAPI\Field">
            <type by_reference="false">null</type>
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="87" package="FluxAPI">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="82">
          <description>Returns all field definitions of this model</description>
          <long-description/>
          <tag line="82" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="97" package="FluxAPI">
        <name>getRelationFields</name>
        <full_name>getRelationFields</full_name>
        <docblock line="92">
          <description>Returns all relation fields of this model</description>
          <long-description/>
          <tag line="92" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="115" package="FluxAPI">
        <name>hasField</name>
        <full_name>hasField</full_name>
        <docblock line="109">
          <description>Checks if a field exists in the model</description>
          <long-description/>
          <tag line="109" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="true if field exists, else false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="123" package="FluxAPI">
        <name>defineFields</name>
        <full_name>defineFields</full_name>
        <docblock line="120">
          <description>Defines field definitions of this model.</description>
          <long-description>&lt;p&gt;Extend this method in child classes while calling parent::defineFields()&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="137" package="FluxAPI">
        <name>setDefaults</name>
        <full_name>setDefaults</full_name>
        <docblock line="134">
          <description>Sets default field values.</description>
          <long-description>&lt;p&gt;Called automatically in the constructor.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="147" package="FluxAPI">
        <name>addExtends</name>
        <full_name>addExtends</full_name>
        <docblock line="144">
          <description>Adds dynamic extends (currently only fields)</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="163" package="FluxAPI">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="158">
          <description>Populates the model instance with the given data.</description>
          <long-description/>
          <tag line="158" name="param" description="" type="\FluxAPI\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="176" package="FluxAPI">
        <name>getClassName</name>
        <full_name>getClassName</full_name>
        <docblock line="171">
          <description>Returns the full class name of the model</description>
          <long-description/>
          <tag line="171" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="186" package="FluxAPI">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
        <docblock line="181">
          <description>Returns the model name which is basically the last part of the full class name.</description>
          <long-description/>
          <tag line="181" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="196" package="FluxAPI">
        <name>isNew</name>
        <full_name>isNew</full_name>
        <docblock line="192">
          <description>Checks if the model instance is new or already existing in the storage</description>
          <long-description/>
          <tag line="192" name="return" description="true if the model instance is new, else false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="205" package="FluxAPI">
        <name>isModified</name>
        <full_name>isModified</full_name>
        <docblock line="201">
          <description>Checks if the model instance was modified since it was loaded</description>
          <long-description/>
          <tag line="201" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="216" package="FluxAPI">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="210">
          <description>Returns a magic property (a fields value)</description>
          <long-description/>
          <tag line="210" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="210" name="return" description="" type="null|mixed">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="241" package="FluxAPI">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="235">
          <description>Sets a magic property (a fields value)</description>
          <long-description/>
          <tag line="235" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="241">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="260" package="FluxAPI">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="254">
          <description>Checks if a magic property (a fields value) isset</description>
          <long-description/>
          <tag line="254" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="254" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="269" package="FluxAPI">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="265">
          <description>Unsets a magic property (a fields value)</description>
          <long-description/>
          <tag line="265" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="279" package="FluxAPI">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="274">
          <description>Magic method to return a string represantation of the model</description>
          <long-description/>
          <tag line="274" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="289" package="FluxAPI">
        <name>toArray</name>
        <full_name>toArray</full_name>
        <docblock line="284">
          <description>Returns an array represantation of the model</description>
          <long-description/>
          <tag line="284" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="316" package="FluxAPI">
        <name>toString</name>
        <full_name>toString</full_name>
        <docblock line="311">
          <description>Returns a string represantation of the model</description>
          <long-description/>
          <tag line="311" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="326" package="FluxAPI">
        <name>toJson</name>
        <full_name>toJson</full_name>
        <docblock line="321">
          <description>Returns a JSON string represantation of the model</description>
          <long-description/>
          <tag line="321" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="337" package="FluxAPI">
        <name>toXml</name>
        <full_name>toXml</full_name>
        <docblock line="332">
          <description>Returns a XML string represantation of the model</description>
          <long-description/>
          <tag line="332" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="349" package="FluxAPI">
        <name>toYaml</name>
        <full_name>toYaml</full_name>
        <docblock line="344">
          <description>Returns a YAML string represantation of the model</description>
          <long-description/>
          <tag line="344" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Model.php</error>
      <error line="38" code="50014">Name of argument $data does not match with the DocBlock's name $data] in __construct()</error>
      <notice line="38" code="50013">Parameter $data] could not be found in __construct()</notice>
      <error line="158" code="50014">Name of argument $data does not match with the DocBlock's name $data] in populate()</error>
      <error line="158" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $data in populate()</error>
      <notice line="158" code="50013">Parameter $data] could not be found in populate()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/Cli/Load.php" hash="d99e5eed6c75b12e073a9e9b4a282052" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Cli" line="11" package="Default">
      <extends>\Symfony\Component\Console\Command\Command</extends>
      <name>Load</name>
      <full_name>\FluxAPI\Cli\Load</full_name>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Cli" line="13" package="Default">
        <name>configure</name>
        <full_name>configure</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Cli" line="36" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <argument line="36">
          <name>$input</name>
          <default/>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="36">
          <name>$output</name>
          <default/>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Cli/Load.php</error>
      <error line="11" code="50000">No DocBlock was found for \FluxAPI\Cli\Load</error>
      <error line="13" code="50010">No DocBlock was found for method configure()</error>
      <error line="36" code="50010">No DocBlock was found for method execute()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Cli/Migrate.php" hash="a7755198ff25a1733c91c9110ce6010f" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Cli" line="11" package="Default">
      <extends>\Symfony\Component\Console\Command\Command</extends>
      <name>Migrate</name>
      <full_name>\FluxAPI\Cli\Migrate</full_name>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Cli" line="13" package="Default">
        <name>configure</name>
        <full_name>configure</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="FluxAPI\Cli" line="25" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <argument line="25">
          <name>$input</name>
          <default/>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="25">
          <name>$output</name>
          <default/>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Cli/Migrate.php</error>
      <error line="11" code="50000">No DocBlock was found for \FluxAPI\Cli\Migrate</error>
      <error line="13" code="50010">No DocBlock was found for method configure()</error>
      <error line="25" code="50010">No DocBlock was found for method execute()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Storage.php" hash="7cb8849821e09d223b441e17a74e4586" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="13" package="FluxAPI">
      <extends/>
      <name>Storage</name>
      <full_name>\FluxAPI\Storage</full_name>
      <docblock line="6">
        <description>Data storage plugin</description>
        <long-description>&lt;p&gt;All your storage plugins must inherit from this&lt;/p&gt;</long-description>
        <tag line="6" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="18" namespace="FluxAPI" package="Default">
        <name>$_api</name>
        <default>NULL</default>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="Internal Api instance" type="\FluxAPI\Api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="FluxAPI" package="Default">
        <name>$_filters</name>
        <default>array()</default>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="Internal list of registered filters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="FluxAPI" package="Default">
        <name>$config</name>
        <default>array()</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="Configuration" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="36" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description>Constructor</description>
          <long-description/>
          <tag line="30" name="param" description="" type="\FluxAPI\Api" variable="$api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
          <tag line="30" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
        <argument line="36">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="50" package="FluxAPI">
        <name>getCollectionName</name>
        <full_name>getCollectionName</full_name>
        <docblock line="44">
          <description>Returns the collection name from a given model instance</description>
          <long-description/>
          <tag line="44" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="78" package="FluxAPI">
        <name>addFilters</name>
        <full_name>addFilters</full_name>
        <docblock line="55">
          <description>Adds/registers all filters available in this storage</description>
          <long-description>&lt;p&gt;Use this method in child classes to add aditional filters while calling parent::addFilters().&lt;/p&gt;

&lt;p&gt;Default filters are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;select&lt;/li&gt;
&lt;li&gt;equal or =&lt;/li&gt;
&lt;li&gt;not or !=&lt;/li&gt;
&lt;li&gt;gt or &gt;&lt;/li&gt;
&lt;li&gt;gte or &gt;=&lt;/li&gt;
&lt;li&gt;lt or &amp;lt;&lt;/li&gt;
&lt;li&gt;lte or &amp;lt;=&lt;/li&gt;
&lt;li&gt;range&lt;/li&gt;
&lt;li&gt;order&lt;/li&gt;
&lt;li&gt;limit&lt;/li&gt;
&lt;li&gt;count&lt;/li&gt;
&lt;li&gt;like&lt;/li&gt;
&lt;li&gt;in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your storage plugin should at least implement those filters.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="109" package="FluxAPI">
        <name>addFilter</name>
        <full_name>addFilter</full_name>
        <docblock line="101">
          <description>Adds/registers a new filter</description>
          <long-description/>
          <tag line="101" name="chainable" description=""/>
          <tag line="101" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="" type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="return" description="$this" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="109">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="123" package="FluxAPI">
        <name>hasFilter</name>
        <full_name>hasFilter</full_name>
        <docblock line="117">
          <description>Checks if a filter exists</description>
          <long-description/>
          <tag line="117" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="117" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="134" package="FluxAPI">
        <name>getFilter</name>
        <full_name>getFilter</full_name>
        <docblock line="128">
          <description>Returns a filters callback</description>
          <long-description/>
          <tag line="128" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="return" description="callback string or null if not found" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="148" package="FluxAPI">
        <name>getFilters</name>
        <full_name>getFilters</full_name>
        <docblock line="143">
          <description>Returns all existing filters</description>
          <long-description/>
          <tag line="143" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="160" package="FluxAPI">
        <name>executeFilter</name>
        <full_name>executeFilter</full_name>
        <docblock line="153">
          <description>Executes the callback of a given filter</description>
          <long-description/>
          <tag line="153" name="param" description="" type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="param" description="parameters passed to the $callback function" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="153" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
        <argument line="160">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="173" package="FluxAPI">
        <name>filterSelect</name>
        <full_name>filterSelect</full_name>
        <docblock line="165">
          <description>'select' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="165" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="165" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="173">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="186" package="FluxAPI">
        <name>filterEqual</name>
        <full_name>filterEqual</full_name>
        <docblock line="178">
          <description>'equal' or '=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="178" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="178" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="186">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="199" package="FluxAPI">
        <name>filterNotEqual</name>
        <full_name>filterNotEqual</full_name>
        <docblock line="191">
          <description>'not' or '!=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="191" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="191" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="199">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="199">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="212" package="FluxAPI">
        <name>filterGreaterThen</name>
        <full_name>filterGreaterThen</full_name>
        <docblock line="204">
          <description>'gt' or '&gt;' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="204" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="204" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="212">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="225" package="FluxAPI">
        <name>filterGreaterThenOrEqual</name>
        <full_name>filterGreaterThenOrEqual</full_name>
        <docblock line="217">
          <description>'gte' or '&gt;=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="217" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="217" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="225">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="238" package="FluxAPI">
        <name>filterLessThen</name>
        <full_name>filterLessThen</full_name>
        <docblock line="230">
          <description>'lt' or '&lt;' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="230" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="230" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="238">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="251" package="FluxAPI">
        <name>filterLessThenOrEqual</name>
        <full_name>filterLessThenOrEqual</full_name>
        <docblock line="243">
          <description>'lte' or '&lt;=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="243" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="243" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="251">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="264" package="FluxAPI">
        <name>filterRange</name>
        <full_name>filterRange</full_name>
        <docblock line="256">
          <description>'range' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="256" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="256" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="264">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="277" package="FluxAPI">
        <name>filterOrder</name>
        <full_name>filterOrder</full_name>
        <docblock line="269">
          <description>'order' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="269" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="269" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="277">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="277">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="290" package="FluxAPI">
        <name>filterLimit</name>
        <full_name>filterLimit</full_name>
        <docblock line="282">
          <description>'limit' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="282" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="282" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="290">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="303" package="FluxAPI">
        <name>filterCount</name>
        <full_name>filterCount</full_name>
        <docblock line="295">
          <description>'count' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="295" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="295" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="303">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="303">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="316" package="FluxAPI">
        <name>filterLike</name>
        <full_name>filterLike</full_name>
        <docblock line="308">
          <description>'like' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="308" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="308" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="316">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="329" package="FluxAPI">
        <name>filterIn</name>
        <full_name>filterIn</full_name>
        <docblock line="321">
          <description>'in' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="321" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="321" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="329">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="342" package="FluxAPI">
        <name>getLastId</name>
        <full_name>getLastId</full_name>
        <docblock line="334">
          <description>Returns last inserted ID of a given model type</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="334" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="354" package="FluxAPI">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="347">
          <description>Returns the total count of a model (or the model by a query)</description>
          <long-description/>
          <tag line="347" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="347" name="param" description="" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="347" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="354">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="373" package="FluxAPI">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="366">
          <description>Checks if a given model instance already exists in the storage</description>
          <long-description/>
          <tag line="366" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="366" name="param" description="" type="\FluxAPI\Model" variable="$instance">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="366" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="373">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="373">
          <name>$instance</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="395" package="FluxAPI">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="388">
          <description>Saves/updates a given model instance to the storage</description>
          <long-description/>
          <tag line="388" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="388" name="param" description="" type="\FluxAPI\Model" variable="$instance">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="388" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="395">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="395">
          <name>$instance</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="460" package="FluxAPI">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="453">
          <description>Loads instances of a model from the storage</description>
          <long-description/>
          <tag line="453" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="453" name="param" description="if not set all model instances will be loaded" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="453" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="460">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="460">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="479" package="FluxAPI">
        <name>loadRelation</name>
        <full_name>loadRelation</full_name>
        <docblock line="470">
          <description>Loads a single or a list of related models of a model instance.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="470" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="470" name="param" description="name of the relation field in the model instance" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="470" name="return" description="" type="\FluxAPI\Model|array">
            <type by_reference="false">\FluxAPI\Model</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="479">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="479">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="493" package="FluxAPI">
        <name>addRelation</name>
        <full_name>addRelation</full_name>
        <docblock line="484">
          <description>Makes a model to model relation persistante in the storage</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="484" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="484" name="param" description="" type="\FluxAPI\Model" variable="$relation">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="484" name="param" description="the relation field in the $model" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="493">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="493">
          <name>$relation</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="493">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="505" package="FluxAPI">
        <name>removeRelation</name>
        <full_name>removeRelation</full_name>
        <docblock line="498">
          <description>Removes a model to model relation from the storage.</description>
          <long-description/>
          <tag line="498" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="498" name="param" description="" type="\FluxAPI\Model" variable="$relation">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="498" name="param" description="the relation field in the $model" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="505">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="505">
          <name>$relation</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="505">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="519" package="FluxAPI">
        <name>removeAllRelations</name>
        <full_name>removeAllRelations</full_name>
        <docblock line="510">
          <description>Removes all model to model relations from the storage</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="510" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="510" name="param" description="the relation field in the $model" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
          <tag line="510" name="param" description="if set related models with the given IDs are not removed" type="\FluxAPI\[array" variable="$exclude_ids]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
        </docblock>
        <argument line="519">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="519">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
        <argument line="519">
          <name>$exclude_ids</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="532" package="FluxAPI">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="524">
          <description>Updates a list of models in the storage with given data</description>
          <long-description/>
          <tag line="524" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="524" name="param" description="if null all models will be updated" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="524" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="524" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="532">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="532">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="532">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="550" package="FluxAPI">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="543">
          <description>Deletes a list of models from the storage</description>
          <long-description/>
          <tag line="543" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="543" name="param" description="if null all models will be deleted" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="543" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="550">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="550">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="569" package="FluxAPI">
        <name>executeQuery</name>
        <full_name>executeQuery</full_name>
        <docblock line="561">
          <description>Executes a query</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="561" name="param" description="" type="\FluxAPI\Query" variable="$query">
            <type by_reference="false">\FluxAPI\Query</type>
          </tag>
          <tag line="561" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="569">
          <name>$query</name>
          <default/>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="587" package="FluxAPI">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="580">
          <description>Checks if the storage plugin is already connected to the storage host (e.g.</description>
          <long-description>&lt;p&gt;Database)&lt;/p&gt;

&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="580" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="597" package="FluxAPI">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="592">
          <description>Connects the storage plugin to the storage host (e.g.</description>
          <long-description>&lt;p&gt;Database)&lt;/p&gt;

&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="609" package="FluxAPI">
        <name>getConnection</name>
        <full_name>getConnection</full_name>
        <docblock line="602">
          <description>Returns a handler to the storage host (e.g.</description>
          <long-description>&lt;p&gt;Database)&lt;/p&gt;

&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="602" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="621" package="FluxAPI">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <docblock line="614">
          <description>Migrates the storage structure to all or a single model definition</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="614" name="param" description="" type="\FluxAPI\[string" variable="$model]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
        </docblock>
        <argument line="621">
          <name>$model_name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="632" package="FluxAPI">
        <name>serialize</name>
        <full_name>serialize</full_name>
        <docblock line="626">
          <description>Converts the given data to a serialized string</description>
          <long-description/>
          <tag line="626" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="626" name="param" description="" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="632">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
        <argument line="632">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="661" package="FluxAPI">
        <name>unserialize</name>
        <full_name>unserialize</full_name>
        <docblock line="655">
          <description>Converts a serialized string to a real datatype</description>
          <long-description/>
          <tag line="655" name="param" description="" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="655" name="param" description="" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="661">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
        <argument line="661">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Storage.php</error>
      <error line="347" code="50014">Name of argument $query does not match with the DocBlock's name $query] in count()</error>
      <error line="347" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in count()</error>
      <notice line="347" code="50013">Parameter $query] could not be found in count()</notice>
      <error line="453" code="50014">Name of argument $query does not match with the DocBlock's name $query] in load()</error>
      <error line="453" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in load()</error>
      <notice line="453" code="50013">Parameter $query] could not be found in load()</notice>
      <error line="510" code="50014">Name of argument $exclude_ids does not match with the DocBlock's name $exclude_ids] in removeAllRelations()</error>
      <error line="510" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $exclude_ids in removeAllRelations()</error>
      <notice line="510" code="50013">Parameter $exclude_ids] could not be found in removeAllRelations()</notice>
      <error line="524" code="50014">Name of argument $query does not match with the DocBlock's name $query] in update()</error>
      <error line="524" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in update()</error>
      <notice line="524" code="50013">Parameter $query] could not be found in update()</notice>
      <error line="543" code="50014">Name of argument $query does not match with the DocBlock's name $query] in delete()</error>
      <error line="543" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in delete()</error>
      <notice line="543" code="50013">Parameter $query] could not be found in delete()</notice>
      <error line="614" code="50014">Name of argument $model_name does not match with the DocBlock's name $model] in migrate()</error>
      <notice line="614" code="50013">Parameter $model] could not be found in migrate()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/Permission.php" hash="7a77b778f50153e6a963fdad8fc11b6f" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="6" package="Default">
      <extends/>
      <name>Permission</name>
      <full_name>\FluxAPI\Permission</full_name>
      <property final="false" static="false" visibility="protected" line="8" namespace="FluxAPI" package="Default">
        <name>$_api</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="10" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="10">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="15" package="Default">
        <name>hasModelAccess</name>
        <full_name>hasModelAccess</full_name>
        <argument line="15">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="15">
          <name>$model</name>
          <default>NULL</default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="15">
          <name>$action</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="20" package="Default">
        <name>hasControllerAccess</name>
        <full_name>hasControllerAccess</full_name>
        <argument line="20">
          <name>$controller_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="20">
          <name>$action</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Permission.php</error>
      <error line="6" code="50000">No DocBlock was found for \FluxAPI\Permission</error>
      <error line="8" code="50018">No DocBlock was found for property $_api</error>
      <error line="10" code="50010">No DocBlock was found for method __construct()</error>
      <error line="15" code="50010">No DocBlock was found for method hasModelAccess()</error>
      <error line="20" code="50010">No DocBlock was found for method hasControllerAccess()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Plugin.php" hash="c8d5c63bebdb6693d6f68652c6d4d0c9" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="13" package="FluxAPI">
      <extends/>
      <name>Plugin</name>
      <full_name>\FluxAPI\Plugin</full_name>
      <docblock line="4">
        <description>A general plugin</description>
        <long-description>&lt;p&gt;All general plugins must inherit from this.
General plugins do not fall into one of the following categories: Model, Storage, Cache, Permission, Controller
For these categories special base classes exist.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="22" package="FluxAPI">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="15">
          <description>Called when the plugin get's registered</description>
          <long-description>&lt;p&gt;Use this method to make your plugin magic.&lt;/p&gt;</long-description>
          <tag line="15" name="param" description="" type="\FluxAPI\Api" variable="$api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Plugin.php</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/EventListener/ModelListener.php" hash="070a1250af5d416207b6924b2e0d1e0f" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\EventListener" line="8" package="Default">
      <extends/>
      <implements>\Symfony\Component\EventDispatcher\EventSubscriberInterface</implements>
      <name>ModelListener</name>
      <full_name>\FluxAPI\EventListener\ModelListener</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="FluxAPI\EventListener" package="Default">
        <name>$_api</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="12" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="12">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="17" package="Default">
        <name>onModelBeforeCreate</name>
        <full_name>onModelBeforeCreate</full_name>
        <argument line="17">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="22" package="Default">
        <name>onModelCreate</name>
        <full_name>onModelCreate</full_name>
        <argument line="22">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="27" package="Default">
        <name>onModelBeforeLoad</name>
        <full_name>onModelBeforeLoad</full_name>
        <argument line="27">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="32" package="Default">
        <name>onModelLoad</name>
        <full_name>onModelLoad</full_name>
        <argument line="32">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="37" package="Default">
        <name>onModelBeforeUpdate</name>
        <full_name>onModelBeforeUpdate</full_name>
        <argument line="37">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="42" package="Default">
        <name>onModelUpdate</name>
        <full_name>onModelUpdate</full_name>
        <argument line="42">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="47" package="Default">
        <name>onModelBeforeSave</name>
        <full_name>onModelBeforeSave</full_name>
        <argument line="47">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="52" package="Default">
        <name>onModelSave</name>
        <full_name>onModelSave</full_name>
        <argument line="52">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="57" package="Default">
        <name>onModelBeforeDelete</name>
        <full_name>onModelBeforeDelete</full_name>
        <argument line="57">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\EventListener" line="62" package="Default">
        <name>onModelDelete</name>
        <full_name>onModelDelete</full_name>
        <argument line="62">
          <name>$event</name>
          <default/>
          <type>\FluxAPI\Event\ModelEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI\EventListener" line="67" package="Default">
        <name>getSubscribedEvents</name>
        <full_name>getSubscribedEvents</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/EventListener/ModelListener.php</error>
      <error line="8" code="50000">No DocBlock was found for \FluxAPI\EventListener\ModelListener</error>
      <error line="10" code="50018">No DocBlock was found for property $_api</error>
      <error line="12" code="50010">No DocBlock was found for method __construct()</error>
      <error line="17" code="50010">No DocBlock was found for method onModelBeforeCreate()</error>
      <error line="22" code="50010">No DocBlock was found for method onModelCreate()</error>
      <error line="27" code="50010">No DocBlock was found for method onModelBeforeLoad()</error>
      <error line="32" code="50010">No DocBlock was found for method onModelLoad()</error>
      <error line="37" code="50010">No DocBlock was found for method onModelBeforeUpdate()</error>
      <error line="42" code="50010">No DocBlock was found for method onModelUpdate()</error>
      <error line="47" code="50010">No DocBlock was found for method onModelBeforeSave()</error>
      <error line="52" code="50010">No DocBlock was found for method onModelSave()</error>
      <error line="57" code="50010">No DocBlock was found for method onModelBeforeDelete()</error>
      <error line="62" code="50010">No DocBlock was found for method onModelDelete()</error>
      <error line="67" code="50010">No DocBlock was found for method getSubscribedEvents()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Query.php" hash="1f18633d225c3d8c105d9d0ae8079cbd" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="8" package="FluxAPI">
      <extends/>
      <name>Query</name>
      <full_name>\FluxAPI\Query</full_name>
      <docblock line="4">
        <description>A Storage Query</description>
        <long-description/>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <constant namespace="FluxAPI" line="35" package="FluxAPI">
        <name>TYPE_UPDATE</name>
        <full_name>TYPE_UPDATE</full_name>
        <value>'update'</value>
      </constant>
      <constant namespace="FluxAPI" line="36" package="FluxAPI">
        <name>TYPE_INSERT</name>
        <full_name>TYPE_INSERT</full_name>
        <value>'insert'</value>
      </constant>
      <constant namespace="FluxAPI" line="37" package="FluxAPI">
        <name>TYPE_DELETE</name>
        <full_name>TYPE_DELETE</full_name>
        <value>'delete'</value>
      </constant>
      <constant namespace="FluxAPI" line="38" package="FluxAPI">
        <name>TYPE_SELECT</name>
        <full_name>TYPE_SELECT</full_name>
        <value>'select'</value>
      </constant>
      <constant namespace="FluxAPI" line="39" package="FluxAPI">
        <name>TYPE_COUNT</name>
        <full_name>TYPE_COUNT</full_name>
        <value>'count'</value>
      </constant>
      <property final="false" static="false" visibility="private" line="13" namespace="FluxAPI" package="Default">
        <name>$_filters</name>
        <default>array()</default>
        <docblock line="10">
          <description/>
          <long-description/>
          <tag line="10" name="var" description="Internal list of added filters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="18" namespace="FluxAPI" package="Default">
        <name>$_modelName</name>
        <default>NULL</default>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="Model this query is related to" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="23" namespace="FluxAPI" package="Default">
        <name>$_storage</name>
        <default>NULL</default>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="the storage using this query" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="28" namespace="FluxAPI" package="Default">
        <name>$_type</name>
        <default>NULL</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="The query type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="FluxAPI" package="Default">
        <name>$_data</name>
        <default>array()</default>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="var" description="Internal values for a INSERT or UPDATE query" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="44" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="41">
          <description>Constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="57" package="FluxAPI">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="49">
          <description>Adds a new query filter</description>
          <long-description/>
          <tag line="49" name="chainable" description=""/>
          <tag line="49" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="return" description="$this" type="\FluxAPI\Query">
            <type by_reference="false">\FluxAPI\Query</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="68" package="FluxAPI">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="63">
          <description>Executes the query and returns the query results (if any)</description>
          <long-description/>
          <tag line="63" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="79" package="FluxAPI">
        <name>getFilters</name>
        <full_name>getFilters</full_name>
        <docblock line="73">
          <description>Returns a list of query filters</description>
          <long-description/>
          <tag line="73" name="param" description="if set it will return all filters of same name" type="\FluxAPI\[string" variable="$name]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="73" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="102" package="FluxAPI">
        <name>hasFilter</name>
        <full_name>hasFilter</full_name>
        <docblock line="96">
          <description>Checks if the query has filter(s) of a given name</description>
          <long-description/>
          <tag line="96" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="120" package="FluxAPI">
        <name>setStorage</name>
        <full_name>setStorage</full_name>
        <docblock line="115">
          <description>Sets the storage this query belongs to</description>
          <long-description/>
          <tag line="115" name="param" description="" type="\FluxAPI\Storage" variable="$storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$storage</name>
          <default/>
          <type>\FluxAPI\Storage</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="130" package="FluxAPI">
        <name>getStorage</name>
        <full_name>getStorage</full_name>
        <docblock line="125">
          <description>Returns the storage this query belongs to</description>
          <long-description/>
          <tag line="125" name="return" description="" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="140" package="FluxAPI">
        <name>setModelName</name>
        <full_name>setModelName</full_name>
        <docblock line="135">
          <description>Sets the model this query is related with</description>
          <long-description/>
          <tag line="135" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="150" package="FluxAPI">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
        <docblock line="145">
          <description>Returns the model this query is related with</description>
          <long-description/>
          <tag line="145" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="160" package="FluxAPI">
        <name>setType</name>
        <full_name>setType</full_name>
        <docblock line="155">
          <description>Sets the query type</description>
          <long-description/>
          <tag line="155" name="param" description="Possible values are: Query::TYPE_INSERT, Query::TYPE_UPDATE, Query::TYPE_DELETE, Query::TYPE_SELECT, Query::TYPE_COUNT" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="172" package="FluxAPI">
        <name>getType</name>
        <full_name>getType</full_name>
        <docblock line="167">
          <description>Returns the query type</description>
          <long-description/>
          <tag line="167" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="182" package="FluxAPI">
        <name>setData</name>
        <full_name>setData</full_name>
        <docblock line="177">
          <description>Sets the values for insert and update queries</description>
          <long-description/>
          <tag line="177" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="193" package="FluxAPI">
        <name>hasData</name>
        <full_name>hasData</full_name>
        <docblock line="187">
          <description>Checks if this query has values</description>
          <long-description/>
          <tag line="187" name="param" description="if set it will check if a value for a given field name is present" type="\FluxAPI\[string" variable="$field]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="187" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$field</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="209" package="FluxAPI">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="203">
          <description>Returns the values of this query</description>
          <long-description/>
          <tag line="203" name="param" description="if set only the value of a given field name will be returned" type="\FluxAPI\[string" variable="$field]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="203" name="return" description="" type="array|mixed|null">
            <type by_reference="false">array</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$field</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Query.php</error>
      <error line="73" code="50014">Name of argument $name does not match with the DocBlock's name $name] in getFilters()</error>
      <notice line="73" code="50013">Parameter $name] could not be found in getFilters()</notice>
      <error line="187" code="50014">Name of argument $field does not match with the DocBlock's name $field] in hasData()</error>
      <notice line="187" code="50013">Parameter $field] could not be found in hasData()</notice>
      <error line="203" code="50014">Name of argument $field does not match with the DocBlock's name $field] in getData()</error>
      <notice line="203" code="50013">Parameter $field] could not be found in getData()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/DynamicModel.php" hash="475ddcbbc37d69202375d16f63389b7f" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="10" package="FluxAPI">
      <extends>\FluxAPI\Model</extends>
      <name>DynamicModel</name>
      <full_name>\FluxAPI\DynamicModel</full_name>
      <docblock line="4">
        <description>A dynamic model definition.</description>
        <long-description>&lt;p&gt;This class is used for all dynamically created models.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="12" namespace="FluxAPI" package="Default">
        <name>$_modelName</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="14" package="FluxAPI">
        <name>setModelName</name>
        <full_name>setModelName</full_name>
        <argument line="14">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="19" package="FluxAPI">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/DynamicModel.php</error>
      <error line="12" code="50018">No DocBlock was found for property $_modelName</error>
      <error line="14" code="50010">No DocBlock was found for method setModelName()</error>
      <error line="19" code="50010">No DocBlock was found for method getModelName()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Factory/ModelFactory.php" hash="4810c9ef24bbf75e6b84a4482fa8200c" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="7" package="Default">
      <extends/>
      <name>ModelFactory</name>
      <full_name>\FluxAPI\Factory\ModelFactory</full_name>
      <property final="false" static="false" visibility="protected" line="9" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="11" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="11">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="24" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="16">
          <description>Creates a new instance of a model</description>
          <long-description/>
          <tag line="16" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="16" name="param" description="if set the model will contain that initial data" type="\FluxAPI\Factory\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\Factory\[array</type>
          </tag>
          <tag line="16" name="param" description="the format of the given $data" type="\FluxAPI\Factory\[string" variable="$format]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
          <tag line="16" name="return" description="" type="null|\FluxAPI\Factory\Model">
            <type by_reference="false">null</type>
            <type by_reference="false">\FluxAPI\Factory\Model</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="24">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="24">
          <name>$format</name>
          <default>\FluxAPI\Api::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="74" package="Default">
        <name>createFromArray</name>
        <full_name>createFromArray</full_name>
        <docblock line="67">
          <description>Returns a new model instance with data from an array</description>
          <long-description/>
          <tag line="67" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="param" description="" type="\FluxAPI\Factory\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\Factory\[array</type>
          </tag>
          <tag line="67" name="return" description="" type="\FluxAPI\Factory\Model">
            <type by_reference="false">\FluxAPI\Factory\Model</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="92" package="Default">
        <name>createFromObject</name>
        <full_name>createFromObject</full_name>
        <docblock line="85">
          <description>Returns a new model instance with data form an object</description>
          <long-description/>
          <tag line="85" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="param" description="" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="85" name="return" description="" type="\FluxAPI\Factory\Model">
            <type by_reference="false">\FluxAPI\Factory\Model</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="92">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="112" package="Default">
        <name>createFromJson</name>
        <full_name>createFromJson</full_name>
        <docblock line="105">
          <description>Returns a new model instance with data from a JSON string</description>
          <long-description/>
          <tag line="105" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="param" description="" type="string" variable="$json">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="return" description="" type="\FluxAPI\Factory\Model|null">
            <type by_reference="false">\FluxAPI\Factory\Model</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="112">
          <name>$json</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="130" package="Default">
        <name>createFromXml</name>
        <full_name>createFromXml</full_name>
        <docblock line="123">
          <description>Returns a new model instance with data from a XML string</description>
          <long-description/>
          <tag line="123" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="param" description="" type="string" variable="$xml">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="return" description="" type="\FluxAPI\Factory\Model|null">
            <type by_reference="false">\FluxAPI\Factory\Model</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="130">
          <name>$xml</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="149" package="Default">
        <name>createFromYaml</name>
        <full_name>createFromYaml</full_name>
        <docblock line="142">
          <description>Returns a new model instance with data from a YAML string</description>
          <long-description/>
          <tag line="142" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="param" description="" type="string" variable="$yaml">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="return" description="" type="\FluxAPI\Factory\Model|null">
            <type by_reference="false">\FluxAPI\Factory\Model</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="149">
          <name>$yaml</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="168" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="161">
          <description>Loads and returns a list of Model instances</description>
          <long-description/>
          <tag line="161" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="161" name="param" description="if not set all instances of the model are loaded" type="\FluxAPI\Factory\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\Factory\[Query</type>
          </tag>
          <tag line="161" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="168">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="194" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="187">
          <description>Saves a list of or a single model instance</description>
          <long-description/>
          <tag line="187" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="187" name="param" description="" type="array|\FluxAPI\Factory\Model" variable="$instances">
            <type by_reference="false">array</type>
            <type by_reference="false">\FluxAPI\Factory\Model</type>
          </tag>
          <tag line="187" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="194">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="194">
          <name>$instances</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="238" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="230">
          <description>Updates models with certain data</description>
          <long-description/>
          <tag line="230" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="param" description="" type="\FluxAPI\Factory\Query" variable="$query">
            <type by_reference="false">\FluxAPI\Factory\Query</type>
          </tag>
          <tag line="230" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="230" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="238">
          <name>$query</name>
          <default/>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="238">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="256" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="249">
          <description>Deletes models by a query</description>
          <long-description/>
          <tag line="249" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="249" name="param" description="if not set all instances of the model will be deleted" type="\FluxAPI\Factory\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\Factory\[Query</type>
          </tag>
          <tag line="249" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="256">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="256">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Factory/ModelFactory.php</error>
      <error line="7" code="50000">No DocBlock was found for \FluxAPI\Factory\ModelFactory</error>
      <error line="9" code="50018">No DocBlock was found for property $_api</error>
      <error line="11" code="50010">No DocBlock was found for method __construct()</error>
      <error line="16" code="50014">Name of argument $data does not match with the DocBlock's name $data] in create()</error>
      <error line="16" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $data in create()</error>
      <error line="16" code="50014">Name of argument $format does not match with the DocBlock's name $format] in create()</error>
      <notice line="16" code="50013">Parameter $data] could not be found in create()</notice>
      <notice line="16" code="50013">Parameter $format] could not be found in create()</notice>
      <error line="67" code="50014">Name of argument $data does not match with the DocBlock's name $data] in createFromArray()</error>
      <error line="67" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $data in createFromArray()</error>
      <notice line="67" code="50013">Parameter $data] could not be found in createFromArray()</notice>
      <error line="161" code="50014">Name of argument $query does not match with the DocBlock's name $query] in load()</error>
      <error line="161" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in load()</error>
      <notice line="161" code="50013">Parameter $query] could not be found in load()</notice>
      <error line="230" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in update()</error>
      <error line="249" code="50014">Name of argument $query does not match with the DocBlock's name $query] in delete()</error>
      <error line="249" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in delete()</error>
      <notice line="249" code="50013">Parameter $query] could not be found in delete()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/Factory/MethodFactory.php" hash="9b8206b4461d689432ae4b10c9f85e57" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="5" package="Default">
      <extends/>
      <name>MethodFactory</name>
      <full_name>\FluxAPI\Factory\MethodFactory</full_name>
      <property final="false" static="false" visibility="protected" line="7" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="12" namespace="FluxAPI\Factory" package="Default">
        <name>$_methods</name>
        <default>array()</default>
        <docblock line="9">
          <description/>
          <long-description/>
          <tag line="9" name="var" description="Internal lookup for magic methods" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="14" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="14">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="26" package="Default">
        <name>registerMethod</name>
        <full_name>registerMethod</full_name>
        <docblock line="19">
          <description>Registers a magic method</description>
          <long-description/>
          <tag line="19" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="param" description="" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="19" name="return" description="$this" type="\FluxAPI\Factory\Api">
            <type by_reference="false">\FluxAPI\Factory\Api</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="41" package="Default">
        <name>unregisterMethod</name>
        <full_name>unregisterMethod</full_name>
        <docblock line="35">
          <description>Unregisters a magic method</description>
          <long-description/>
          <tag line="35" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="$this" type="\FluxAPI\Factory\Api">
            <type by_reference="false">\FluxAPI\Factory\Api</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="50" package="Default">
        <name>hasMethod</name>
        <full_name>hasMethod</full_name>
        <argument line="50">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="55" package="Default">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <argument line="55">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="64" package="Default">
        <name>callMethod</name>
        <full_name>callMethod</full_name>
        <argument line="64">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="64">
          <name>$arguments</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Factory/MethodFactory.php</error>
      <error line="5" code="50000">No DocBlock was found for \FluxAPI\Factory\MethodFactory</error>
      <error line="7" code="50018">No DocBlock was found for property $_api</error>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
      <error line="50" code="50010">No DocBlock was found for method hasMethod()</error>
      <error line="55" code="50010">No DocBlock was found for method getMethod()</error>
      <error line="64" code="50010">No DocBlock was found for method callMethod()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Factory/PluginFactory.php" hash="fdd1a30176f0561f80a639bcbcc43ed9" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="4" package="Default">
      <extends/>
      <name>PluginFactory</name>
      <full_name>\FluxAPI\Factory\PluginFactory</full_name>
      <property final="false" static="false" visibility="protected" line="6" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="11" namespace="FluxAPI\Factory" package="Default">
        <name>$_plugins</name>
        <default>array('Model' =&gt; array(), 'Controller' =&gt; array(), 'Storage' =&gt; array(), 'Cache' =&gt; array(), 'Permission' =&gt; array())</default>
        <docblock line="8">
          <description/>
          <long-description/>
          <tag line="8" name="var" description="Internal lookup for plugins" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="22" namespace="FluxAPI\Factory" package="Default">
        <name>$_extends</name>
        <default>array('Model' =&gt; array())</default>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="Internal extensions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="FluxAPI\Factory" package="Default">
        <name>$_base_plugins</name>
        <default>array()</default>
        <docblock line="26">
          <description/>
          <long-description/>
          <tag line="26" name="var" description="Internal lookup for base plugins" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="31" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="31">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="39" package="Default">
        <name>registerPlugins</name>
        <full_name>registerPlugins</full_name>
        <docblock line="36">
          <description>Registers all available plugins found within the Plugins/ directory</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="95" package="Default">
        <name>registerExtends</name>
        <full_name>registerExtends</full_name>
        <docblock line="92">
          <description>Registers all extensions found in the extends directory</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="124" package="Default">
        <name>registerExtend</name>
        <full_name>registerExtend</full_name>
        <docblock line="114">
          <description>Registers a single extension</description>
          <long-description>&lt;p&gt;Will add dynamic models to the model plugins to make them available&lt;/p&gt;

&lt;p&gt;TODO: currently it will read in the json file but maybe it's better to only read those files on demand?&lt;/p&gt;</long-description>
          <tag line="114" name="param" description="" type="\FluxAPI\Factory\" variable="$type"/>
          <tag line="114" name="param" description="" type="\FluxAPI\Factory\" variable="$name"/>
        </docblock>
        <argument line="124">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="124">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="149" package="Default">
        <name>unregisterExtend</name>
        <full_name>unregisterExtend</full_name>
        <docblock line="143">
          <description>Unregisters a single extension</description>
          <long-description/>
          <tag line="143" name="param" description="" type="\FluxAPI\Factory\" variable="$type"/>
          <tag line="143" name="param" description="" type="\FluxAPI\Factory\" variable="$name"/>
        </docblock>
        <argument line="149">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="149">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="169" package="Default">
        <name>hasPlugin</name>
        <full_name>hasPlugin</full_name>
        <docblock line="164">
          <description/>
          <long-description/>
          <tag line="164" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="169">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="179" package="Default">
        <name>getPlugins</name>
        <full_name>getPlugins</full_name>
        <docblock line="174">
          <description>Returns all registered plugins (of a given type)</description>
          <long-description/>
          <tag line="174" name="param" description="if set, only plugins of that type will be returned" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$type</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="197" package="Default">
        <name>getPluginClass</name>
        <full_name>getPluginClass</full_name>
        <docblock line="190">
          <description>Returns fully class name of a plugin by a given type and name</description>
          <long-description/>
          <tag line="190" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="190" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="190" name="return" description="" type="null|array">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="197">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="197">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="213" package="Default">
        <name>reduceModel</name>
        <full_name>reduceModel</full_name>
        <docblock line="206">
          <description>Reduces a model by removing existing fields or if no fields are given the entire model extend.</description>
          <long-description/>
          <tag line="206" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="206" name="param" description="Field names to remove." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="206" name="param" description="the format of the $fields. Default is Api::DATA_FORMAT_ARRAY." type="\FluxAPI\Factory\[string" variable="$format]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="213">
          <name>$fields</name>
          <default>NULL</default>
          <type>array</type>
        </argument>
        <argument line="213">
          <name>$format</name>
          <default>\FluxAPI\Api::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="275" package="Default">
        <name>extendModel</name>
        <full_name>extendModel</full_name>
        <docblock line="268">
          <description>Extends a model with new fields.</description>
          <long-description>&lt;p&gt;If the model does not exists, it will be created.&lt;/p&gt;</long-description>
          <tag line="268" name="param" description="" type="string" variable="$model_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="268" name="param" description="Field definitions. Either containing real Field instances or key =&gt; value pairs" type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="268" name="param" description="the format of the $fields. Default is Api::DATA_FORMAT_ARRAY." type="\FluxAPI\Factory\[string" variable="$format]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
        </docblock>
        <argument line="275">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="275">
          <name>$fields</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="275">
          <name>$format</name>
          <default>\FluxAPI\Api::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="336" package="Default">
        <name>getExtends</name>
        <full_name>getExtends</full_name>
        <docblock line="331">
          <description/>
          <long-description/>
          <tag line="331" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="331" name="param" description="" type="\FluxAPI\Factory\[string" variable="$name]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
          <tag line="331" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="336">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="336">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="227">throw exception</todo>
      <todo line="260">throw exception</todo>
      <todo line="264">throw exception</todo>
      <todo line="285">throw an exception</todo>
      <todo line="327">throw an exception</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Factory/PluginFactory.php</error>
      <error line="4" code="50000">No DocBlock was found for \FluxAPI\Factory\PluginFactory</error>
      <error line="6" code="50018">No DocBlock was found for property $_api</error>
      <error line="31" code="50010">No DocBlock was found for method __construct()</error>
      <error line="164" code="50012">No short description for method hasPlugin()</error>
      <error line="206" code="50014">Name of argument $format does not match with the DocBlock's name $format] in reduceModel()</error>
      <notice line="206" code="50013">Parameter $format] could not be found in reduceModel()</notice>
      <error line="268" code="50014">Name of argument $format does not match with the DocBlock's name $format] in extendModel()</error>
      <notice line="268" code="50013">Parameter $format] could not be found in extendModel()</notice>
      <error line="331" code="50012">No short description for method getExtends()</error>
      <error line="331" code="50014">Name of argument $name does not match with the DocBlock's name $name] in getExtends()</error>
      <notice line="331" code="50013">Parameter $name] could not be found in getExtends()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/Factory/PermissionFactory.php" hash="9f410696401abd6c0aedd9f89134c5d6" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="6" package="Default">
      <extends/>
      <name>PermissionFactory</name>
      <full_name>\FluxAPI\Factory\PermissionFactory</full_name>
      <property final="false" static="false" visibility="protected" line="8" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="10" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="10">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Factory/PermissionFactory.php</error>
      <error line="6" code="50000">No DocBlock was found for \FluxAPI\Factory\PermissionFactory</error>
      <error line="8" code="50018">No DocBlock was found for property $_api</error>
      <error line="10" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Factory/ControllerFactory.php" hash="6df77d9ada04f1a725130ea5edef60d6" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="6" package="Default">
      <extends/>
      <name>ControllerFactory</name>
      <full_name>\FluxAPI\Factory\ControllerFactory</full_name>
      <property final="false" static="false" visibility="protected" line="8" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="10" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="10">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Factory/ControllerFactory.php</error>
      <error line="6" code="50000">No DocBlock was found for \FluxAPI\Factory\ControllerFactory</error>
      <error line="8" code="50018">No DocBlock was found for property $_api</error>
      <error line="10" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Factory/StorageFactory.php" hash="f346bdce97efaf328ec654850340028a" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Factory" line="6" package="Default">
      <extends>\Pimple</extends>
      <name>StorageFactory</name>
      <full_name>\FluxAPI\Factory\StorageFactory</full_name>
      <property final="false" static="false" visibility="protected" line="8" namespace="FluxAPI\Factory" package="Default">
        <name>$_api</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="10" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="10">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Factory" line="23" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="17">
          <description>Returns an instance of the storage for a given model</description>
          <long-description/>
          <tag line="17" name="param" description="if not set the default storage will be returned" type="\FluxAPI\Factory\[string" variable="$model_name]">
            <type by_reference="false">\FluxAPI\Factory\[string</type>
          </tag>
          <tag line="17" name="return" description="" type="\FluxAPI\Factory\Storage">
            <type by_reference="false">\FluxAPI\Factory\Storage</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$model_name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Factory/StorageFactory.php</error>
      <error line="6" code="50000">No DocBlock was found for \FluxAPI\Factory\StorageFactory</error>
      <error line="8" code="50018">No DocBlock was found for property $_api</error>
      <error line="10" code="50010">No DocBlock was found for method __construct()</error>
      <error line="17" code="50014">Name of argument $model_name does not match with the DocBlock's name $model_name] in get()</error>
      <notice line="17" code="50013">Parameter $model_name] could not be found in get()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/Event/ModelEvent.php" hash="03641b12b1c2759239511b798bc664d4" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI\Event" line="7" package="Default">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ModelEvent</name>
      <full_name>\FluxAPI\Event\ModelEvent</full_name>
      <constant namespace="FluxAPI\Event" line="9" package="Default">
        <name>CREATE</name>
        <full_name>CREATE</full_name>
        <value>'model.create'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="10" package="Default">
        <name>BEFORE_CREATE</name>
        <full_name>BEFORE_CREATE</full_name>
        <value>'model.before_create'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="11" package="Default">
        <name>LOAD</name>
        <full_name>LOAD</full_name>
        <value>'model.load'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="12" package="Default">
        <name>BEFORE_LOAD</name>
        <full_name>BEFORE_LOAD</full_name>
        <value>'model.before_load'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="13" package="Default">
        <name>UPDATE</name>
        <full_name>UPDATE</full_name>
        <value>'model.update'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="14" package="Default">
        <name>BEFORE_UPDATE</name>
        <full_name>BEFORE_UPDATE</full_name>
        <value>'model.before_update'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="15" package="Default">
        <name>SAVE</name>
        <full_name>SAVE</full_name>
        <value>'model.save'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="16" package="Default">
        <name>BEFORE_SAVE</name>
        <full_name>BEFORE_SAVE</full_name>
        <value>'model.before_save'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="17" package="Default">
        <name>DELETE</name>
        <full_name>DELETE</full_name>
        <value>'model.delete'</value>
      </constant>
      <constant namespace="FluxAPI\Event" line="18" package="Default">
        <name>BEFORE_DELETE</name>
        <full_name>BEFORE_DELETE</full_name>
        <value>'model.before_delete'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="20" namespace="FluxAPI\Event" package="Default">
        <name>$_model_name</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="FluxAPI\Event" package="Default">
        <name>$_model</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="22" namespace="FluxAPI\Event" package="Default">
        <name>$_query</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Event" line="24" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="24">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="24">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="24">
          <name>$model</name>
          <default>NULL</default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Event" line="31" package="Default">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Event" line="36" package="Default">
        <name>getModel</name>
        <full_name>getModel</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI\Event" line="41" package="Default">
        <name>getQuery</name>
        <full_name>getQuery</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Event/ModelEvent.php</error>
      <error line="7" code="50000">No DocBlock was found for \FluxAPI\Event\ModelEvent</error>
      <error line="20" code="50018">No DocBlock was found for property $_model_name</error>
      <error line="21" code="50018">No DocBlock was found for property $_model</error>
      <error line="22" code="50018">No DocBlock was found for property $_query</error>
      <error line="24" code="50010">No DocBlock was found for method __construct()</error>
      <error line="31" code="50010">No DocBlock was found for method getModelName()</error>
      <error line="36" code="50010">No DocBlock was found for method getModel()</error>
      <error line="41" code="50010">No DocBlock was found for method getQuery()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Field.php" hash="1b4630fcc783ea1e27338385b868564c" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="8" package="FluxAPI">
      <extends/>
      <name>Field</name>
      <full_name>\FluxAPI\Field</full_name>
      <docblock line="4">
        <description>A Models field definition</description>
        <long-description/>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <constant namespace="FluxAPI" line="56" package="FluxAPI">
        <name>TYPE_STRING</name>
        <full_name>TYPE_STRING</full_name>
        <value>'string'</value>
      </constant>
      <constant namespace="FluxAPI" line="57" package="FluxAPI">
        <name>TYPE_BINARY</name>
        <full_name>TYPE_BINARY</full_name>
        <value>'binary'</value>
      </constant>
      <constant namespace="FluxAPI" line="58" package="FluxAPI">
        <name>TYPE_BOOLEAN</name>
        <full_name>TYPE_BOOLEAN</full_name>
        <value>'boolean'</value>
      </constant>
      <constant namespace="FluxAPI" line="59" package="FluxAPI">
        <name>TYPE_INTEGER</name>
        <full_name>TYPE_INTEGER</full_name>
        <value>'integer'</value>
      </constant>
      <constant namespace="FluxAPI" line="60" package="FluxAPI">
        <name>TYPE_FLOAT</name>
        <full_name>TYPE_FLOAT</full_name>
        <value>'float'</value>
      </constant>
      <constant namespace="FluxAPI" line="61" package="FluxAPI">
        <name>TYPE_LONGSTRING</name>
        <full_name>TYPE_LONGSTRING</full_name>
        <value>'longstring'</value>
      </constant>
      <constant namespace="FluxAPI" line="62" package="FluxAPI">
        <name>TYPE_DATE</name>
        <full_name>TYPE_DATE</full_name>
        <value>'date'</value>
      </constant>
      <constant namespace="FluxAPI" line="63" package="FluxAPI">
        <name>TYPE_DATETIME</name>
        <full_name>TYPE_DATETIME</full_name>
        <value>'datetime'</value>
      </constant>
      <constant namespace="FluxAPI" line="64" package="FluxAPI">
        <name>TYPE_TIMESTAMP</name>
        <full_name>TYPE_TIMESTAMP</full_name>
        <value>'timestamp'</value>
      </constant>
      <constant namespace="FluxAPI" line="65" package="FluxAPI">
        <name>TYPE_ARRAY</name>
        <full_name>TYPE_ARRAY</full_name>
        <value>'array'</value>
      </constant>
      <constant namespace="FluxAPI" line="66" package="FluxAPI">
        <name>TYPE_OBJECT</name>
        <full_name>TYPE_OBJECT</full_name>
        <value>'object'</value>
      </constant>
      <constant namespace="FluxAPI" line="67" package="FluxAPI">
        <name>TYPE_RELATION</name>
        <full_name>TYPE_RELATION</full_name>
        <value>'relation'</value>
      </constant>
      <constant namespace="FluxAPI" line="69" package="FluxAPI">
        <name>HAS_ONE</name>
        <full_name>HAS_ONE</full_name>
        <value>'has_one'</value>
      </constant>
      <constant namespace="FluxAPI" line="70" package="FluxAPI">
        <name>HAS_MANY</name>
        <full_name>HAS_MANY</full_name>
        <value>'has_many'</value>
      </constant>
      <constant namespace="FluxAPI" line="71" package="FluxAPI">
        <name>BELONGS_TO_ONE</name>
        <full_name>BELONGS_TO_ONE</full_name>
        <value>'belongs_to_one'</value>
      </constant>
      <constant namespace="FluxAPI" line="72" package="FluxAPI">
        <name>BELONGS_TO_MANY</name>
        <full_name>BELONGS_TO_MANY</full_name>
        <value>'belongs_to_many'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="13" namespace="FluxAPI" package="Default">
        <name>$name</name>
        <default>NULL</default>
        <docblock line="10">
          <description/>
          <long-description/>
          <tag line="10" name="var" description="Name of the field as stored in the storage" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="FluxAPI" package="Default">
        <name>$type</name>
        <default>NULL</default>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="Datatype of the field" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="FluxAPI" package="Default">
        <name>$unsigned</name>
        <default>FALSE</default>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="Signed or unsigned (used for integers and floats)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="FluxAPI" package="Default">
        <name>$length</name>
        <default>NULL</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="Maximum length of the fields value" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="FluxAPI" package="Default">
        <name>$default</name>
        <default>NULL</default>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="var" description="Default field value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="FluxAPI" package="Default">
        <name>$primary</name>
        <default>FALSE</default>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="var" description="Flag if field is primary (mostly used for IDs)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="FluxAPI" package="Default">
        <name>$unique</name>
        <default>FALSE</default>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="Flag if field value must be unique" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="48" namespace="FluxAPI" package="Default">
        <name>$autoIncrement</name>
        <default>FALSE</default>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="Flag to set field values to automaticly increase" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="FluxAPI" package="Default">
        <name>$relationType</name>
        <default>NULL</default>
        <docblock line="50">
          <description/>
          <long-description/>
          <tag line="50" name="var" description="If the $type is of Field::TYPE_RELATION this must be set to the relation type: Field::HAS_ONE, Field::BELONGS_TO_ONE, Field::HAS_MANY, Field::BELONGS_TO_MANY" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="54" namespace="FluxAPI" package="Default">
        <name>$relationModel</name>
        <default>NULL</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="79" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="74">
          <description>Constructor</description>
          <long-description/>
          <tag line="74" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="88" package="FluxAPI">
        <name>toArray</name>
        <full_name>toArray</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Field.php</error>
      <error line="54" code="50018">No DocBlock was found for property $relationModel</error>
      <error line="88" code="50010">No DocBlock was found for method toArray()</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Utils.php" hash="ce829431b6b65f7e4cf2336cc0ff16fe" package="Default">
    <docblock line="2">
      <description>Created by JetBrains PhpStorm.</description>
      <long-description>&lt;p&gt;User: ondrej
Date: 01.04.13
Time: 18:52
To change this template use File | Settings | File Templates.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="FluxAPI" line="13" package="Default">
      <extends/>
      <name>Utils</name>
      <full_name>\FluxAPI\Utils</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="15" package="Default">
        <name>dateToString</name>
        <full_name>dateToString</full_name>
        <argument line="15">
          <name>$date</name>
          <default/>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="20" package="Default">
        <name>dateTimeToString</name>
        <full_name>dateTimeToString</full_name>
        <argument line="20">
          <name>$date</name>
          <default/>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="25" package="Default">
        <name>dateTimeFromString</name>
        <full_name>dateTimeFromString</full_name>
        <argument line="25">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="13" code="50000">No DocBlock was found for \FluxAPI\Utils</error>
      <error line="15" code="50010">No DocBlock was found for method dateToString()</error>
      <error line="20" code="50010">No DocBlock was found for method dateTimeToString()</error>
      <error line="25" code="50010">No DocBlock was found for method dateTimeFromString()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Storage/MySql.php" hash="fcf9214dfb449355f1b6bab4c2a6e6eb" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core\Storage" line="10" package="Default">
      <extends>\FluxAPI\Storage</extends>
      <name>MySql</name>
      <full_name>\Plugins\Core\Storage\MySql</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="12" package="Default">
        <name>addFilters</name>
        <full_name>addFilters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="19" package="Default">
        <name>filterSelect</name>
        <full_name>filterSelect</full_name>
        <argument line="19">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="19">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="25" package="Default">
        <name>filterEqual</name>
        <full_name>filterEqual</full_name>
        <argument line="25">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="25">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="33" package="Default">
        <name>filterNotEqual</name>
        <full_name>filterNotEqual</full_name>
        <argument line="33">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="39" package="Default">
        <name>filterGreaterThen</name>
        <full_name>filterGreaterThen</full_name>
        <argument line="39">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="45" package="Default">
        <name>filterGreaterThenOrEqual</name>
        <full_name>filterGreaterThenOrEqual</full_name>
        <argument line="45">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="51" package="Default">
        <name>filterLessThen</name>
        <full_name>filterLessThen</full_name>
        <argument line="51">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="57" package="Default">
        <name>filterLessThenOrEqual</name>
        <full_name>filterLessThenOrEqual</full_name>
        <argument line="57">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="63" package="Default">
        <name>filterRange</name>
        <full_name>filterRange</full_name>
        <argument line="63">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="72" package="Default">
        <name>filterOrder</name>
        <full_name>filterOrder</full_name>
        <argument line="72">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="72">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="78" package="Default">
        <name>filterLimit</name>
        <full_name>filterLimit</full_name>
        <argument line="78">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="85" package="Default">
        <name>filterCount</name>
        <full_name>filterCount</full_name>
        <argument line="85">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="85">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="91" package="Default">
        <name>filterLike</name>
        <full_name>filterLike</full_name>
        <argument line="91">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="97" package="Default">
        <name>filterIn</name>
        <full_name>filterIn</full_name>
        <argument line="97">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="97">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="119" package="Default">
        <name>filterJoin</name>
        <full_name>filterJoin</full_name>
        <argument line="119">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="119">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="138" package="Default">
        <name>filterInnerJoin</name>
        <full_name>filterInnerJoin</full_name>
        <argument line="138">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="138">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="143" package="Default">
        <name>filterLeftJoin</name>
        <full_name>filterLeftJoin</full_name>
        <argument line="143">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="143">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="149" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="154" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="168" package="Default">
        <name>getConnection</name>
        <full_name>getConnection</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="173" package="Default">
        <name>getLastId</name>
        <full_name>getLastId</full_name>
        <argument line="173">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="189" package="Default">
        <name>loadRelation</name>
        <full_name>loadRelation</full_name>
        <argument line="189">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="189">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="226" package="Default">
        <name>addRelation</name>
        <full_name>addRelation</full_name>
        <argument line="226">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="226">
          <name>$relation</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="226">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="253" package="Default">
        <name>removeRelation</name>
        <full_name>removeRelation</full_name>
        <argument line="253">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="253">
          <name>$relation</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="253">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="271" package="Default">
        <name>removeAllRelations</name>
        <full_name>removeAllRelations</full_name>
        <argument line="271">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="271">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
        <argument line="271">
          <name>$exclude_ids</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="293" package="Default">
        <name>getTableName</name>
        <full_name>getTableName</full_name>
        <argument line="293">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="298" package="Default">
        <name>getRelationTableName</name>
        <full_name>getRelationTableName</full_name>
        <argument line="298">
          <name>$model_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="303" package="Default">
        <name>executeQuery</name>
        <full_name>executeQuery</full_name>
        <argument line="303">
          <name>$query</name>
          <default/>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="424" package="Default">
        <name>getFieldType</name>
        <full_name>getFieldType</full_name>
        <argument line="424">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="442" package="Default">
        <name>getFieldConfig</name>
        <full_name>getFieldConfig</full_name>
        <argument line="442">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="461" package="Default">
        <name>getRelationField</name>
        <full_name>getRelationField</full_name>
        <argument line="461">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="475" package="Default">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <argument line="475">
          <name>$model_name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="497">split this into multiple methods</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Storage/MySql.php</error>
      <error line="10" code="50000">No DocBlock was found for \Plugins\Core\Storage\MySql</error>
      <error line="12" code="50010">No DocBlock was found for method addFilters()</error>
      <error line="19" code="50010">No DocBlock was found for method filterSelect()</error>
      <error line="25" code="50010">No DocBlock was found for method filterEqual()</error>
      <error line="33" code="50010">No DocBlock was found for method filterNotEqual()</error>
      <error line="39" code="50010">No DocBlock was found for method filterGreaterThen()</error>
      <error line="45" code="50010">No DocBlock was found for method filterGreaterThenOrEqual()</error>
      <error line="51" code="50010">No DocBlock was found for method filterLessThen()</error>
      <error line="57" code="50010">No DocBlock was found for method filterLessThenOrEqual()</error>
      <error line="63" code="50010">No DocBlock was found for method filterRange()</error>
      <error line="72" code="50010">No DocBlock was found for method filterOrder()</error>
      <error line="78" code="50010">No DocBlock was found for method filterLimit()</error>
      <error line="85" code="50010">No DocBlock was found for method filterCount()</error>
      <error line="91" code="50010">No DocBlock was found for method filterLike()</error>
      <error line="97" code="50010">No DocBlock was found for method filterIn()</error>
      <error line="119" code="50010">No DocBlock was found for method filterJoin()</error>
      <error line="138" code="50010">No DocBlock was found for method filterInnerJoin()</error>
      <error line="143" code="50010">No DocBlock was found for method filterLeftJoin()</error>
      <error line="149" code="50010">No DocBlock was found for method isConnected()</error>
      <error line="154" code="50010">No DocBlock was found for method connect()</error>
      <error line="168" code="50010">No DocBlock was found for method getConnection()</error>
      <error line="173" code="50010">No DocBlock was found for method getLastId()</error>
      <error line="189" code="50010">No DocBlock was found for method loadRelation()</error>
      <error line="226" code="50010">No DocBlock was found for method addRelation()</error>
      <error line="253" code="50010">No DocBlock was found for method removeRelation()</error>
      <error line="271" code="50010">No DocBlock was found for method removeAllRelations()</error>
      <error line="293" code="50010">No DocBlock was found for method getTableName()</error>
      <error line="298" code="50010">No DocBlock was found for method getRelationTableName()</error>
      <error line="303" code="50010">No DocBlock was found for method executeQuery()</error>
      <error line="424" code="50010">No DocBlock was found for method getFieldType()</error>
      <error line="442" code="50010">No DocBlock was found for method getFieldConfig()</error>
      <error line="461" code="50010">No DocBlock was found for method getRelationField()</error>
      <error line="475" code="50010">No DocBlock was found for method migrate()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Model/User.php" hash="e3d21379eef9cbf073931d5230ec6508" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core\Model" line="7" package="Default">
      <extends>\Plugins\Core\Model</extends>
      <name>User</name>
      <full_name>\Plugins\Core\Model\User</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Model" line="9" package="Default">
        <name>defineFields</name>
        <full_name>defineFields</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Model/User.php</error>
      <error line="7" code="50000">No DocBlock was found for \Plugins\Core\Model\User</error>
      <error line="9" code="50010">No DocBlock was found for method defineFields()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Model/UserGroup.php" hash="8b94392962f5c25477b571550a93c75d" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core\Model" line="7" package="Default">
      <extends>\Plugins\Core\Model</extends>
      <name>UserGroup</name>
      <full_name>\Plugins\Core\Model\UserGroup</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Model" line="9" package="Default">
        <name>defineFields</name>
        <full_name>defineFields</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Model/UserGroup.php</error>
      <error line="7" code="50000">No DocBlock was found for \Plugins\Core\Model\UserGroup</error>
      <error line="9" code="50010">No DocBlock was found for method defineFields()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Model/Node.php" hash="3e09953327ea65231f007436fefab0ff" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core\Model" line="6" package="Default">
      <extends>\Plugins\Core\Model</extends>
      <name>Node</name>
      <full_name>\Plugins\Core\Model\Node</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Model" line="8" package="Default">
        <name>defineFields</name>
        <full_name>defineFields</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Model/Node.php</error>
      <error line="6" code="50000">No DocBlock was found for \Plugins\Core\Model\Node</error>
      <error line="8" code="50010">No DocBlock was found for method defineFields()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Rest.php" hash="19a2567df38425eccaf6a776879cf8b5" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core" line="8" package="Default">
      <extends/>
      <name>Rest</name>
      <full_name>\Plugins\Core\Rest</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Plugins\Core" package="Default">
        <name>$_api</name>
        <default>NULL</default>
      </property>
      <property final="false" static="false" visibility="public" line="12" namespace="Plugins\Core" package="Default">
        <name>$config</name>
        <default>array('base_route' =&gt; '', 'default_input_format' =&gt; \FluxAPI\Api::DATA_FORMAT_ARRAY, 'default_output_format' =&gt; \FluxAPI\Api::DATA_FORMAT_JSON)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="18">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="31" package="Default">
        <name>registerRoutes</name>
        <full_name>registerRoutes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="36" package="Default">
        <name>getContentTypeFromFormat</name>
        <full_name>getContentTypeFromFormat</full_name>
        <argument line="36">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="58" package="Default">
        <name>getFormatFromContentType</name>
        <full_name>getFormatFromContentType</full_name>
        <argument line="58">
          <name>$content_type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="90" package="Default">
        <name>getValidOutputFormat</name>
        <full_name>getValidOutputFormat</full_name>
        <argument line="90">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="102" package="Default">
        <name>getOutputFormat</name>
        <full_name>getOutputFormat</full_name>
        <argument line="102">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="107" package="Default">
        <name>getInputFormat</name>
        <full_name>getInputFormat</full_name>
        <argument line="107">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="112" package="Default">
        <name>addFiltersToQueryFromRequest</name>
        <full_name>addFiltersToQueryFromRequest</full_name>
        <argument line="112">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
        <argument line="112">
          <name>$query</name>
          <default></default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="128" package="Default">
        <name>registerModelRoutes</name>
        <full_name>registerModelRoutes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="224" package="Default">
        <name>createModel</name>
        <full_name>createModel</full_name>
        <argument line="224">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
        <argument line="224">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="251" package="Default">
        <name>updateModel</name>
        <full_name>updateModel</full_name>
        <argument line="251">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
        <argument line="251">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="251">
          <name>$id</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="251">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="283" package="Default">
        <name>updateModels</name>
        <full_name>updateModels</full_name>
        <argument line="283">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
        <argument line="283">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="283">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="312" package="Default">
        <name>loadModel</name>
        <full_name>loadModel</full_name>
        <argument line="312">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
        <argument line="312">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="312">
          <name>$id</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="312">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="337" package="Default">
        <name>loadModels</name>
        <full_name>loadModels</full_name>
        <argument line="337">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
        <argument line="337">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="337">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="358" package="Default">
        <name>deleteModel</name>
        <full_name>deleteModel</full_name>
        <argument line="358">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
        <argument line="358">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="358">
          <name>$id</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="358">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="391" package="Default">
        <name>deleteModels</name>
        <full_name>deleteModels</full_name>
        <argument line="391">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
        <argument line="391">
          <name>$model_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="391">
          <name>$format</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="51">implement form-data</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Rest.php</error>
      <error line="8" code="50000">No DocBlock was found for \Plugins\Core\Rest</error>
      <error line="10" code="50018">No DocBlock was found for property $_api</error>
      <error line="12" code="50018">No DocBlock was found for property $config</error>
      <error line="18" code="50010">No DocBlock was found for method __construct()</error>
      <error line="31" code="50010">No DocBlock was found for method registerRoutes()</error>
      <error line="36" code="50010">No DocBlock was found for method getContentTypeFromFormat()</error>
      <error line="58" code="50010">No DocBlock was found for method getFormatFromContentType()</error>
      <error line="90" code="50010">No DocBlock was found for method getValidOutputFormat()</error>
      <error line="102" code="50010">No DocBlock was found for method getOutputFormat()</error>
      <error line="107" code="50010">No DocBlock was found for method getInputFormat()</error>
      <error line="112" code="50010">No DocBlock was found for method addFiltersToQueryFromRequest()</error>
      <error line="128" code="50010">No DocBlock was found for method registerModelRoutes()</error>
      <error line="224" code="50010">No DocBlock was found for method createModel()</error>
      <error line="251" code="50010">No DocBlock was found for method updateModel()</error>
      <error line="283" code="50010">No DocBlock was found for method updateModels()</error>
      <error line="312" code="50010">No DocBlock was found for method loadModel()</error>
      <error line="337" code="50010">No DocBlock was found for method loadModels()</error>
      <error line="358" code="50010">No DocBlock was found for method deleteModel()</error>
      <error line="391" code="50010">No DocBlock was found for method deleteModels()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Model.php" hash="5bd0511513eedfdeb9238a2e3fe459b2" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core" line="7" package="Default">
      <extends>\FluxAPI\Model</extends>
      <name>Model</name>
      <full_name>\Plugins\Core\Model</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="9" package="Default">
        <name>defineFields</name>
        <full_name>defineFields</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Model.php</error>
      <error line="7" code="50000">No DocBlock was found for \Plugins\Core\Model</error>
      <error line="9" code="50010">No DocBlock was found for method defineFields()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Core.php" hash="9add33dd18ba4344be1821a1f6f0664a" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core" line="6" package="Default">
      <extends>\FluxAPI\Plugin</extends>
      <name>Core</name>
      <full_name>\Plugins\Core\Core</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Plugins\Core" line="8" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <argument line="8">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Core.php</error>
      <error line="6" code="50000">No DocBlock was found for \Plugins\Core\Core</error>
      <error line="8" code="50010">No DocBlock was found for method register()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="FluxAPI" full_name="FluxAPI"/>
  <namespace name="FluxAPI" full_name="FluxAPI">
    <namespace name="Cli" full_name="FluxAPI\Cli"/>
    <namespace name="Event" full_name="FluxAPI\Event"/>
    <namespace name="EventListener" full_name="FluxAPI\EventListener"/>
    <namespace name="Factory" full_name="FluxAPI\Factory"/>
  </namespace>
  <namespace name="Plugins" full_name="Plugins">
    <namespace name="Core" full_name="Plugins\Core">
      <namespace name="Model" full_name="Plugins\Core\Model"/>
      <namespace name="Storage" full_name="Plugins\Core\Storage"/>
    </namespace>
  </namespace>
  <marker count="9">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
