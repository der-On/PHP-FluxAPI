<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="PHP-FluxAPI">
  <file path="FluxAPI/Api.php" hash="e1e08fe3920f1f4bafbf6a22ebf5a5ee" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="15" package="FluxAPI">
      <extends/>
      <name>Api</name>
      <full_name>\FluxAPI\Api</full_name>
      <docblock line="4">
        <description>This is the entry point for all API calls.</description>
        <long-description>&lt;p&gt;It contains magic methods to operate on all ressources and controllers.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
        <tag line="4" name="method" description="Creates and returns a new instance of _Model_. If $data is given the model will contain that initial data." type="\FluxAPI\Model" method_name="create_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$data]</name>
            <default/>
            <type>[array</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Loads a _Model_ by id or with a given query. If $format is given the model will be returned in the given format." type="\FluxAPI\Model" method_name="load_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query</name>
            <default/>
            <type>string|Query</type>
          </argument>
          <argument>
            <name>$format]</name>
            <default/>
            <type>[string</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Loads a list of _Model_s with a given query. If $format is given the models will be returned in the given format." type="\FluxAPI\Model" method_name="load_Model_s">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query]</name>
            <default/>
            <type>[Query</type>
          </argument>
          <argument>
            <name>$format]</name>
            <default/>
            <type>[string</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Saves a _Model_" type="\FluxAPI\Model" method_name="save_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$model</name>
            <default/>
            <type>Model</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Deletes a single _Model_ by id or by a given query" type="\FluxAPI\Model" method_name="delete_Model_">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query</name>
            <default/>
            <type>string|Query</type>
          </argument>
        </tag>
        <tag line="4" name="method" description="Deletes a list of _Model_s by a given query" type="\FluxAPI\Model" method_name="delete_Model_s">
          <type by_reference="false">\FluxAPI\Model</type>
          <argument>
            <name>$query]</name>
            <default/>
            <type>[Query</type>
          </argument>
        </tag>
      </docblock>
      <constant namespace="FluxAPI" line="17" package="FluxAPI">
        <name>DATA_FORMAT_ARRAY</name>
        <full_name>DATA_FORMAT_ARRAY</full_name>
        <value>'array'</value>
      </constant>
      <constant namespace="FluxAPI" line="18" package="FluxAPI">
        <name>DATA_FORMAT_JSON</name>
        <full_name>DATA_FORMAT_JSON</full_name>
        <value>'json'</value>
      </constant>
      <constant namespace="FluxAPI" line="19" package="FluxAPI">
        <name>DATA_FORMAT_XML</name>
        <full_name>DATA_FORMAT_XML</full_name>
        <value>'xml'</value>
      </constant>
      <constant namespace="FluxAPI" line="20" package="FluxAPI">
        <name>DATA_FORMAT_YAML</name>
        <full_name>DATA_FORMAT_YAML</full_name>
        <value>'yaml'</value>
      </constant>
      <property final="false" static="false" visibility="private" line="25" namespace="FluxAPI" package="Default">
        <name>$_plugins</name>
        <default>array('Model' =&gt; array(), 'Controller' =&gt; array(), 'Storage' =&gt; array(), 'Cache' =&gt; array(), 'Permission' =&gt; array())</default>
        <docblock line="22">
          <description/>
          <long-description/>
          <tag line="22" name="var" description="Internal lookup for plugins" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="FluxAPI" package="Default">
        <name>$_base_plugins</name>
        <default>array()</default>
        <docblock line="33">
          <description/>
          <long-description/>
          <tag line="33" name="var" description="Internal lookup for base plugins" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="41" namespace="FluxAPI" package="Default">
        <name>$_methods</name>
        <default>array()</default>
        <docblock line="38">
          <description/>
          <long-description/>
          <tag line="38" name="var" description="Internal lookup for magic methods" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="46" namespace="FluxAPI" package="Default">
        <name>$app</name>
        <default>NULL</default>
        <docblock line="43">
          <description/>
          <long-description/>
          <tag line="43" name="var" description="The silex app" type="\Silex\Application">
            <type by_reference="false">\Silex\Application</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="FluxAPI" package="Default">
        <name>$config</name>
        <default>array()</default>
        <docblock line="48">
          <description/>
          <long-description/>
          <tag line="48" name="var" description="FluxAPI configuration" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="59" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="53">
          <description>Constructor</description>
          <long-description/>
          <tag line="53" name="param" description="" type="\Silex\Application" variable="$app">
            <type by_reference="false">\Silex\Application</type>
          </tag>
          <tag line="53" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$app</name>
          <default/>
          <type>\Silex\Application</type>
        </argument>
        <argument line="59">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="100" package="FluxAPI">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="91">
          <description>Returns the singleton of the Api</description>
          <long-description>&lt;p&gt;If no Api instance exists yet it will create one and return it.&lt;/p&gt;</long-description>
          <tag line="91" name="param" description="" type="\Silex\Application" variable="$app">
            <type by_reference="false">\Silex\Application</type>
          </tag>
          <tag line="91" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="91" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$app</name>
          <default>NULL</default>
          <type>\Silex\Application</type>
        </argument>
        <argument line="100">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="116" package="FluxAPI">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="109">
          <description>Calls the magic methods</description>
          <long-description/>
          <tag line="109" name="param" description="" type="\FluxAPI\" variable="$method"/>
          <tag line="109" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="109" name="return" description="" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="116">
          <name>$arguments</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="130" package="FluxAPI">
        <name>registerPlugins</name>
        <full_name>registerPlugins</full_name>
        <docblock line="127">
          <description>Registers all available plugins found within the Plugins/ directory</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="190" package="FluxAPI">
        <name>registerMethod</name>
        <full_name>registerMethod</full_name>
        <docblock line="183">
          <description>Registers a magic method</description>
          <long-description/>
          <tag line="183" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="183" name="param" description="" type="\FluxAPI\function" variable="$callback">
            <type by_reference="false">\FluxAPI\function</type>
          </tag>
          <tag line="183" name="return" description="$this" type="\FluxAPI\Api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="190">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="205" package="FluxAPI">
        <name>registerPluginMethods</name>
        <full_name>registerPluginMethods</full_name>
        <docblock line="199">
          <description>Registers all magic methods of all registered plugins</description>
          <long-description/>
          <tag line="199" name="param" description="the plugin type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="199" name="param" description="the plugin name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="205">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="219" package="FluxAPI">
        <name>registerModelMethods</name>
        <full_name>registerModelMethods</full_name>
        <docblock line="214">
          <description>Registers all magic methods for all registered models</description>
          <long-description/>
          <tag line="214" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="359" package="FluxAPI">
        <name>getPlugins</name>
        <full_name>getPlugins</full_name>
        <docblock line="354">
          <description>Returns all registered plugins (of a given type)</description>
          <long-description/>
          <tag line="354" name="param" description="if set, only plugins of that type will be returned" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="354" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="359">
          <name>$type</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="377" package="FluxAPI">
        <name>getPluginClass</name>
        <full_name>getPluginClass</full_name>
        <docblock line="370">
          <description>Returns fully class name of a plugin by a given type and name</description>
          <long-description/>
          <tag line="370" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="370" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="370" name="return" description="" type="null|array">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="377">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="377">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="392" package="FluxAPI">
        <name>getStorage</name>
        <full_name>getStorage</full_name>
        <docblock line="386">
          <description>Returns an instance of the storage for a given model</description>
          <long-description/>
          <tag line="386" name="param" description="if not set the default storage will be returned" type="\FluxAPI\[string" variable="$model]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="386" name="return" description="" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
        <argument line="392">
          <name>$model</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="409" package="FluxAPI">
        <name>loadModels</name>
        <full_name>loadModels</full_name>
        <docblock line="402">
          <description>Loads and returns a list of Model instances</description>
          <long-description/>
          <tag line="402" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="402" name="param" description="if not set all instances of the model are loaded" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="402" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="409">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
        <argument line="409">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="427" package="FluxAPI">
        <name>saveModel</name>
        <full_name>saveModel</full_name>
        <docblock line="420">
          <description>Saves a list of or a single model instance</description>
          <long-description/>
          <tag line="420" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="420" name="param" description="" type="array|\FluxAPI\Model" variable="$instances">
            <type by_reference="false">array</type>
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="420" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="427">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
        <argument line="427">
          <name>$instances</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="459" package="FluxAPI">
        <name>updateModels</name>
        <full_name>updateModels</full_name>
        <docblock line="451">
          <description>Updates models with certain data</description>
          <long-description/>
          <tag line="451" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="451" name="param" description="" type="\FluxAPI\Query" variable="$query">
            <type by_reference="false">\FluxAPI\Query</type>
          </tag>
          <tag line="451" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="451" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="459">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
        <argument line="459">
          <name>$query</name>
          <default/>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="459">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="475" package="FluxAPI">
        <name>createModel</name>
        <full_name>createModel</full_name>
        <docblock line="467">
          <description>Creates a new instance of a model</description>
          <long-description/>
          <tag line="467" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="467" name="param" description="if set the model will contain that initial data" type="\FluxAPI\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
          <tag line="467" name="param" description="the format of the given $data" type="\FluxAPI\[string" variable="$format]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="467" name="return" description="" type="null|\FluxAPI\Model">
            <type by_reference="false">null</type>
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
        </docblock>
        <argument line="475">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
        <argument line="475">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="475">
          <name>$format</name>
          <default>\FluxAPI\Api::DATA_FORMAT_ARRAY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="514" package="FluxAPI">
        <name>deleteModels</name>
        <full_name>deleteModels</full_name>
        <docblock line="507">
          <description>Deletes models by a query</description>
          <long-description/>
          <tag line="507" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="507" name="param" description="if not set all instances of the model will be deleted" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="507" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="514">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
        <argument line="514">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="530" package="FluxAPI">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <docblock line="526">
          <description>Migrates the storage dabase(s) (for a given model)</description>
          <long-description/>
          <tag line="526" name="param" description="" type="\FluxAPI\[string" variable="$model]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
        </docblock>
        <argument line="530">
          <name>$model</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Api.php</error>
      <error line="386" code="50014">Name of argument $model does not match with the DocBlock's name $model] in getStorage()</error>
      <notice line="386" code="50013">Parameter $model] could not be found in getStorage()</notice>
      <error line="402" code="50014">Name of argument $query does not match with the DocBlock's name $query] in loadModels()</error>
      <error line="402" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in loadModels()</error>
      <notice line="402" code="50013">Parameter $query] could not be found in loadModels()</notice>
      <error line="467" code="50014">Name of argument $data does not match with the DocBlock's name $data] in createModel()</error>
      <error line="467" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $data in createModel()</error>
      <error line="467" code="50014">Name of argument $format does not match with the DocBlock's name $format] in createModel()</error>
      <notice line="467" code="50013">Parameter $data] could not be found in createModel()</notice>
      <notice line="467" code="50013">Parameter $format] could not be found in createModel()</notice>
      <error line="507" code="50014">Name of argument $query does not match with the DocBlock's name $query] in deleteModels()</error>
      <error line="507" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in deleteModels()</error>
      <notice line="507" code="50013">Parameter $query] could not be found in deleteModels()</notice>
      <error line="526" code="50014">Name of argument $model does not match with the DocBlock's name $model] in migrate()</error>
      <notice line="526" code="50013">Parameter $model] could not be found in migrate()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/Model.php" hash="ff472e03f2c3a28e654f7c3c21987304" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="11" package="FluxAPI">
      <extends/>
      <name>Model</name>
      <full_name>\FluxAPI\Model</full_name>
      <docblock line="4">
        <description>A Model definition plugin</description>
        <long-description>&lt;p&gt;All your model plugins must inherit form this class.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="FluxAPI" package="Default">
        <name>$_data</name>
        <default>array()</default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
          <tag line="13" name="var" description="Internal data" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="21" namespace="FluxAPI" package="Default">
        <name>$_loaded_relations</name>
        <default>array()</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="var" description="Internal lookup of already (lazy) loaded relation fields" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="FluxAPI" package="Default">
        <name>$_fields</name>
        <default>array()</default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag line="23" name="var" description="Internal list of field definitions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="FluxAPI" package="Default">
        <name>$_modified</name>
        <default>false</default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag line="28" name="var" description="Internal flag that's true if the model instance was modified since it was loaded" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="FluxAPI" package="Default">
        <name>$_api</name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag line="33" name="var" description="Api instance" type="\FluxAPI\Api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="43" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="38" name="param" description="if set the model will contain that initial data" type="\FluxAPI\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="59" package="FluxAPI">
        <name>addField</name>
        <full_name>addField</full_name>
        <docblock line="52">
          <description>Adds a new field definition to the model</description>
          <long-description></long-description>
          <tag line="52" name="chainable" description=""/>
          <tag line="52" name="param" description="" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
          <tag line="52" name="return" description="$this" type="\FluxAPI\Model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="72" package="FluxAPI">
        <name>getField</name>
        <full_name>getField</full_name>
        <docblock line="66">
          <description>Returns a field definition by it's name</description>
          <long-description></long-description>
          <tag line="66" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="" type="null|\FluxAPI\Field">
            <type by_reference="false">null</type>
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="86" package="FluxAPI">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="81">
          <description>Returns all field definitions of this model</description>
          <long-description></long-description>
          <tag line="81" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="96" package="FluxAPI">
        <name>getRelationFields</name>
        <full_name>getRelationFields</full_name>
        <docblock line="91">
          <description>Returns all relation fields of this model</description>
          <long-description></long-description>
          <tag line="91" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="114" package="FluxAPI">
        <name>hasField</name>
        <full_name>hasField</full_name>
        <docblock line="108">
          <description>Checks if a field exists in the model</description>
          <long-description></long-description>
          <tag line="108" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="return" description="true if field exists, else false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="122" package="FluxAPI">
        <name>defineFields</name>
        <full_name>defineFields</full_name>
        <docblock line="119">
          <description>Defines field definitions of this model.</description>
          <long-description>&lt;p&gt;Extend this method in child classes while calling parent::defineFields()&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="FluxAPI" line="136" package="FluxAPI">
        <name>_setDefaults</name>
        <full_name>_setDefaults</full_name>
        <docblock line="133">
          <description>Internal method to set default field values.</description>
          <long-description>&lt;p&gt;Called automatically in the constructor.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="148" package="FluxAPI">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="143">
          <description>Populates the model instance with the given data.</description>
          <long-description></long-description>
          <tag line="143" name="param" description="" type="\FluxAPI\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="161" package="FluxAPI">
        <name>getClassName</name>
        <full_name>getClassName</full_name>
        <docblock line="156">
          <description>Returns the full class name of the model</description>
          <long-description></long-description>
          <tag line="156" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="171" package="FluxAPI">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
        <docblock line="166">
          <description>Returns the model name which is basically the last part of the full class name.</description>
          <long-description></long-description>
          <tag line="166" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="181" package="FluxAPI">
        <name>isNew</name>
        <full_name>isNew</full_name>
        <docblock line="177">
          <description>Checks if the model instance is new or already existing in the storage</description>
          <long-description></long-description>
          <tag line="177" name="return" description="true if the model instance is new, else false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="190" package="FluxAPI">
        <name>isModified</name>
        <full_name>isModified</full_name>
        <docblock line="186">
          <description>Checks if the model instance was modified since it was loaded</description>
          <long-description></long-description>
          <tag line="186" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="201" package="FluxAPI">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="195">
          <description>Returns a magic property (a fields value)</description>
          <long-description></long-description>
          <tag line="195" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="" type="null|mixed">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="226" package="FluxAPI">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="220">
          <description>Sets a magic property (a fields value)</description>
          <long-description></long-description>
          <tag line="220" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="220" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="226">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="245" package="FluxAPI">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="239">
          <description>Checks if a magic property (a fields value) isset</description>
          <long-description></long-description>
          <tag line="239" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="245">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="254" package="FluxAPI">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="250">
          <description>Unsets a magic property (a fields value)</description>
          <long-description></long-description>
          <tag line="250" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="254">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="264" package="FluxAPI">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="259">
          <description>Magic method to return a string represantation of the model</description>
          <long-description></long-description>
          <tag line="259" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="274" package="FluxAPI">
        <name>toArray</name>
        <full_name>toArray</full_name>
        <docblock line="269">
          <description>Returns an array represantation of the model</description>
          <long-description></long-description>
          <tag line="269" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="290" package="FluxAPI">
        <name>toString</name>
        <full_name>toString</full_name>
        <docblock line="285">
          <description>Returns a string represantation of the model</description>
          <long-description></long-description>
          <tag line="285" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="300" package="FluxAPI">
        <name>toJson</name>
        <full_name>toJson</full_name>
        <docblock line="295">
          <description>Returns a JSON string represantation of the model</description>
          <long-description></long-description>
          <tag line="295" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="311" package="FluxAPI">
        <name>toXml</name>
        <full_name>toXml</full_name>
        <docblock line="306">
          <description>Returns a XML string represantation of the model</description>
          <long-description></long-description>
          <tag line="306" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="323" package="FluxAPI">
        <name>toYaml</name>
        <full_name>toYaml</full_name>
        <docblock line="318">
          <description>Returns a YAML string represantation of the model</description>
          <long-description></long-description>
          <tag line="318" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="338" package="FluxAPI">
        <name>fromArray</name>
        <full_name>fromArray</full_name>
        <docblock line="332">
          <description>Returns a new instance with data from an array</description>
          <long-description></long-description>
          <tag line="332" name="param" description="" type="\FluxAPI\[array" variable="$data]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
          <tag line="332" name="return" description="" type="\FluxAPI\Model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
        </docblock>
        <argument line="338">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="350" package="FluxAPI">
        <name>fromObject</name>
        <full_name>fromObject</full_name>
        <docblock line="344">
          <description>Returns a new instance with data form an object</description>
          <long-description></long-description>
          <tag line="344" name="param" description="" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="344" name="return" description="" type="\FluxAPI\Model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
        </docblock>
        <argument line="350">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="368" package="FluxAPI">
        <name>fromJson</name>
        <full_name>fromJson</full_name>
        <docblock line="362">
          <description>Returns a new instance with data from a JSON string</description>
          <long-description></long-description>
          <tag line="362" name="param" description="" type="string" variable="$json">
            <type by_reference="false">string</type>
          </tag>
          <tag line="362" name="return" description="" type="\FluxAPI\Model|null">
            <type by_reference="false">\FluxAPI\Model</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$json</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="389" package="FluxAPI">
        <name>fromXml</name>
        <full_name>fromXml</full_name>
        <docblock line="383">
          <description>Returns a new instance with data from a XML string</description>
          <long-description></long-description>
          <tag line="383" name="param" description="" type="string" variable="$xml">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="return" description="" type="\FluxAPI\Model|null">
            <type by_reference="false">\FluxAPI\Model</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="389">
          <name>$xml</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="411" package="FluxAPI">
        <name>fromYaml</name>
        <full_name>fromYaml</full_name>
        <docblock line="405">
          <description>Returns a new instance with data from a YAML string</description>
          <long-description></long-description>
          <tag line="405" name="param" description="" type="string" variable="$yaml">
            <type by_reference="false">string</type>
          </tag>
          <tag line="405" name="return" description="" type="\FluxAPI\Model|null">
            <type by_reference="false">\FluxAPI\Model</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="411">
          <name>$yaml</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Model.php</error>
      <error line="38" code="50014">Name of argument $data does not match with the DocBlock's name $data] in __construct()</error>
      <notice line="38" code="50013">Parameter $data] could not be found in __construct()</notice>
      <error line="143" code="50014">Name of argument $data does not match with the DocBlock's name $data] in populate()</error>
      <error line="143" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $data in populate()</error>
      <notice line="143" code="50013">Parameter $data] could not be found in populate()</notice>
      <error line="332" code="50014">Name of argument $data does not match with the DocBlock's name $data] in fromArray()</error>
      <error line="332" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $data in fromArray()</error>
      <notice line="332" code="50013">Parameter $data] could not be found in fromArray()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/Storage.php" hash="49cc04433d2e9ef7f2b7e895d6fb7d03" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="13" package="FluxAPI">
      <extends/>
      <name>Storage</name>
      <full_name>\FluxAPI\Storage</full_name>
      <docblock line="6">
        <description>Data storage plugin</description>
        <long-description>&lt;p&gt;All your storage plugins must inherit from this&lt;/p&gt;</long-description>
        <tag line="6" name="package" description="FluxAPI"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="18" namespace="FluxAPI" package="Default">
        <name>$_api</name>
        <default>NULL</default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
          <tag line="15" name="var" description="Internal Api instance" type="\FluxAPI\Api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="FluxAPI" package="Default">
        <name>$_filters</name>
        <default>array()</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag line="20" name="var" description="Internal list of registered filters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="FluxAPI" package="Default">
        <name>$config</name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag line="25" name="var" description="Configuration" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="36" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="30" name="param" description="" type="\FluxAPI\Api" variable="$api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
          <tag line="30" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
        <argument line="36">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="50" package="FluxAPI">
        <name>getCollectionName</name>
        <full_name>getCollectionName</full_name>
        <docblock line="44">
          <description>Returns the collection name from a given model instance</description>
          <long-description></long-description>
          <tag line="44" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="44" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="78" package="FluxAPI">
        <name>addFilters</name>
        <full_name>addFilters</full_name>
        <docblock line="55">
          <description>Adds/registers all filters available in this storage</description>
          <long-description>&lt;p&gt;Use this method in child classes to add aditional filters while calling parent::addFilters().&lt;/p&gt;

&lt;p&gt;Default filters are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;select&lt;/li&gt;
&lt;li&gt;equal or =&lt;/li&gt;
&lt;li&gt;not or !=&lt;/li&gt;
&lt;li&gt;gt or &gt;&lt;/li&gt;
&lt;li&gt;gte or &gt;=&lt;/li&gt;
&lt;li&gt;lt or &amp;lt;&lt;/li&gt;
&lt;li&gt;lte or &amp;lt;=&lt;/li&gt;
&lt;li&gt;range&lt;/li&gt;
&lt;li&gt;order&lt;/li&gt;
&lt;li&gt;limit&lt;/li&gt;
&lt;li&gt;count&lt;/li&gt;
&lt;li&gt;like&lt;/li&gt;
&lt;li&gt;in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your storage plugin should at least implement those filters.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="109" package="FluxAPI">
        <name>addFilter</name>
        <full_name>addFilter</full_name>
        <docblock line="101">
          <description>Adds/registers a new filter</description>
          <long-description></long-description>
          <tag line="101" name="chainable" description=""/>
          <tag line="101" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="" type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="return" description="$this" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="123" package="FluxAPI">
        <name>hasFilter</name>
        <full_name>hasFilter</full_name>
        <docblock line="117">
          <description>Checks if a filter exists</description>
          <long-description></long-description>
          <tag line="117" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="117" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="134" package="FluxAPI">
        <name>getFilter</name>
        <full_name>getFilter</full_name>
        <docblock line="128">
          <description>Returns a filters callback</description>
          <long-description></long-description>
          <tag line="128" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="return" description="callback string or null if not found" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="148" package="FluxAPI">
        <name>getFilters</name>
        <full_name>getFilters</full_name>
        <docblock line="143">
          <description>Returns all existing filters</description>
          <long-description></long-description>
          <tag line="143" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="160" package="FluxAPI">
        <name>executeFilter</name>
        <full_name>executeFilter</full_name>
        <docblock line="153">
          <description>Executes the callback of a given filter</description>
          <long-description></long-description>
          <tag line="153" name="param" description="" type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="param" description="parameters passed to the $callback function" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="153" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
        <argument line="160">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="173" package="FluxAPI">
        <name>filterSelect</name>
        <full_name>filterSelect</full_name>
        <docblock line="165">
          <description>'select' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="165" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="165" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="173">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="186" package="FluxAPI">
        <name>filterEqual</name>
        <full_name>filterEqual</full_name>
        <docblock line="178">
          <description>'equal' or '=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="178" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="178" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="186">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="199" package="FluxAPI">
        <name>filterNotEqual</name>
        <full_name>filterNotEqual</full_name>
        <docblock line="191">
          <description>'not' or '!=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="191" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="191" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="199">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="199">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="212" package="FluxAPI">
        <name>filterGreaterThen</name>
        <full_name>filterGreaterThen</full_name>
        <docblock line="204">
          <description>'gt' or '&gt;' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="204" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="204" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="212">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="225" package="FluxAPI">
        <name>filterGreaterThenOrEqual</name>
        <full_name>filterGreaterThenOrEqual</full_name>
        <docblock line="217">
          <description>'gte' or '&gt;=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="217" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="217" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="225">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="238" package="FluxAPI">
        <name>filterLessThen</name>
        <full_name>filterLessThen</full_name>
        <docblock line="230">
          <description>'lt' or '&lt;' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="230" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="230" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="238">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="251" package="FluxAPI">
        <name>filterLessThenOrEqual</name>
        <full_name>filterLessThenOrEqual</full_name>
        <docblock line="243">
          <description>'lte' or '&lt;=' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="243" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="243" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="251">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="264" package="FluxAPI">
        <name>filterRange</name>
        <full_name>filterRange</full_name>
        <docblock line="256">
          <description>'range' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="256" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="256" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="264">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="277" package="FluxAPI">
        <name>filterOrder</name>
        <full_name>filterOrder</full_name>
        <docblock line="269">
          <description>'order' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="269" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="269" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="277">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="277">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="290" package="FluxAPI">
        <name>filterLimit</name>
        <full_name>filterLimit</full_name>
        <docblock line="282">
          <description>'limit' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="282" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="282" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="290">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="303" package="FluxAPI">
        <name>filterCount</name>
        <full_name>filterCount</full_name>
        <docblock line="295">
          <description>'count' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="295" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="295" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="303">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="303">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="316" package="FluxAPI">
        <name>filterLike</name>
        <full_name>filterLike</full_name>
        <docblock line="308">
          <description>'like' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="308" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="308" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="329" package="FluxAPI">
        <name>filterIn</name>
        <full_name>filterIn</full_name>
        <docblock line="321">
          <description>'in' filter implementation.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="321" name="param" description="some kind of query builder object" type="\FluxAPI\" variable="$qb"/>
          <tag line="321" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$qb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="342" package="FluxAPI">
        <name>getLastId</name>
        <full_name>getLastId</full_name>
        <docblock line="334">
          <description>Returns last inserted ID of a given model type</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="334" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="354" package="FluxAPI">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="347">
          <description>Returns the total count of a model (or the model by a query)</description>
          <long-description></long-description>
          <tag line="347" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="347" name="param" description="" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="347" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="354">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="373" package="FluxAPI">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="366">
          <description>Checks if a given model instance already exists in the storage</description>
          <long-description></long-description>
          <tag line="366" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="366" name="param" description="" type="\FluxAPI\Model" variable="$instance">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="366" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="373">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="373">
          <name>$instance</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="395" package="FluxAPI">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="388">
          <description>Saves/updates a given model instance to the storage</description>
          <long-description></long-description>
          <tag line="388" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="388" name="param" description="" type="\FluxAPI\Model" variable="$instance">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="388" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="395">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="395">
          <name>$instance</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="460" package="FluxAPI">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="453">
          <description>Loads instances of a model from the storage</description>
          <long-description></long-description>
          <tag line="453" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="453" name="param" description="if not set all model instances will be loaded" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="453" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="460">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="460">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="479" package="FluxAPI">
        <name>loadRelation</name>
        <full_name>loadRelation</full_name>
        <docblock line="470">
          <description>Loads a single or a list of related models of a model instance.</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="470" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="470" name="param" description="name of the relation field in the model instance" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="470" name="return" description="" type="\FluxAPI\Model|array">
            <type by_reference="false">\FluxAPI\Model</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="479">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="479">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="493" package="FluxAPI">
        <name>addRelation</name>
        <full_name>addRelation</full_name>
        <docblock line="484">
          <description>Makes a model to model relation persistante in the storage</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="484" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="484" name="param" description="" type="\FluxAPI\Model" variable="$relation">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="484" name="param" description="the relation field in the $model" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="493">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="493">
          <name>$relation</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="493">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="505" package="FluxAPI">
        <name>removeRelation</name>
        <full_name>removeRelation</full_name>
        <docblock line="498">
          <description>Removes a model to model relation from the storage.</description>
          <long-description></long-description>
          <tag line="498" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="498" name="param" description="" type="\FluxAPI\Model" variable="$relation">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="498" name="param" description="the relation field in the $model" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
        </docblock>
        <argument line="505">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="505">
          <name>$relation</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="505">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="519" package="FluxAPI">
        <name>removeAllRelations</name>
        <full_name>removeAllRelations</full_name>
        <docblock line="510">
          <description>Removes all model to model relations from the storage</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="510" name="param" description="" type="\FluxAPI\Model" variable="$model">
            <type by_reference="false">\FluxAPI\Model</type>
          </tag>
          <tag line="510" name="param" description="the relation field in the $model" type="\FluxAPI\Field" variable="$field">
            <type by_reference="false">\FluxAPI\Field</type>
          </tag>
          <tag line="510" name="param" description="if set related models with the given IDs are not removed" type="\FluxAPI\[array" variable="$exclude_ids]">
            <type by_reference="false">\FluxAPI\[array</type>
          </tag>
        </docblock>
        <argument line="519">
          <name>$model</name>
          <default></default>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="519">
          <name>$field</name>
          <default></default>
          <type>\FluxAPI\Field</type>
        </argument>
        <argument line="519">
          <name>$exclude_ids</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="532" package="FluxAPI">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="524">
          <description>Updates a list of models in the storage with given data</description>
          <long-description></long-description>
          <tag line="524" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="524" name="param" description="if null all models will be updated" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="524" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="524" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="532">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="532">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
        <argument line="532">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="550" package="FluxAPI">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="543">
          <description>Deletes a list of models from the storage</description>
          <long-description></long-description>
          <tag line="543" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="543" name="param" description="if null all models will be deleted" type="\FluxAPI\[Query" variable="$query]">
            <type by_reference="false">\FluxAPI\[Query</type>
          </tag>
          <tag line="543" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="550">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="550">
          <name>$query</name>
          <default>NULL</default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="569" package="FluxAPI">
        <name>executeQuery</name>
        <full_name>executeQuery</full_name>
        <docblock line="561">
          <description>Executes a query</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="561" name="param" description="" type="\FluxAPI\Query" variable="$query">
            <type by_reference="false">\FluxAPI\Query</type>
          </tag>
          <tag line="561" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="569">
          <name>$query</name>
          <default></default>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="587" package="FluxAPI">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="580">
          <description>Checks if the storage plugin is already connected to the storage host (e.g.</description>
          <long-description>&lt;p&gt;Database)&lt;/p&gt;

&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="580" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="597" package="FluxAPI">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="592">
          <description>Connects the storage plugin to the storage host (e.g.</description>
          <long-description>&lt;p&gt;Database)&lt;/p&gt;

&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="609" package="FluxAPI">
        <name>getConnection</name>
        <full_name>getConnection</full_name>
        <docblock line="602">
          <description>Returns a handler to the storage host (e.g.</description>
          <long-description>&lt;p&gt;Database)&lt;/p&gt;

&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="602" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="621" package="FluxAPI">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <docblock line="614">
          <description>Migrates the storage structure to all or a single model definition</description>
          <long-description>&lt;p&gt;Override this in your storage plugin.&lt;/p&gt;</long-description>
          <tag line="614" name="param" description="" type="\FluxAPI\[string" variable="$model]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
        </docblock>
        <argument line="621">
          <name>$model</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Storage.php</error>
      <error line="347" code="50014">Name of argument $query does not match with the DocBlock's name $query] in count()</error>
      <error line="347" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in count()</error>
      <notice line="347" code="50013">Parameter $query] could not be found in count()</notice>
      <error line="453" code="50014">Name of argument $query does not match with the DocBlock's name $query] in load()</error>
      <error line="453" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in load()</error>
      <notice line="453" code="50013">Parameter $query] could not be found in load()</notice>
      <error line="510" code="50014">Name of argument $exclude_ids does not match with the DocBlock's name $exclude_ids] in removeAllRelations()</error>
      <error line="510" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $exclude_ids in removeAllRelations()</error>
      <notice line="510" code="50013">Parameter $exclude_ids] could not be found in removeAllRelations()</notice>
      <error line="524" code="50014">Name of argument $query does not match with the DocBlock's name $query] in update()</error>
      <error line="524" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in update()</error>
      <notice line="524" code="50013">Parameter $query] could not be found in update()</notice>
      <error line="543" code="50014">Name of argument $query does not match with the DocBlock's name $query] in delete()</error>
      <error line="543" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $query in delete()</error>
      <notice line="543" code="50013">Parameter $query] could not be found in delete()</notice>
      <error line="614" code="50014">Name of argument $model does not match with the DocBlock's name $model] in migrate()</error>
      <notice line="614" code="50013">Parameter $model] could not be found in migrate()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/Plugin.php" hash="c8d5c63bebdb6693d6f68652c6d4d0c9" package="Default">
    <class final="false" abstract="true" namespace="FluxAPI" line="13" package="FluxAPI">
      <extends/>
      <name>Plugin</name>
      <full_name>\FluxAPI\Plugin</full_name>
      <docblock line="4">
        <description>A general plugin</description>
        <long-description>&lt;p&gt;All general plugins must inherit from this.
General plugins do not fall into one of the following categories: Model, Storage, Cache, Permission, Controller
For these categories special base classes exist.&lt;/p&gt;</long-description>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="FluxAPI" line="22" package="FluxAPI">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="15">
          <description>Called when the plugin get's registered</description>
          <long-description>&lt;p&gt;Use this method to make your plugin magic.&lt;/p&gt;</long-description>
          <tag line="15" name="param" description="" type="\FluxAPI\Api" variable="$api">
            <type by_reference="false">\FluxAPI\Api</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$api</name>
          <default></default>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Plugin.php</error>
    </parse_markers>
  </file>
  <file path="FluxAPI/Query.php" hash="dc685eaf118eef5750b85d8d3eda73ff" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="8" package="FluxAPI">
      <extends/>
      <name>Query</name>
      <full_name>\FluxAPI\Query</full_name>
      <docblock line="4">
        <description>A Storage Query</description>
        <long-description/>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <constant namespace="FluxAPI" line="35" package="FluxAPI">
        <name>TYPE_UPDATE</name>
        <full_name>TYPE_UPDATE</full_name>
        <value>'update'</value>
      </constant>
      <constant namespace="FluxAPI" line="36" package="FluxAPI">
        <name>TYPE_INSERT</name>
        <full_name>TYPE_INSERT</full_name>
        <value>'insert'</value>
      </constant>
      <constant namespace="FluxAPI" line="37" package="FluxAPI">
        <name>TYPE_DELETE</name>
        <full_name>TYPE_DELETE</full_name>
        <value>'delete'</value>
      </constant>
      <constant namespace="FluxAPI" line="38" package="FluxAPI">
        <name>TYPE_SELECT</name>
        <full_name>TYPE_SELECT</full_name>
        <value>'select'</value>
      </constant>
      <constant namespace="FluxAPI" line="39" package="FluxAPI">
        <name>TYPE_COUNT</name>
        <full_name>TYPE_COUNT</full_name>
        <value>'count'</value>
      </constant>
      <property final="false" static="false" visibility="private" line="13" namespace="FluxAPI" package="Default">
        <name>$_filters</name>
        <default>array()</default>
        <docblock line="10">
          <description/>
          <long-description/>
          <tag line="10" name="var" description="Internal list of added filters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="18" namespace="FluxAPI" package="Default">
        <name>$_model</name>
        <default>NULL</default>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="Model this query is related to" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="23" namespace="FluxAPI" package="Default">
        <name>$_storage</name>
        <default>NULL</default>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="the storage using this query" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="28" namespace="FluxAPI" package="Default">
        <name>$_type</name>
        <default>NULL</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="The query type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="FluxAPI" package="Default">
        <name>$_data</name>
        <default>array()</default>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="var" description="Internal values for a INSERT or UPDATE query" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="44" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="41">
          <description>Constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="57" package="FluxAPI">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="49">
          <description>Adds a new query filter</description>
          <long-description/>
          <tag line="49" name="chainable" description=""/>
          <tag line="49" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="return" description="$this" type="\FluxAPI\Query">
            <type by_reference="false">\FluxAPI\Query</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="68" package="FluxAPI">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="63">
          <description>Executes the query and returns the query results (if any)</description>
          <long-description/>
          <tag line="63" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="79" package="FluxAPI">
        <name>getFilters</name>
        <full_name>getFilters</full_name>
        <docblock line="73">
          <description>Returns a list of query filters</description>
          <long-description/>
          <tag line="73" name="param" description="if set it will return all filters of same name" type="\FluxAPI\[string" variable="$name]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="73" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$name</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="102" package="FluxAPI">
        <name>hasFilter</name>
        <full_name>hasFilter</full_name>
        <docblock line="96">
          <description>Checks if the query has filter(s) of a given name</description>
          <long-description/>
          <tag line="96" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="120" package="FluxAPI">
        <name>setStorage</name>
        <full_name>setStorage</full_name>
        <docblock line="115">
          <description>Sets the storage this query belongs to</description>
          <long-description/>
          <tag line="115" name="param" description="" type="\FluxAPI\Storage" variable="$storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$storage</name>
          <default/>
          <type>\FluxAPI\Storage</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="130" package="FluxAPI">
        <name>getStorage</name>
        <full_name>getStorage</full_name>
        <docblock line="125">
          <description>Returns the storage this query belongs to</description>
          <long-description/>
          <tag line="125" name="return" description="" type="\FluxAPI\Storage">
            <type by_reference="false">\FluxAPI\Storage</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="140" package="FluxAPI">
        <name>setModel</name>
        <full_name>setModel</full_name>
        <docblock line="135">
          <description>Sets the model this query is related with</description>
          <long-description/>
          <tag line="135" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="150" package="FluxAPI">
        <name>getModel</name>
        <full_name>getModel</full_name>
        <docblock line="145">
          <description>Returns the model this query is related with</description>
          <long-description/>
          <tag line="145" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="160" package="FluxAPI">
        <name>setType</name>
        <full_name>setType</full_name>
        <docblock line="155">
          <description>Sets the query type</description>
          <long-description/>
          <tag line="155" name="param" description="Possible values are: Query::TYPE_INSERT, Query::TYPE_UPDATE, Query::TYPE_DELETE, Query::TYPE_SELECT, Query::TYPE_COUNT" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="172" package="FluxAPI">
        <name>getType</name>
        <full_name>getType</full_name>
        <docblock line="167">
          <description>Returns the query type</description>
          <long-description/>
          <tag line="167" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="182" package="FluxAPI">
        <name>setData</name>
        <full_name>setData</full_name>
        <docblock line="177">
          <description>Sets the values for insert and update queries</description>
          <long-description/>
          <tag line="177" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="193" package="FluxAPI">
        <name>hasData</name>
        <full_name>hasData</full_name>
        <docblock line="187">
          <description>Checks if this query has values</description>
          <long-description/>
          <tag line="187" name="param" description="if set it will check if a value for a given field name is present" type="\FluxAPI\[string" variable="$field]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="187" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$field</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="209" package="FluxAPI">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="203">
          <description>Returns the values of this query</description>
          <long-description/>
          <tag line="203" name="param" description="if set only the value of a given field name will be returned" type="\FluxAPI\[string" variable="$field]">
            <type by_reference="false">\FluxAPI\[string</type>
          </tag>
          <tag line="203" name="return" description="" type="array|mixed|null">
            <type by_reference="false">array</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$field</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Query.php</error>
      <error line="73" code="50014">Name of argument $name does not match with the DocBlock's name $name] in getFilters()</error>
      <notice line="73" code="50013">Parameter $name] could not be found in getFilters()</notice>
      <error line="187" code="50014">Name of argument $field does not match with the DocBlock's name $field] in hasData()</error>
      <notice line="187" code="50013">Parameter $field] could not be found in hasData()</notice>
      <error line="203" code="50014">Name of argument $field does not match with the DocBlock's name $field] in getData()</error>
      <notice line="203" code="50013">Parameter $field] could not be found in getData()</notice>
    </parse_markers>
  </file>
  <file path="FluxAPI/Field.php" hash="829b7bf47b89238e958b22f7a7e6f349" package="Default">
    <class final="false" abstract="false" namespace="FluxAPI" line="8" package="FluxAPI">
      <extends/>
      <name>Field</name>
      <full_name>\FluxAPI\Field</full_name>
      <docblock line="4">
        <description>A Models field definition</description>
        <long-description/>
        <tag line="4" name="package" description="FluxAPI"/>
      </docblock>
      <constant namespace="FluxAPI" line="56" package="FluxAPI">
        <name>TYPE_STRING</name>
        <full_name>TYPE_STRING</full_name>
        <value>'string'</value>
      </constant>
      <constant namespace="FluxAPI" line="57" package="FluxAPI">
        <name>TYPE_BINARY</name>
        <full_name>TYPE_BINARY</full_name>
        <value>'binary'</value>
      </constant>
      <constant namespace="FluxAPI" line="58" package="FluxAPI">
        <name>TYPE_INTEGER</name>
        <full_name>TYPE_INTEGER</full_name>
        <value>'integer'</value>
      </constant>
      <constant namespace="FluxAPI" line="59" package="FluxAPI">
        <name>TYPE_FLOAT</name>
        <full_name>TYPE_FLOAT</full_name>
        <value>'float'</value>
      </constant>
      <constant namespace="FluxAPI" line="60" package="FluxAPI">
        <name>TYPE_LONGSTRING</name>
        <full_name>TYPE_LONGSTRING</full_name>
        <value>'longstring'</value>
      </constant>
      <constant namespace="FluxAPI" line="61" package="FluxAPI">
        <name>TYPE_DATE</name>
        <full_name>TYPE_DATE</full_name>
        <value>'date'</value>
      </constant>
      <constant namespace="FluxAPI" line="62" package="FluxAPI">
        <name>TYPE_TIMESTAMP</name>
        <full_name>TYPE_TIMESTAMP</full_name>
        <value>'timestamp'</value>
      </constant>
      <constant namespace="FluxAPI" line="63" package="FluxAPI">
        <name>TYPE_ARRAY</name>
        <full_name>TYPE_ARRAY</full_name>
        <value>'array'</value>
      </constant>
      <constant namespace="FluxAPI" line="64" package="FluxAPI">
        <name>TYPE_OBJECT</name>
        <full_name>TYPE_OBJECT</full_name>
        <value>'object'</value>
      </constant>
      <constant namespace="FluxAPI" line="65" package="FluxAPI">
        <name>TYPE_RELATION</name>
        <full_name>TYPE_RELATION</full_name>
        <value>'relation'</value>
      </constant>
      <constant namespace="FluxAPI" line="67" package="FluxAPI">
        <name>HAS_ONE</name>
        <full_name>HAS_ONE</full_name>
        <value>'has_one'</value>
      </constant>
      <constant namespace="FluxAPI" line="68" package="FluxAPI">
        <name>HAS_MANY</name>
        <full_name>HAS_MANY</full_name>
        <value>'has_many'</value>
      </constant>
      <constant namespace="FluxAPI" line="69" package="FluxAPI">
        <name>BELONGS_TO_ONE</name>
        <full_name>BELONGS_TO_ONE</full_name>
        <value>'belongs_to_one'</value>
      </constant>
      <constant namespace="FluxAPI" line="70" package="FluxAPI">
        <name>BELONGS_TO_MANY</name>
        <full_name>BELONGS_TO_MANY</full_name>
        <value>'belongs_to_many'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="13" namespace="FluxAPI" package="Default">
        <name>$name</name>
        <default>NULL</default>
        <docblock line="10">
          <description/>
          <long-description/>
          <tag line="10" name="var" description="Name of the field as stored in the storage" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="FluxAPI" package="Default">
        <name>$type</name>
        <default>NULL</default>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="Datatype of the field" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="FluxAPI" package="Default">
        <name>$unsigned</name>
        <default>FALSE</default>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="Signed or unsigned (used for integers and floats)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="FluxAPI" package="Default">
        <name>$length</name>
        <default>NULL</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="Maximum length of the fields value" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="FluxAPI" package="Default">
        <name>$default</name>
        <default>NULL</default>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="var" description="Default field value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="FluxAPI" package="Default">
        <name>$primary</name>
        <default>FALSE</default>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="var" description="Flag if field is primary (mostly used for IDs)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="FluxAPI" package="Default">
        <name>$unique</name>
        <default>FALSE</default>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="Flag if field value must be unique" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="48" namespace="FluxAPI" package="Default">
        <name>$autoIncrement</name>
        <default>FALSE</default>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="Flag to set field values to automaticly increase" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="FluxAPI" package="Default">
        <name>$relationType</name>
        <default>NULL</default>
        <docblock line="50">
          <description/>
          <long-description/>
          <tag line="50" name="var" description="If the $type is of Field::TYPE_RELATION this must be set to the relation type: Field::HAS_ONE, Field::BELONGS_TO_ONE, Field::HAS_MANY, Field::BELONGS_TO_MANY" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="54" namespace="FluxAPI" package="Default">
        <name>$relationModel</name>
        <default>NULL</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="FluxAPI" line="77" package="FluxAPI">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="72">
          <description>Constructor</description>
          <long-description/>
          <tag line="72" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file FluxAPI/Field.php</error>
      <error line="54" code="50018">No DocBlock was found for property $relationModel</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Storage/MySql.php" hash="6b37860725c65a567ee66e10964a73a9" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core\Storage" line="10" package="Default">
      <extends>\FluxAPI\Storage</extends>
      <name>MySql</name>
      <full_name>\Plugins\Core\Storage\MySql</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="12" package="Default">
        <name>addFilters</name>
        <full_name>addFilters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="19" package="Default">
        <name>filterSelect</name>
        <full_name>filterSelect</full_name>
        <argument line="19">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="19">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="25" package="Default">
        <name>filterEqual</name>
        <full_name>filterEqual</full_name>
        <argument line="25">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="25">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="33" package="Default">
        <name>filterNotEqual</name>
        <full_name>filterNotEqual</full_name>
        <argument line="33">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="39" package="Default">
        <name>filterGreaterThen</name>
        <full_name>filterGreaterThen</full_name>
        <argument line="39">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="45" package="Default">
        <name>filterGreaterThenOrEqual</name>
        <full_name>filterGreaterThenOrEqual</full_name>
        <argument line="45">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="51" package="Default">
        <name>filterLessThen</name>
        <full_name>filterLessThen</full_name>
        <argument line="51">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="57" package="Default">
        <name>filterLessThenOrEqual</name>
        <full_name>filterLessThenOrEqual</full_name>
        <argument line="57">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="63" package="Default">
        <name>filterRange</name>
        <full_name>filterRange</full_name>
        <argument line="63">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="72" package="Default">
        <name>filterOrder</name>
        <full_name>filterOrder</full_name>
        <argument line="72">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="72">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="78" package="Default">
        <name>filterLimit</name>
        <full_name>filterLimit</full_name>
        <argument line="78">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="85" package="Default">
        <name>filterCount</name>
        <full_name>filterCount</full_name>
        <argument line="85">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="85">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="91" package="Default">
        <name>filterLike</name>
        <full_name>filterLike</full_name>
        <argument line="91">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="97" package="Default">
        <name>filterIn</name>
        <full_name>filterIn</full_name>
        <argument line="97">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="97">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="119" package="Default">
        <name>filterJoin</name>
        <full_name>filterJoin</full_name>
        <argument line="119">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="119">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="138" package="Default">
        <name>filterInnerJoin</name>
        <full_name>filterInnerJoin</full_name>
        <argument line="138">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="138">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="143" package="Default">
        <name>filterLeftJoin</name>
        <full_name>filterLeftJoin</full_name>
        <argument line="143">
          <name>$qb</name>
          <default/>
          <type/>
        </argument>
        <argument line="143">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="149" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="154" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="168" package="Default">
        <name>getConnection</name>
        <full_name>getConnection</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="173" package="Default">
        <name>getLastId</name>
        <full_name>getLastId</full_name>
        <argument line="173">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="189" package="Default">
        <name>loadRelation</name>
        <full_name>loadRelation</full_name>
        <argument line="189">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="189">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="228" package="Default">
        <name>addRelation</name>
        <full_name>addRelation</full_name>
        <argument line="228">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="228">
          <name>$relation</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="228">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="254" package="Default">
        <name>removeRelation</name>
        <full_name>removeRelation</full_name>
        <argument line="254">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="254">
          <name>$relation</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="254">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="271" package="Default">
        <name>removeAllRelations</name>
        <full_name>removeAllRelations</full_name>
        <argument line="271">
          <name>$model</name>
          <default/>
          <type>\FluxAPI\Model</type>
        </argument>
        <argument line="271">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
        <argument line="271">
          <name>$exclude_ids</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="292" package="Default">
        <name>getTableName</name>
        <full_name>getTableName</full_name>
        <argument line="292">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="297" package="Default">
        <name>getTableNameFromModelClass</name>
        <full_name>getTableNameFromModelClass</full_name>
        <argument line="297">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="302" package="Default">
        <name>getRelationTableNameFromModelClass</name>
        <full_name>getRelationTableNameFromModelClass</full_name>
        <argument line="302">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="307" package="Default">
        <name>getRelationTableName</name>
        <full_name>getRelationTableName</full_name>
        <argument line="307">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="312" package="Default">
        <name>executeQuery</name>
        <full_name>executeQuery</full_name>
        <argument line="312">
          <name>$query</name>
          <default/>
          <type>\FluxAPI\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="422" package="Default">
        <name>getFieldType</name>
        <full_name>getFieldType</full_name>
        <argument line="422">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="436" package="Default">
        <name>getFieldConfig</name>
        <full_name>getFieldConfig</full_name>
        <argument line="436">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="455" package="Default">
        <name>getRelationField</name>
        <full_name>getRelationField</full_name>
        <argument line="455">
          <name>$field</name>
          <default/>
          <type>\FluxAPI\Field</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Storage" line="469" package="Default">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <argument line="469">
          <name>$model</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="493">split this into multiple methods</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Storage/MySql.php</error>
      <error line="10" code="50000">No DocBlock was found for \Plugins\Core\Storage\MySql</error>
      <error line="12" code="50010">No DocBlock was found for method addFilters()</error>
      <error line="19" code="50010">No DocBlock was found for method filterSelect()</error>
      <error line="25" code="50010">No DocBlock was found for method filterEqual()</error>
      <error line="33" code="50010">No DocBlock was found for method filterNotEqual()</error>
      <error line="39" code="50010">No DocBlock was found for method filterGreaterThen()</error>
      <error line="45" code="50010">No DocBlock was found for method filterGreaterThenOrEqual()</error>
      <error line="51" code="50010">No DocBlock was found for method filterLessThen()</error>
      <error line="57" code="50010">No DocBlock was found for method filterLessThenOrEqual()</error>
      <error line="63" code="50010">No DocBlock was found for method filterRange()</error>
      <error line="72" code="50010">No DocBlock was found for method filterOrder()</error>
      <error line="78" code="50010">No DocBlock was found for method filterLimit()</error>
      <error line="85" code="50010">No DocBlock was found for method filterCount()</error>
      <error line="91" code="50010">No DocBlock was found for method filterLike()</error>
      <error line="97" code="50010">No DocBlock was found for method filterIn()</error>
      <error line="119" code="50010">No DocBlock was found for method filterJoin()</error>
      <error line="138" code="50010">No DocBlock was found for method filterInnerJoin()</error>
      <error line="143" code="50010">No DocBlock was found for method filterLeftJoin()</error>
      <error line="149" code="50010">No DocBlock was found for method isConnected()</error>
      <error line="154" code="50010">No DocBlock was found for method connect()</error>
      <error line="168" code="50010">No DocBlock was found for method getConnection()</error>
      <error line="173" code="50010">No DocBlock was found for method getLastId()</error>
      <error line="189" code="50010">No DocBlock was found for method loadRelation()</error>
      <error line="228" code="50010">No DocBlock was found for method addRelation()</error>
      <error line="254" code="50010">No DocBlock was found for method removeRelation()</error>
      <error line="271" code="50010">No DocBlock was found for method removeAllRelations()</error>
      <error line="292" code="50010">No DocBlock was found for method getTableName()</error>
      <error line="297" code="50010">No DocBlock was found for method getTableNameFromModelClass()</error>
      <error line="302" code="50010">No DocBlock was found for method getRelationTableNameFromModelClass()</error>
      <error line="307" code="50010">No DocBlock was found for method getRelationTableName()</error>
      <error line="312" code="50010">No DocBlock was found for method executeQuery()</error>
      <error line="422" code="50010">No DocBlock was found for method getFieldType()</error>
      <error line="436" code="50010">No DocBlock was found for method getFieldConfig()</error>
      <error line="455" code="50010">No DocBlock was found for method getRelationField()</error>
      <error line="469" code="50010">No DocBlock was found for method migrate()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Model/Node.php" hash="55cc9402fddade26bae26574dfcc41fd" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core\Model" line="6" package="Default">
      <extends>\FluxAPI\Model</extends>
      <name>Node</name>
      <full_name>\Plugins\Core\Model\Node</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core\Model" line="8" package="Default">
        <name>defineFields</name>
        <full_name>defineFields</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Model/Node.php</error>
      <error line="6" code="50000">No DocBlock was found for \Plugins\Core\Model\Node</error>
      <error line="8" code="50010">No DocBlock was found for method defineFields()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Rest.php" hash="0d9d3f0961b66be9cc3bd2731bbafaa0" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core" line="4" package="Default">
      <extends/>
      <name>Rest</name>
      <full_name>\Plugins\Core\Rest</full_name>
      <property final="false" static="false" visibility="private" line="6" namespace="Plugins\Core" package="Default">
        <name>$_api</name>
        <default>NULL</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="8" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="8">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Plugins\Core" line="15" package="Default">
        <name>registerRoutes</name>
        <full_name>registerRoutes</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Rest.php</error>
      <error line="4" code="50000">No DocBlock was found for \Plugins\Core\Rest</error>
      <error line="6" code="50018">No DocBlock was found for property $_api</error>
      <error line="8" code="50010">No DocBlock was found for method __construct()</error>
      <error line="15" code="50010">No DocBlock was found for method registerRoutes()</error>
    </parse_markers>
  </file>
  <file path="Plugins/Core/Core.php" hash="64820e3e2f54e4dd35b39e6a7b04bf23" package="Default">
    <class final="false" abstract="false" namespace="Plugins\Core" line="4" package="Default">
      <extends>\FluxAPI\Plugin</extends>
      <name>Core</name>
      <full_name>\Plugins\Core\Core</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Plugins\Core" line="6" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <argument line="6">
          <name>$api</name>
          <default/>
          <type>\FluxAPI\Api</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Plugins/Core/Core.php</error>
      <error line="4" code="50000">No DocBlock was found for \Plugins\Core\Core</error>
      <error line="6" code="50010">No DocBlock was found for method register()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="FluxAPI" full_name="FluxAPI"/>
  <namespace name="FluxAPI" full_name="FluxAPI"/>
  <namespace name="Plugins" full_name="Plugins">
    <namespace name="Core" full_name="Plugins\Core">
      <namespace name="Model" full_name="Plugins\Core\Model"/>
      <namespace name="Storage" full_name="Plugins\Core\Storage"/>
    </namespace>
  </namespace>
  <marker count="1">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
